{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderUpdateContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport ProviderUpdateModal from 'components/provider/ProviderUpdateModal';\nimport DataFieldStore from 'store/DataField';\nimport ProviderStore from 'store/Provider';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\n\nconst axios = require('axios').default;\n\nconfigure({\n  axios: axiosInstance\n});\nexport default function ProviderUpdateContainer({\n  provider_id,\n  visible,\n  onCancel\n}) {\n  const datafieldStore = DataFieldStore.useContainer();\n  const providerStore = ProviderStore.useContainer();\n\n  const _useAxios = useAxios(`/providers/${provider_id}?scope=with_details`),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        data = _useAxios2[0].data;\n\n  useEffect(() => {\n    if (data) {\n      providerStore.updateOne(data);\n    }\n  }, [data, provider_id, providerStore.entities[provider_id]]); // useEffect(() => {\n  //     providerDetailedData(provider_id)\n  // }, [provider_id]);\n  // function providerDetailedData(provider_id) {\n  //     providerDetailedDataApi(provider_id).then(res => {\n  //         if (res.data) {\n  //             providerStore.updateOne(res.data);\n  //             // providerStore.updateMany(res.data);\n  //         }\n  //     }).catch(err => {\n  //         console.log('errror', err)\n  //     })\n  // }\n  // async function providerDetailedDataApi(provider_id) {\n  //     let Data = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/providers/${provider_id}?scope=with_details`)\n  //     return Data\n  // }\n\n  return /*#__PURE__*/React.createElement(ProviderUpdateModal, {\n    datafields: Object.values(datafieldStore.entities),\n    provider: providerStore.entities[provider_id],\n    visible: visible,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  });\n}\n\n__signature__(ProviderUpdateContainer, \"useContainer{datafieldStore}\\nuseContainer{providerStore}\\nuseAxios{[{ data }]}\\nuseEffect{}\", () => [useAxios]);\n\n;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderUpdateContainer.js\");\n  reactHotLoader.register(ProviderUpdateContainer, \"ProviderUpdateContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderUpdateContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderUpdateContainer.js"],"names":["React","useEffect","ProviderUpdateModal","DataFieldStore","ProviderStore","useAxios","configure","axiosInstance","axios","require","default","ProviderUpdateContainer","provider_id","visible","onCancel","datafieldStore","useContainer","providerStore","data","updateOne","entities","Object","values"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEAJ,SAAS,CAAC;AACNE,EAAAA,KAAK,EAAED;AADD,CAAD,CAAT;AAIA,eAAe,SAASI,uBAAT,CAAiC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAjC,EAAqE;AAChF,QAAMC,cAAc,GAAGZ,cAAc,CAACa,YAAf,EAAvB;AACA,QAAMC,aAAa,GAAGb,aAAa,CAACY,YAAd,EAAtB;;AAFgF,oBAI7DX,QAAQ,CAAE,cAAaO,WAAY,qBAA3B,CAJqD;AAAA;AAAA,QAIvEM,IAJuE,iBAIvEA,IAJuE;;AAMhFjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,IAAJ,EAAU;AACND,MAAAA,aAAa,CAACE,SAAd,CAAwBD,IAAxB;AACH;AACJ,GAJQ,EAIN,CAACA,IAAD,EAAON,WAAP,EAAoBK,aAAa,CAACG,QAAd,CAAuBR,WAAvB,CAApB,CAJM,CAAT,CANgF,CAYhF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACI,oBAAC,mBAAD;AACI,IAAA,UAAU,EAAES,MAAM,CAACC,MAAP,CAAcP,cAAc,CAACK,QAA7B,CADhB;AAEI,IAAA,QAAQ,EAAEH,aAAa,CAACG,QAAd,CAAuBR,WAAvB,CAFd;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,QAAQ,EAAEC,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;;cAvCuBH,uB,yGAIDN,Q;;AAmCtB;;;;;;;;;;0BA7CKG,K;0BAMkBG,uB","sourcesContent":["import React, { useEffect } from 'react';\nimport ProviderUpdateModal from 'components/provider/ProviderUpdateModal';\nimport DataFieldStore from 'store/DataField';\nimport ProviderStore from 'store/Provider';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\n\nconst axios = require('axios').default;\n\nconfigure({\n    axios: axiosInstance,\n})\n\nexport default function ProviderUpdateContainer({ provider_id, visible, onCancel }) {\n    const datafieldStore = DataFieldStore.useContainer();\n    const providerStore = ProviderStore.useContainer();\n\n    const [{ data }] = useAxios(`/providers/${provider_id}?scope=with_details`);\n\n    useEffect(() => {\n        if (data) {\n            providerStore.updateOne(data);\n        }\n    }, [data, provider_id, providerStore.entities[provider_id]]);\n\n    // useEffect(() => {\n    //     providerDetailedData(provider_id)\n    // }, [provider_id]);\n\n    // function providerDetailedData(provider_id) {\n    //     providerDetailedDataApi(provider_id).then(res => {\n    //         if (res.data) {\n    //             providerStore.updateOne(res.data);\n    //             // providerStore.updateMany(res.data);\n    //         }\n    //     }).catch(err => {\n    //         console.log('errror', err)\n    //     })\n    // }\n\n    // async function providerDetailedDataApi(provider_id) {\n    //     let Data = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/providers/${provider_id}?scope=with_details`)\n    //     return Data\n    // }\n\n    return (\n        <ProviderUpdateModal\n            datafields={Object.values(datafieldStore.entities)}\n            provider={providerStore.entities[provider_id]}\n            visible={visible}\n            onCancel={onCancel} />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
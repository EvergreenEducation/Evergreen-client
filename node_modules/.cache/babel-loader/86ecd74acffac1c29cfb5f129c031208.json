{"ast":null,"code":"var _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Table, Button, Tag } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nconst Column = Table.Column;\n\nconst ProviderButtons = ({\n  record,\n  handleUpdateModal,\n  viewEnrollments,\n  handleDeleteModal\n}) => {\n  let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"mr-2 rounded\",\n    onClick: e => {\n      e.stopPropagation();\n      handleUpdateModal(record);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"rounded\",\n    type: \"default\",\n    onClick: () => viewEnrollments(record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"View enrollments\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"mr-2 rounded\",\n    onClick: e => {\n      e.stopPropagation();\n      handleDeleteModal(record);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Delete\"));\n};\n\nconst StudentButtons = ({\n  record\n}) => {\n  return /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"mr-2 rounded\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"View My Class\");\n};\n\nconst ActionColumn = ({\n  role,\n  handleUpdateModal,\n  handleDeleteModal,\n  viewEnrollments,\n  handleEnrollOffer\n}) => {\n  return /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Actions\",\n    key: \"index\",\n    render: (text, record) => {\n      return {\n        children: role === 'student' ? /*#__PURE__*/React.createElement(StudentButtons, {\n          record: record,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }) : /*#__PURE__*/React.createElement(ProviderButtons, {\n          record: record,\n          handleUpdateModal: handleUpdateModal,\n          handleDeleteModal: handleDeleteModal,\n          viewEnrollments: viewEnrollments,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }),\n        props: {\n          'data-title': 'Actions'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function OfferTable({\n  data,\n  providers,\n  datafields,\n  handleUpdateModal,\n  handleDeleteModal,\n  handleRowSelection,\n  viewEnrollments,\n  role\n}) {\n  // console.log(\"daaaaaaaaaaaaaa\",data)\n  const doHandleRowSelection = role === 'student' ? null : (record, rowIndex) => {\n    return {\n      onClick: event => {\n        if (event.target.type === 'button') {\n          return;\n        }\n\n        handleRowSelection(record, rowIndex);\n      }\n    };\n  };\n  return /*#__PURE__*/React.createElement(Table, {\n    pagination: {\n      pageSize: 8\n    },\n    dataSource: data,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive ant-table-row-selectable\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    onRow: doHandleRowSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'data-title': 'ID'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'data-title': 'Name'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Location Type\",\n    dataIndex: \"location_type\",\n    key: \"location_type\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'data-title': 'location_type'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Category\",\n    dataIndex: \"category\",\n    key: \"category\",\n    render: id => {\n      let name = null;\n\n      if (datafields[id]) {\n        name = datafields[id].name;\n      }\n\n      return {\n        children: name,\n        props: {\n          'data-title': 'Category'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Provider\",\n    dataIndex: \"provider_id\",\n    key: \"provider_id\",\n    render: id => {\n      let name = 'N/A';\n\n      if (providers[id]) {\n        name = providers[id].name;\n      }\n\n      return {\n        children: name,\n        props: {\n          'data-title': 'Provider'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Topics\",\n    dataIndex: \"DataFields\",\n    key: \"DataFields\",\n    render: (datafields = [], record) => {\n      datafields = datafields.filter(d => d.type === 'topic');\n      let children = 'N/A';\n\n      if (datafields.length) {\n        children = /*#__PURE__*/React.createElement(React.Fragment, null, datafields.map((datafield, index) => {\n          if (datafield.type !== 'topic') {\n            return null;\n          }\n\n          return /*#__PURE__*/React.createElement(Tag, {\n            color: index % 2 ? 'blue' : 'orange',\n            key: index.toString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }\n          }, datafield.name);\n        }));\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Topics'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }), ActionColumn({\n    handleUpdateModal,\n    handleDeleteModal,\n    viewEnrollments,\n    role\n  }));\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\");\n  reactHotLoader.register(ProviderButtons, \"ProviderButtons\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\");\n  reactHotLoader.register(StudentButtons, \"StudentButtons\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\");\n  reactHotLoader.register(ActionColumn, \"ActionColumn\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\");\n  reactHotLoader.register(OfferTable, \"OfferTable\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferTable.js"],"names":["React","Table","Button","Tag","Column","ProviderButtons","record","handleUpdateModal","viewEnrollments","handleDeleteModal","token","JSON","parse","localStorage","getItem","e","stopPropagation","StudentButtons","ActionColumn","role","handleEnrollOffer","text","children","props","OfferTable","data","providers","datafields","handleRowSelection","doHandleRowSelection","rowIndex","onClick","event","target","type","pageSize","id","name","filter","d","length","map","datafield","index","toString"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,QAAmC,MAAnC;AACA,OAAO,iCAAP;MAEQC,M,GAAWH,K,CAAXG,M;;AAER,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,iBAAV;AAA6BC,EAAAA,eAA7B;AAA6CC,EAAAA;AAA7C,CAAD,KAAsE;AAC5F,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAZ;AAEA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,eAAF;AACAT,MAAAA,iBAAiB,CAACD,MAAD,CAAjB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,OAAO,EAAE,MAAME,eAAe,CAACF,MAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF,eAkBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,OAAO,EAAGS,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,eAAF;AACAP,MAAAA,iBAAiB,CAACH,MAAD,CAAjB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,CADF;AA+BD,CAlCD;;AAoCA,MAAMW,cAAc,GAAG,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAgB;AACrC,sBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,SAAS,EAAC,cAAjC;AAAgD,IAAA,OAAO,EAAE,MAAM,CAAE,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAKD,CAND;;AAQA,MAAMY,YAAY,GAAG,CAAC;AACpBC,EAAAA,IADoB;AAEpBZ,EAAAA,iBAFoB;AAGpBE,EAAAA,iBAHoB;AAIpBD,EAAAA,eAJoB;AAKpBY,EAAAA;AALoB,CAAD,KAMf;AACJ,sBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,GAAG,EAAC,OAHN;AAIE,IAAA,MAAM,EAAE,CAACC,IAAD,EAAOf,MAAP,KAAkB;AACxB,aAAO;AACLgB,QAAAA,QAAQ,EACNH,IAAI,KAAK,SAAT,gBACE,oBAAC,cAAD;AAAgB,UAAA,MAAM,EAAEb,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,gBAGE,oBAAC,eAAD;AACE,UAAA,MAAM,EAAEA,MADV;AAEE,UAAA,iBAAiB,EAAEC,iBAFrB;AAGE,UAAA,iBAAiB,EAAEE,iBAHrB;AAIE,UAAA,eAAe,EAAED,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALC;AAYLe,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAZF,OAAP;AAgBD,KArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAyBD,CAhCD;;AAkCA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,IADiC;AAEjCC,EAAAA,SAFiC;AAGjCC,EAAAA,UAHiC;AAIjCpB,EAAAA,iBAJiC;AAKjCE,EAAAA,iBALiC;AAMjCmB,EAAAA,kBANiC;AAOjCpB,EAAAA,eAPiC;AAQjCW,EAAAA;AARiC,CAApB,EASZ;AACD;AACA,QAAMU,oBAAoB,GACxBV,IAAI,KAAK,SAAT,GACI,IADJ,GAEI,CAACb,MAAD,EAASwB,QAAT,KAAsB;AACpB,WAAO;AACLC,MAAAA,OAAO,EAAGC,KAAD,IAAW;AAClB,YAAIA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,QAA1B,EAAoC;AAClC;AACD;;AACDN,QAAAA,kBAAkB,CAACtB,MAAD,EAASwB,QAAT,CAAlB;AACD;AANI,KAAP;AAQD,GAZP;AAaA,sBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KADd;AAEE,IAAA,UAAU,EAAEV,IAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,EAAC,wDAJZ;AAKE,IAAA,YAAY,EAAE,MAAM,UALtB;AAME,IAAA,MAAM,EAAC,IANT;AAOE,IAAA,KAAK,EAAEI,oBAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASG,oBAAC,MAAD;AACC,IAAA,SAAS,EAAC,UADX;AAEC,IAAA,KAAK,EAAC,IAFP;AAGC,IAAA,SAAS,EAAC,IAHX;AAIC,IAAA,GAAG,EAAC,IAJL;AAKC,IAAA,MAAM,EAAE,CAACR,IAAD,EAAOf,MAAP,MAAmB;AACzBgB,MAAAA,QAAQ,EAAED,IADe;AAEzBE,MAAAA,KAAK,EAAE;AACL,sBAAc;AADT;AAFkB,KAAnB,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,eAqBE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,GAAG,EAAC,MAJN;AAKE,IAAA,MAAM,EAAE,CAACF,IAAD,EAAOf,MAAP,MAAmB;AACzBgB,MAAAA,QAAQ,EAAED,IADe;AAEzBE,MAAAA,KAAK,EAAE;AACL,sBAAc;AADT;AAFkB,KAAnB,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eAiCG,oBAAC,MAAD;AACC,IAAA,SAAS,EAAC,UADX;AAEC,IAAA,KAAK,EAAC,eAFP;AAGC,IAAA,SAAS,EAAC,eAHX;AAIC,IAAA,GAAG,EAAC,eAJL;AAKC,IAAA,MAAM,EAAE,CAACF,IAAD,EAAOf,MAAP,MAAmB;AACzBgB,MAAAA,QAAQ,EAAED,IADe;AAEzBE,MAAAA,KAAK,EAAE;AACL,sBAAc;AADT;AAFkB,KAAnB,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCH,eA6CE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,GAAG,EAAC,UAJN;AAKE,IAAA,MAAM,EAAGa,EAAD,IAAQ;AACd,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAIV,UAAU,CAACS,EAAD,CAAd,EAAoB;AAClBC,QAAAA,IAAI,GAAGV,UAAU,CAACS,EAAD,CAAV,CAAeC,IAAtB;AACD;;AACD,aAAO;AACLf,QAAAA,QAAQ,EAAEe,IADL;AAELd,QAAAA,KAAK,EAAE;AAAE,wBAAc;AAAhB;AAFF,OAAP;AAID,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,eA6DE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,SAAS,EAAC,aAHZ;AAIE,IAAA,GAAG,EAAC,aAJN;AAKE,IAAA,MAAM,EAAGa,EAAD,IAAQ;AACd,UAAIC,IAAI,GAAG,KAAX;;AACA,UAAIX,SAAS,CAACU,EAAD,CAAb,EAAmB;AACjBC,QAAAA,IAAI,GAAGX,SAAS,CAACU,EAAD,CAAT,CAAcC,IAArB;AACD;;AACD,aAAO;AACLf,QAAAA,QAAQ,EAAEe,IADL;AAELd,QAAAA,KAAK,EAAE;AAAE,wBAAc;AAAhB;AAFF,OAAP;AAID,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7DF,eA6EE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,GAAG,EAAC,YAJN;AAKE,IAAA,MAAM,EAAE,CAACI,UAAU,GAAG,EAAd,EAAkBrB,MAAlB,KAA6B;AACnCqB,MAAAA,UAAU,GAAGA,UAAU,CAACW,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACL,IAAF,KAAW,OAApC,CAAb;AACA,UAAIZ,QAAQ,GAAG,KAAf;;AAEA,UAAIK,UAAU,CAACa,MAAf,EAAuB;AACrBlB,QAAAA,QAAQ,gBACN,0CACGK,UAAU,CAACc,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,cAAID,SAAS,CAACR,IAAV,KAAmB,OAAvB,EAAgC;AAC9B,mBAAO,IAAP;AACD;;AACD,8BACE,oBAAC,GAAD;AACE,YAAA,KAAK,EAAES,KAAK,GAAG,CAAR,GAAY,MAAZ,GAAqB,QAD9B;AAEE,YAAA,GAAG,EAAEA,KAAK,CAACC,QAAN,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGF,SAAS,CAACL,IAJb,CADF;AAQD,SAZA,CADH,CADF;AAiBD;;AAED,aAAO;AACLf,QAAAA,QADK;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7EF,EAkHGL,YAAY,CAAC;AACZX,IAAAA,iBADY;AAEZE,IAAAA,iBAFY;AAGZD,IAAAA,eAHY;AAIZW,IAAAA;AAJY,GAAD,CAlHf,CADF;AA2HD;;;;;;;;;;0BAnOOf,M;0BAEFC,e;0BAoCAY,c;0BAQAC,Y;0BAkCkBM,U","sourcesContent":["import React from 'react';\r\nimport { Table, Button, Tag } from 'antd';\r\nimport 'assets/scss/antd-overrides.scss';\r\n\r\nconst { Column } = Table;\r\n\r\nconst ProviderButtons = ({ record, handleUpdateModal, viewEnrollments,handleDeleteModal }) => {\r\n  let token = JSON.parse(localStorage.getItem(\"currentSession\"))\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"default\"\r\n        className=\"mr-2 rounded\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          handleUpdateModal(record);\r\n        }}\r\n      >\r\n        Update\r\n      </Button>\r\n      <Button\r\n        className=\"rounded\"\r\n        type=\"default\"\r\n        onClick={() => viewEnrollments(record)}\r\n      >\r\n        View enrollments\r\n      </Button>\r\n      <Button\r\n        type=\"default\"\r\n        className=\"mr-2 rounded\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          handleDeleteModal(record);\r\n        }}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StudentButtons = ({ record }) => {\r\n  return (\r\n    <Button type=\"default\" className=\"mr-2 rounded\" onClick={() => {}}>\r\n      View My Class\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ActionColumn = ({\r\n  role,\r\n  handleUpdateModal,\r\n  handleDeleteModal,\r\n  viewEnrollments,\r\n  handleEnrollOffer,\r\n}) => {\r\n  return (\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Actions\"\r\n      key=\"index\"\r\n      render={(text, record) => {\r\n        return {\r\n          children:\r\n            role === 'student' ? (\r\n              <StudentButtons record={record} />\r\n            ) : (\r\n              <ProviderButtons\r\n                record={record}\r\n                handleUpdateModal={handleUpdateModal}\r\n                handleDeleteModal={handleDeleteModal}\r\n                viewEnrollments={viewEnrollments}\r\n              />\r\n            ),\r\n          props: {\r\n            'data-title': 'Actions',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function OfferTable({\r\n  data,\r\n  providers,\r\n  datafields,\r\n  handleUpdateModal,\r\n  handleDeleteModal,\r\n  handleRowSelection,\r\n  viewEnrollments,\r\n  role,\r\n}) {\r\n  // console.log(\"daaaaaaaaaaaaaa\",data)\r\n  const doHandleRowSelection =\r\n    role === 'student'\r\n      ? null\r\n      : (record, rowIndex) => {\r\n          return {\r\n            onClick: (event) => {\r\n              if (event.target.type === 'button') {\r\n                return;\r\n              }\r\n              handleRowSelection(record, rowIndex);\r\n            },\r\n          };\r\n        };\r\n  return (\r\n    <Table\r\n      pagination={{ pageSize: 8 }}\r\n      dataSource={data}\r\n      bordered\r\n      className=\"ant-table-wrapper--responsive ant-table-row-selectable\"\r\n      rowClassName={() => 'antd-row'}\r\n      rowKey=\"id\"\r\n      onRow={doHandleRowSelection}\r\n    >\r\n       <Column\r\n        className=\"antd-col\"\r\n        title=\"ID\"\r\n        dataIndex=\"id\"\r\n        key=\"id\"\r\n        render={(text, record) => ({\r\n          children: text,\r\n          props: {\r\n            'data-title': 'ID',\r\n          },\r\n        })}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Name\"\r\n        dataIndex=\"name\"\r\n        key=\"name\"\r\n        render={(text, record) => ({\r\n          children: text,\r\n          props: {\r\n            'data-title': 'Name',\r\n          },\r\n        })}\r\n      />\r\n       <Column\r\n        className=\"antd-col\"\r\n        title=\"Location Type\"\r\n        dataIndex=\"location_type\"\r\n        key=\"location_type\"\r\n        render={(text, record) => ({\r\n          children: text,\r\n          props: {\r\n            'data-title': 'location_type',\r\n          },\r\n        })}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Category\"\r\n        dataIndex=\"category\"\r\n        key=\"category\"\r\n        render={(id) => {\r\n          let name = null;\r\n          if (datafields[id]) {\r\n            name = datafields[id].name;\r\n          }\r\n          return {\r\n            children: name,\r\n            props: { 'data-title': 'Category' },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Provider\"\r\n        dataIndex=\"provider_id\"\r\n        key=\"provider_id\"\r\n        render={(id) => {\r\n          let name = 'N/A';\r\n          if (providers[id]) {\r\n            name = providers[id].name;\r\n          }\r\n          return {\r\n            children: name,\r\n            props: { 'data-title': 'Provider' },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Topics\"\r\n        dataIndex=\"DataFields\"\r\n        key=\"DataFields\"\r\n        render={(datafields = [], record) => {\r\n          datafields = datafields.filter((d) => d.type === 'topic');\r\n          let children = 'N/A';\r\n\r\n          if (datafields.length) {\r\n            children = (\r\n              <>\r\n                {datafields.map((datafield, index) => {\r\n                  if (datafield.type !== 'topic') {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <Tag\r\n                      color={index % 2 ? 'blue' : 'orange'}\r\n                      key={index.toString()}\r\n                    >\r\n                      {datafield.name}\r\n                    </Tag>\r\n                  );\r\n                })}\r\n              </>\r\n            );\r\n          }\r\n\r\n          return {\r\n            children,\r\n            props: {\r\n              'data-title': 'Topics',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      {ActionColumn({\r\n        handleUpdateModal,\r\n        handleDeleteModal,\r\n        viewEnrollments,\r\n        role,\r\n      })}\r\n    </Table>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
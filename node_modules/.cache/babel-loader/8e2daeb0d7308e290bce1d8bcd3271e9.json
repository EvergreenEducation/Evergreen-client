{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar preact = require('preact');\n\nvar findDOMElement = require('@uppy/utils/lib/findDOMElement');\n/**\n * Defer a frequent call to the microtask queue.\n */\n\n\nfunction debounce(fn) {\n  var calling = null;\n  var latestArgs = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    latestArgs = args;\n\n    if (!calling) {\n      calling = Promise.resolve().then(function () {\n        calling = null; // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n\n        return fn.apply(void 0, latestArgs);\n      });\n    }\n\n    return calling;\n  };\n}\n/**\n * Boilerplate that all Plugins share - and should not be used\n * directly. It also shows which methods final plugins should implement/override,\n * this deciding on structure.\n *\n * @param {object} main Uppy core object\n * @param {object} object with plugin options\n * @returns {Array|string} files or success/fail message\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  function Plugin(uppy, opts) {\n    this.uppy = uppy;\n    this.opts = opts || {};\n    this.update = this.update.bind(this);\n    this.mount = this.mount.bind(this);\n    this.install = this.install.bind(this);\n    this.uninstall = this.uninstall.bind(this);\n  }\n\n  var _proto = Plugin.prototype;\n\n  _proto.getPluginState = function getPluginState() {\n    var _this$uppy$getState = this.uppy.getState(),\n        plugins = _this$uppy$getState.plugins;\n\n    return plugins[this.id] || {};\n  };\n\n  _proto.setPluginState = function setPluginState(update) {\n    var _extends2;\n\n    var _this$uppy$getState2 = this.uppy.getState(),\n        plugins = _this$uppy$getState2.plugins;\n\n    this.uppy.setState({\n      plugins: _extends({}, plugins, (_extends2 = {}, _extends2[this.id] = _extends({}, plugins[this.id], update), _extends2))\n    });\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts);\n    this.setPluginState(); // so that UI re-renders with new options\n  };\n\n  _proto.update = function update(state) {\n    if (typeof this.el === 'undefined') {\n      return;\n    }\n\n    if (this._updateUI) {\n      this._updateUI(state);\n    }\n  } // Called after every state update, after everything's mounted. Debounced.\n  ;\n\n  _proto.afterUpdate = function afterUpdate() {}\n  /**\n   * Called when plugin is mounted, whether in DOM or into another plugin.\n   * Needed because sometimes plugins are mounted separately/after `install`,\n   * so this.el and this.parent might not be available in `install`.\n   * This is the case with @uppy/react plugins, for example.\n   */\n  ;\n\n  _proto.onMount = function onMount() {}\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   *\n   * @param {string|object} target\n   *\n   */\n  ;\n\n  _proto.mount = function mount(target, plugin) {\n    var _this = this;\n\n    var callerPluginName = plugin.id;\n    var targetElement = findDOMElement(target);\n\n    if (targetElement) {\n      this.isTargetDOMEl = true; // API for plugins that require a synchronous rerender.\n\n      this.rerender = function (state) {\n        // plugin could be removed, but this.rerender is debounced below,\n        // so it could still be called even after uppy.removePlugin or uppy.close\n        // hence the check\n        if (!_this.uppy.getPlugin(_this.id)) return;\n        _this.el = preact.render(_this.render(state), targetElement, _this.el);\n\n        _this.afterUpdate();\n      };\n\n      this._updateUI = debounce(this.rerender);\n      this.uppy.log(\"Installing \" + callerPluginName + \" to a DOM element '\" + target + \"'\"); // clear everything inside the target container\n\n      if (this.opts.replaceTargetContent) {\n        targetElement.innerHTML = '';\n      }\n\n      this.el = preact.render(this.render(this.uppy.getState()), targetElement);\n      this.onMount();\n      return this.el;\n    }\n\n    var targetPlugin;\n\n    if (typeof target === 'object' && target instanceof Plugin) {\n      // Targeting a plugin *instance*\n      targetPlugin = target;\n    } else if (typeof target === 'function') {\n      // Targeting a plugin type\n      var Target = target; // Find the target plugin instance.\n\n      this.uppy.iteratePlugins(function (plugin) {\n        if (plugin instanceof Target) {\n          targetPlugin = plugin;\n          return false;\n        }\n      });\n    }\n\n    if (targetPlugin) {\n      this.uppy.log(\"Installing \" + callerPluginName + \" to \" + targetPlugin.id);\n      this.parent = targetPlugin;\n      this.el = targetPlugin.addTarget(plugin);\n      this.onMount();\n      return this.el;\n    }\n\n    this.uppy.log(\"Not installing \" + callerPluginName);\n    var message = \"Invalid target option given to \" + callerPluginName + \".\";\n\n    if (typeof target === 'function') {\n      message += ' The given target is not a Plugin class. ' + 'Please check that you\\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';\n    } else {\n      message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';\n    }\n\n    throw new Error(message);\n  };\n\n  _proto.render = function render(state) {\n    throw new Error('Extend the render method to add your plugin to a DOM element');\n  };\n\n  _proto.addTarget = function addTarget(plugin) {\n    throw new Error('Extend the addTarget method to add your plugin to another plugin\\'s target');\n  };\n\n  _proto.unmount = function unmount() {\n    if (this.isTargetDOMEl && this.el && this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n  };\n\n  _proto.install = function install() {};\n\n  _proto.uninstall = function uninstall() {\n    this.unmount();\n  };\n\n  return Plugin;\n}();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/@uppy/core/lib/Plugin.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","preact","require","findDOMElement","debounce","fn","calling","latestArgs","_len","args","Array","_key","Promise","resolve","then","module","exports","Plugin","uppy","opts","update","bind","mount","install","uninstall","_proto","getPluginState","_this$uppy$getState","getState","plugins","id","setPluginState","_extends2","_this$uppy$getState2","setState","setOptions","newOpts","state","el","_updateUI","afterUpdate","onMount","plugin","_this","callerPluginName","targetElement","isTargetDOMEl","rerender","getPlugin","render","log","replaceTargetContent","innerHTML","targetPlugin","Target","iteratePlugins","parent","addTarget","message","Error","unmount","parentNode","removeChild"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar preact = require('preact');\n\nvar findDOMElement = require('@uppy/utils/lib/findDOMElement');\n/**\n * Defer a frequent call to the microtask queue.\n */\n\n\nfunction debounce(fn) {\n  var calling = null;\n  var latestArgs = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    latestArgs = args;\n\n    if (!calling) {\n      calling = Promise.resolve().then(function () {\n        calling = null; // At this point `args` may be different from the most\n        // recent state, if multiple calls happened since this task\n        // was queued. So we use the `latestArgs`, which definitely\n        // is the most recent call.\n\n        return fn.apply(void 0, latestArgs);\n      });\n    }\n\n    return calling;\n  };\n}\n/**\n * Boilerplate that all Plugins share - and should not be used\n * directly. It also shows which methods final plugins should implement/override,\n * this deciding on structure.\n *\n * @param {object} main Uppy core object\n * @param {object} object with plugin options\n * @returns {Array|string} files or success/fail message\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  function Plugin(uppy, opts) {\n    this.uppy = uppy;\n    this.opts = opts || {};\n    this.update = this.update.bind(this);\n    this.mount = this.mount.bind(this);\n    this.install = this.install.bind(this);\n    this.uninstall = this.uninstall.bind(this);\n  }\n\n  var _proto = Plugin.prototype;\n\n  _proto.getPluginState = function getPluginState() {\n    var _this$uppy$getState = this.uppy.getState(),\n        plugins = _this$uppy$getState.plugins;\n\n    return plugins[this.id] || {};\n  };\n\n  _proto.setPluginState = function setPluginState(update) {\n    var _extends2;\n\n    var _this$uppy$getState2 = this.uppy.getState(),\n        plugins = _this$uppy$getState2.plugins;\n\n    this.uppy.setState({\n      plugins: _extends({}, plugins, (_extends2 = {}, _extends2[this.id] = _extends({}, plugins[this.id], update), _extends2))\n    });\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts);\n    this.setPluginState(); // so that UI re-renders with new options\n  };\n\n  _proto.update = function update(state) {\n    if (typeof this.el === 'undefined') {\n      return;\n    }\n\n    if (this._updateUI) {\n      this._updateUI(state);\n    }\n  } // Called after every state update, after everything's mounted. Debounced.\n  ;\n\n  _proto.afterUpdate = function afterUpdate() {}\n  /**\n   * Called when plugin is mounted, whether in DOM or into another plugin.\n   * Needed because sometimes plugins are mounted separately/after `install`,\n   * so this.el and this.parent might not be available in `install`.\n   * This is the case with @uppy/react plugins, for example.\n   */\n  ;\n\n  _proto.onMount = function onMount() {}\n  /**\n   * Check if supplied `target` is a DOM element or an `object`.\n   * If it’s an object — target is a plugin, and we search `plugins`\n   * for a plugin with same name and return its target.\n   *\n   * @param {string|object} target\n   *\n   */\n  ;\n\n  _proto.mount = function mount(target, plugin) {\n    var _this = this;\n\n    var callerPluginName = plugin.id;\n    var targetElement = findDOMElement(target);\n\n    if (targetElement) {\n      this.isTargetDOMEl = true; // API for plugins that require a synchronous rerender.\n\n      this.rerender = function (state) {\n        // plugin could be removed, but this.rerender is debounced below,\n        // so it could still be called even after uppy.removePlugin or uppy.close\n        // hence the check\n        if (!_this.uppy.getPlugin(_this.id)) return;\n        _this.el = preact.render(_this.render(state), targetElement, _this.el);\n\n        _this.afterUpdate();\n      };\n\n      this._updateUI = debounce(this.rerender);\n      this.uppy.log(\"Installing \" + callerPluginName + \" to a DOM element '\" + target + \"'\"); // clear everything inside the target container\n\n      if (this.opts.replaceTargetContent) {\n        targetElement.innerHTML = '';\n      }\n\n      this.el = preact.render(this.render(this.uppy.getState()), targetElement);\n      this.onMount();\n      return this.el;\n    }\n\n    var targetPlugin;\n\n    if (typeof target === 'object' && target instanceof Plugin) {\n      // Targeting a plugin *instance*\n      targetPlugin = target;\n    } else if (typeof target === 'function') {\n      // Targeting a plugin type\n      var Target = target; // Find the target plugin instance.\n\n      this.uppy.iteratePlugins(function (plugin) {\n        if (plugin instanceof Target) {\n          targetPlugin = plugin;\n          return false;\n        }\n      });\n    }\n\n    if (targetPlugin) {\n      this.uppy.log(\"Installing \" + callerPluginName + \" to \" + targetPlugin.id);\n      this.parent = targetPlugin;\n      this.el = targetPlugin.addTarget(plugin);\n      this.onMount();\n      return this.el;\n    }\n\n    this.uppy.log(\"Not installing \" + callerPluginName);\n    var message = \"Invalid target option given to \" + callerPluginName + \".\";\n\n    if (typeof target === 'function') {\n      message += ' The given target is not a Plugin class. ' + 'Please check that you\\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';\n    } else {\n      message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';\n    }\n\n    throw new Error(message);\n  };\n\n  _proto.render = function render(state) {\n    throw new Error('Extend the render method to add your plugin to a DOM element');\n  };\n\n  _proto.addTarget = function addTarget(plugin) {\n    throw new Error('Extend the addTarget method to add your plugin to another plugin\\'s target');\n  };\n\n  _proto.unmount = function unmount() {\n    if (this.isTargetDOMEl && this.el && this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n  };\n\n  _proto.install = function install() {};\n\n  _proto.uninstall = function uninstall() {\n    this.unmount();\n  };\n\n  return Plugin;\n}();"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Drawer, Button, message, Layout, Col } from 'antd';\nimport useAxios, { configure } from 'axios-hooks';\nimport OfferTable from 'components/offer/OfferTable';\nimport useGlobalStore from 'store/GlobalStore';\nimport OfferPdfTable from 'components/offer/OfferPdfTable';\nimport axiosInstance from 'services/AxiosInstance';\nimport { SearchHeader, ProviderLogOutTopbar, FaPlusCircleButton } from 'components/shared';\nimport matchSorter from 'match-sorter';\nconst Content = Layout.Content;\nconst FormModal = imported(() => importedWrapper(\"imported_1ac18j9_component\", import('components/shared/FormModal')));\nconst OfferCreationContainer = imported(() => importedWrapper(\"imported_1hb68c1_component\", import('components/offer/OfferCreationContainer')));\nconst OfferUpdateModal = imported(() => importedWrapper(\"imported_1dirmp5_component\", import('components/offer/OfferUpdateModal')));\nconst BatchEnrollmentModal = imported(() => importedWrapper(\"imported_pknfgk_component\", import('components/enrollment/BatchEnrollmentModal')));\nconfigure({\n  axios: axiosInstance\n});\nexport default function OfferContainer(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const basePath = props.basePath,\n        openProviderUpdateModal = props.openProviderUpdateModal,\n        role = props.role,\n        providerId = props.providerId;\n  const history = useHistory();\n\n  const _useState3 = useState({\n    drawer: false,\n    updateModal: false,\n    batchEnrollModal: false,\n    formModal: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openable = _useState4[0],\n        setOpenable = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedOffer = _useState6[0],\n        setSelectedOffer = _useState6[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        provider = _useGlobalStore.provider,\n        offerStore = _useGlobalStore.offer;\n\n  const _offerStore$entities = offerStore.entities,\n        entities = _offerStore$entities === void 0 ? [] : _offerStore$entities;\n\n  const _useAxios = useAxios('/providers?scope=with_datafields'),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        _useAxios2$$data = _useAxios2$.data,\n        getProviderData = _useAxios2$$data === void 0 ? [] : _useAxios2$$data,\n        providerError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/datafields'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        datafieldsData = _useAxios4$.data,\n        datafieldError = _useAxios4$.error;\n\n  let getOffersUrl = role === 'provider' ? `/offers?scope=with_details&provider_id=${providerId}` : '/offers?scope=with_details';\n\n  const _useAxios5 = useAxios(getOffersUrl),\n        _useAxios6 = _slicedToArray(_useAxios5, 1),\n        _useAxios6$ = _useAxios6[0],\n        offersData = _useAxios6$.data,\n        offerError = _useAxios6$.error;\n\n  const openAndPopulateUpdateModal = offer => {\n    setSelectedOffer(offer);\n    setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      updateModal: true\n    }));\n  };\n\n  const handleRowSelection = (record, rowIndex) => {\n    if (record) {\n      setSelectedOffer(record);\n      setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n        drawer: true\n      }));\n      return;\n    }\n\n    message.error(\"Could not receive offer's information.\");\n  };\n\n  const openBatchEnrollmentModal = () => {\n    setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: true,\n      drawer: true\n    }));\n  };\n\n  const viewEnrollments = offer => {\n    if (offer) {\n      history.push(`${basePath}/enrollments?offer=${offer.id}`);\n      return;\n    }\n\n    message.error(\"Could not receive offer's information.\");\n  };\n\n  if (providerError || datafieldError || offerError) {\n    history.push('/error/500');\n  }\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, {\n      keys\n    });\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  let showData = handleDataAfterSearch(Object.values(entities));\n\n  if (role === 'provider') {\n    showData = showData.filter(offer => {\n      return offer.provider_id === providerId;\n    });\n  }\n\n  useEffect(() => {\n    if (getProviderData) {\n      provider.addMany(getProviderData);\n    }\n\n    if (datafieldsData) {\n      datafield.addMany(datafieldsData);\n    }\n\n    if (offersData) {\n      offerStore.addMany(offersData);\n    }\n  }, [getProviderData, datafieldsData, offersData]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProviderLogOutTopbar, {\n    role: role,\n    onClick: openProviderUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"NEW OFFERS / OPPORTUNITIES\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircleButton, {\n    onMouseEnter: () => {\n      FormModal.preload();\n      OfferCreationContainer.preload();\n    },\n    onClick: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      formModal: true\n    })),\n    text: \"OFFER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OfferTable, {\n    datafields: datafield.entities,\n    providers: provider.entities,\n    data: showData,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    handleRowSelection: handleRowSelection,\n    viewEnrollments: viewEnrollments,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(OfferPdfTable, {\n    datafields: datafield.entities,\n    providers: provider.entities,\n    data: showData,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    handleRowSelection: handleRowSelection,\n    viewEnrollments: viewEnrollments,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    title: \"New Offer / Opportunity\",\n    visible: openable.formModal,\n    FormComponent: OfferCreationContainer,\n    role: role,\n    providerId: providerId,\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      formModal: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(OfferUpdateModal, {\n    offer: selectedOffer,\n    visible: openable.updateModal,\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      updateModal: false\n    })),\n    offerStore: offerStore,\n    scopedToProvider: false,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Drawer, {\n    placement: \"bottom\",\n    visible: openable.drawer,\n    onClose: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      drawer: false\n    })),\n    height: 85,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"rounded\",\n    type: \"primary\",\n    onClick: () => openBatchEnrollmentModal(),\n    onMouseEnter: () => BatchEnrollmentModal.preload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Batch Enroll\"), /*#__PURE__*/React.createElement(BatchEnrollmentModal, {\n    offer: selectedOffer,\n    visible: openable.batchEnrollModal,\n    onSubmit: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: false,\n      drawer: false\n    })),\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(OfferContainer, \"useState{[searchString, setSearchString]('')}\\nuseHistory{history}\\nuseState{[openable, setOpenable]({\\r\\n    drawer: false,\\r\\n    updateModal: false,\\r\\n    batchEnrollModal: false,\\r\\n    formModal: false,\\r\\n  })}\\nuseState{[selectedOffer, setSelectedOffer]({})}\\nuseGlobalStore{{ datafield, provider, offer: offerStore }}\\nuseAxios{[{ data: getProviderData = [], error: providerError }]}\\nuseAxios{[{ data: datafieldsData, error: datafieldError }]}\\nuseAxios{[{ data: offersData, error: offerError }]}\\nuseEffect{}\", () => [useHistory, useGlobalStore, useAxios, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(FormModal, \"FormModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferCreationContainer, \"OfferCreationContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferUpdateModal, \"OfferUpdateModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(BatchEnrollmentModal, \"BatchEnrollmentModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferContainer, \"OfferContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js"],"names":["React","useEffect","useState","useHistory","Card","Drawer","Button","message","Layout","Col","useAxios","configure","OfferTable","useGlobalStore","OfferPdfTable","axiosInstance","SearchHeader","ProviderLogOutTopbar","FaPlusCircleButton","matchSorter","Content","FormModal","imported","OfferCreationContainer","OfferUpdateModal","BatchEnrollmentModal","axios","OfferContainer","props","searchString","setSearchString","basePath","openProviderUpdateModal","role","providerId","history","drawer","updateModal","batchEnrollModal","formModal","openable","setOpenable","selectedOffer","setSelectedOffer","datafield","provider","offerStore","offer","entities","data","getProviderData","providerError","error","datafieldsData","datafieldError","getOffersUrl","offersData","offerError","openAndPopulateUpdateModal","handleRowSelection","record","rowIndex","openBatchEnrollmentModal","viewEnrollments","push","id","handleDataAfterSearch","keys","handleDataSearch","searchVal","showData","Object","values","filter","provider_id","addMany","preload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { imported } from 'react-imported-component/macro';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Drawer, Button, message, Layout, Col } from 'antd';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport OfferTable from 'components/offer/OfferTable';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport OfferPdfTable from 'components/offer/OfferPdfTable'\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport {\r\n  SearchHeader,\r\n  ProviderLogOutTopbar,\r\n  FaPlusCircleButton,\r\n} from 'components/shared';\r\nimport matchSorter from 'match-sorter';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst FormModal = imported(() => import('components/shared/FormModal'));\r\n\r\nconst OfferCreationContainer = imported(() =>\r\n  import('components/offer/OfferCreationContainer')\r\n);\r\n\r\nconst OfferUpdateModal = imported(() =>\r\n  import('components/offer/OfferUpdateModal')\r\n);\r\n\r\nconst BatchEnrollmentModal = imported(() =>\r\n  import('components/enrollment/BatchEnrollmentModal')\r\n);\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nexport default function OfferContainer(props) {\r\n  const [searchString, setSearchString] = useState('');\r\n  const { basePath, openProviderUpdateModal, role, providerId } = props;\r\n  const history = useHistory();\r\n  const [openable, setOpenable] = useState({\r\n    drawer: false,\r\n    updateModal: false,\r\n    batchEnrollModal: false,\r\n    formModal: false,\r\n  });\r\n  const [selectedOffer, setSelectedOffer] = useState({});\r\n  const { datafield, provider, offer: offerStore } = useGlobalStore();\r\n  const { entities = [] } = offerStore;\r\n\r\n  const [{ data: getProviderData = [], error: providerError }] = useAxios(\r\n    '/providers?scope=with_datafields'\r\n  );\r\n\r\n  const [{ data: datafieldsData, error: datafieldError }] = useAxios(\r\n    '/datafields'\r\n  );\r\n\r\n  let getOffersUrl =\r\n    role === 'provider'\r\n      ? `/offers?scope=with_details&provider_id=${providerId}`\r\n      : '/offers?scope=with_details';\r\n\r\n  const [{ data: offersData, error: offerError }] = useAxios(getOffersUrl);\r\n\r\n  const openAndPopulateUpdateModal = (offer) => {\r\n    setSelectedOffer(offer);\r\n    setOpenable({\r\n      ...openable,\r\n      updateModal: true,\r\n    });\r\n  };\r\n\r\n  const handleRowSelection = (record, rowIndex) => {\r\n    if (record) {\r\n      setSelectedOffer(record);\r\n      setOpenable({\r\n        ...openable,\r\n        drawer: true,\r\n      });\r\n      return;\r\n    }\r\n    message.error(\"Could not receive offer's information.\");\r\n  };\r\n\r\n  const openBatchEnrollmentModal = () => {\r\n    setOpenable({\r\n      ...openable,\r\n      batchEnrollModal: true,\r\n      drawer: true,\r\n    });\r\n  };\r\n\r\n  const viewEnrollments = (offer) => {\r\n    if (offer) {\r\n      history.push(`${basePath}/enrollments?offer=${offer.id}`);\r\n      return;\r\n    }\r\n    message.error(\"Could not receive offer's information.\");\r\n  };\r\n\r\n  if (providerError || datafieldError || offerError) {\r\n    history.push('/error/500');\r\n  }\r\n\r\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\r\n    return matchSorter(data, searchString, { keys });\r\n  };\r\n\r\n  const handleDataSearch = (searchVal) => {\r\n    return setSearchString(searchVal);\r\n  };\r\n\r\n  let showData = handleDataAfterSearch(Object.values(entities));\r\n\r\n  if (role === 'provider') {\r\n    showData = showData.filter((offer) => {\r\n      return offer.provider_id === providerId;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (getProviderData) {\r\n      provider.addMany(getProviderData);\r\n    }\r\n    if (datafieldsData) {\r\n      datafield.addMany(datafieldsData);\r\n    }\r\n    if (offersData) {\r\n      offerStore.addMany(offersData);\r\n    }\r\n  }, [getProviderData, datafieldsData, offersData]);\r\n\r\n  return (\r\n    <Layout className=\"bg-transparent\">\r\n      <ProviderLogOutTopbar role={role} onClick={openProviderUpdateModal}>\r\n        <Col span={14}>\r\n          <SearchHeader\r\n            title=\"NEW OFFERS / OPPORTUNITIES\"\r\n            onSearch={handleDataSearch}\r\n          >\r\n            <FaPlusCircleButton\r\n              onMouseEnter={() => {\r\n                FormModal.preload();\r\n                OfferCreationContainer.preload();\r\n              }}\r\n              onClick={() => setOpenable({ ...openable, formModal: true })}\r\n              text=\"OFFER\"\r\n            />\r\n          </SearchHeader>\r\n        </Col>\r\n      </ProviderLogOutTopbar>\r\n      <Content className=\"p-6\">\r\n        <Card className=\"shadow-md rounded-md\">\r\n          <OfferTable\r\n            datafields={datafield.entities}\r\n            providers={provider.entities}\r\n            data={showData}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            handleRowSelection={handleRowSelection}\r\n            viewEnrollments={viewEnrollments}\r\n            role={role}\r\n          />\r\n          <OfferPdfTable\r\n            datafields={datafield.entities}\r\n            providers={provider.entities}\r\n            data={showData}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            handleRowSelection={handleRowSelection}\r\n            viewEnrollments={viewEnrollments}\r\n            role={role} />\r\n          <FormModal\r\n            title=\"New Offer / Opportunity\"\r\n            visible={openable.formModal}\r\n            FormComponent={OfferCreationContainer}\r\n            role={role}\r\n            providerId={providerId}\r\n            onCancel={() => setOpenable({ ...openable, formModal: false })}\r\n          />\r\n          <OfferUpdateModal\r\n            offer={selectedOffer}\r\n            visible={openable.updateModal}\r\n            onCancel={() => setOpenable({ ...openable, updateModal: false })}\r\n            offerStore={offerStore}\r\n            scopedToProvider={false}\r\n            role={role}\r\n          />\r\n          <Drawer\r\n            placement=\"bottom\"\r\n            visible={openable.drawer}\r\n            onClose={() => setOpenable({ ...openable, drawer: false })}\r\n            height={85}\r\n          >\r\n            <Button\r\n              className=\"rounded\"\r\n              type=\"primary\"\r\n              onClick={() => openBatchEnrollmentModal()}\r\n              onMouseEnter={() => BatchEnrollmentModal.preload()}\r\n            >\r\n              Batch Enroll\r\n            </Button>\r\n            <BatchEnrollmentModal\r\n              offer={selectedOffer}\r\n              visible={openable.batchEnrollModal}\r\n              onSubmit={() =>\r\n                setOpenable({\r\n                  ...openable,\r\n                  batchEnrollModal: false,\r\n                  drawer: false,\r\n                })\r\n              }\r\n              onCancel={() =>\r\n                setOpenable({\r\n                  ...openable,\r\n                  batchEnrollModal: false,\r\n                })\r\n              }\r\n            />\r\n          </Drawer>\r\n        </Card>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
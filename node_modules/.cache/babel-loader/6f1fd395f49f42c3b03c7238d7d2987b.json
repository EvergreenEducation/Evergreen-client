{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Button, Input, Col, Select, Form, Row } from 'antd';\nimport axiosInstance from 'services/AxiosInstance';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport EnrollmentStore from 'store/Enrollment';\nimport { EnrollModal } from 'components/enrollment';\nimport matchSorter from 'match-sorter';\nimport { useForm } from 'antd/lib/form/util';\nimport dayjs from 'dayjs';\nimport 'assets/scss/antd-overrides.scss';\nconst Column = Table.Column;\nconst Option = Select.Option;\nconst substituteStatuses = {\n  Inactivate: 'Applied',\n  Approved: 'Enrolled',\n  Activated: 'Enrolled',\n  Completed: 'Completed',\n  Unenrolled: 'Unenrolled',\n  Failed: 'Failed'\n};\n\nfunction renderGradeOptions(letter) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Option, {\n    value: letter + '+',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, letter + '+'), /*#__PURE__*/React.createElement(Option, {\n    value: letter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, letter), /*#__PURE__*/React.createElement(Option, {\n    value: letter + '-',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, letter + '-'));\n}\n\nfunction GradeScaleOptions(props) {\n  const name = props.name,\n        initialValue = props.initialValue,\n        enrollment = props.enrollment;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        enablePointGradeScale = _useState2[0],\n        setEnablePointGradeScale = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-no-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: name,\n    className: \"w-64 my-auto\",\n    initialValue: initialValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"rounded-r rounded-l-none\",\n    disabled: enrollment.student_id ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, !enablePointGradeScale && /*#__PURE__*/React.createElement(React.Fragment, null, renderGradeOptions('A'), renderGradeOptions('B'), renderGradeOptions('C'), renderGradeOptions('D'), /*#__PURE__*/React.createElement(Option, {\n    value: 'F',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"F\")), enablePointGradeScale && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Option, {\n    value: 4.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"4.0\"), /*#__PURE__*/React.createElement(Option, {\n    value: 3.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"3.5\"), /*#__PURE__*/React.createElement(Option, {\n    value: 3.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"3.0\"), /*#__PURE__*/React.createElement(Option, {\n    value: 2.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"2.5\"), /*#__PURE__*/React.createElement(Option, {\n    value: 2.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"2.0\"), /*#__PURE__*/React.createElement(Option, {\n    value: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"1.5\"), /*#__PURE__*/React.createElement(Option, {\n    value: 1.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"1.0\"), /*#__PURE__*/React.createElement(Option, {\n    value: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"0.5\"), /*#__PURE__*/React.createElement(Option, {\n    value: 0.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"0.0\")))), /*#__PURE__*/React.createElement(Button, {\n    className: \"px-2\",\n    onClick: () => setEnablePointGradeScale(!enablePointGradeScale),\n    type: !enablePointGradeScale ? 'default' : 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"4.0 Scale\"));\n}\n\n__signature__(GradeScaleOptions, \"useState{[enablePointGradeScale, setEnablePointGradeScale](false)}\");\n\nexport default function EnrollmentTable({\n  activateCreditAssignment,\n  dataSource = [],\n  offer,\n  students\n}) {\n  let filteredDataSource = dataSource;\n  let presetOfferName = null;\n\n  if (offer) {\n    filteredDataSource = dataSource.filter(enrollment => {\n      if (enrollment.offer_id === offer && presetOfferName !== enrollment.Offer.name) {\n        presetOfferName = enrollment.Offer.name;\n      }\n\n      return enrollment.offer_id === offer;\n    });\n  }\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        enrollModalOpen = _useState4[0],\n        setEnrollModalOpen = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedEnrollment = _useState6[0],\n        setSelectedEnrollment = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        enrollments = _useState8[0],\n        setEnrollments = _useState8[1];\n\n  const _useForm = useForm(),\n        _useForm2 = _slicedToArray(_useForm, 1),\n        form = _useForm2[0];\n\n  const enrollmentStore = EnrollmentStore.useContainer();\n\n  const updateEnrollment = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (enrollment) {\n      return axiosInstance.put(`/enrollments/${enrollment.id}`, {\n        status: 'Approved'\n      });\n    });\n\n    return function updateEnrollment(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const setStatusToApprove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (enrollment) {\n      try {\n        const response = yield updateEnrollment(enrollment);\n\n        if (response.status === 200) {\n          enrollmentStore.updateOne(response.data);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    return function setStatusToApprove(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const handleData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      const value = yield form.validateFields(['offer_name']);\n      let offerName = '';\n\n      if (value) {\n        offerName = value.offer_name;\n      }\n\n      const results = matchSorter(dataSource, offerName, {\n        keys: ['Offer.name']\n      });\n      setEnrollments(results);\n    });\n\n    return function handleData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const reset = () => {\n    form.setFieldsValue({\n      offer_name: null\n    });\n    setEnrollments(dataSource);\n  };\n\n  const offerNames = [];\n  let name = null;\n\n  for (let i = 0; i < dataSource.length; i++) {\n    if (!dataSource[i] || !dataSource[i].Offer) {\n      break;\n    }\n\n    name = dataSource[i].Offer.name;\n\n    if (!offerNames.includes(name)) {\n      offerNames.push(name);\n    }\n  }\n\n  useEffect(() => {\n    if (dataSource) {\n      setEnrollments(filteredDataSource);\n    }\n  }, [dataSource]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    dataSource: enrollments,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    pagination: {\n      pageSize: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Offer Name\",\n    dataIndex: \"Offer\",\n    key: \"index\",\n    render: offer => {\n      let children = 'N/A';\n\n      if (offer && offer.name) {\n        children = offer.name;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Offer Name'\n        }\n      };\n    },\n    filterIcon: filtered => /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }),\n    filterDropdown: params => {\n      return /*#__PURE__*/React.createElement(Form, {\n        form: form,\n        initialValues: {\n          offer_name: presetOfferName\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"p-2 rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        className: \"mb-2\",\n        name: \"offer_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        className: \"custom-select\",\n        style: {\n          minWidth: '12rem'\n        },\n        showSearch: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, offerNames.map((name, index) => {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: index.toString(),\n          value: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 27\n          }\n        }, name);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-2 rounded\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: handleData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"rounded\",\n        type: \"default\",\n        size: \"small\",\n        onClick: reset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, \"Reset\"))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Student ID\",\n    dataIndex: \"student_id\",\n    key: \"student_id\",\n    render: (text, record) => ({\n      children: record.student_id ? record.student_id : /*#__PURE__*/React.createElement(Button, {\n        className: \"rounded\",\n        type: \"primary\",\n        onClick: () => {\n          setSelectedEnrollment(record);\n          setEnrollModalOpen(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, \"Enroll Student\"),\n      props: {\n        'data-title': 'Student ID'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Activation Code\",\n    dataIndex: \"activation_code\",\n    key: \"activation_code\",\n    render: (text, record) => ({\n      children: text || 'N/A',\n      props: {\n        'data-title': 'Activation Code'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Credit\",\n    dataIndex: \"credit\",\n    key: \"credit\",\n    width: 200,\n    render: (credit, enrollment) => {\n      const id = enrollment.id,\n            _credit = enrollment.credit;\n      return {\n        children: activateCreditAssignment ? /*#__PURE__*/React.createElement(Row, {\n          className: \"p-0 items-center flex-no-wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"px-1 bg-gray-100 border bordered border-r-none rounded-l flex items-center\",\n          style: {\n            height: 32\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }\n        }, \"Score\"), /*#__PURE__*/React.createElement(GradeScaleOptions, {\n          name: `enrollment_${id}`,\n          initialValue: _credit,\n          enrollment: enrollment,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }\n        })) : credit || 'N/A',\n        props: {\n          'data-title': 'Credit'\n        }\n      };\n    },\n    filterIcon: filtered => /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      icon: faSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }),\n    filterDropdown: params => {\n      return /*#__PURE__*/React.createElement(Col, {\n        className: \"p-2 rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"mb-2 w-48 rounded\",\n        placeholder: \"Search credit\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        className: \"mr-2 rounded\",\n        type: \"primary\",\n        size: \"small\",\n        icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          className: \"mr-1\",\n          icon: faSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n        disabled: true,\n        className: \"rounded\",\n        type: \"default\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      }, \"Reset\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: (status, enrollment) => {\n      status = substituteStatuses[status];\n\n      if (!enrollment.student_id && enrollment.status === 'Inactivate') {\n        status = 'Inactivate';\n      }\n\n      return {\n        children: status,\n        props: {\n          'data-title': 'Status'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Start Date\",\n    className: \"antd-col\",\n    dataIndex: \"start_date\",\n    key: \"start_date\",\n    render: (date, record, index) => {\n      return {\n        children: date ? dayjs(date).format('MM-DD-YYYY') : 'N/A',\n        props: {\n          'data-title': 'Start Date'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Action\",\n    key: \"index\",\n    render: enrollment => {\n      return {\n        children: /*#__PURE__*/React.createElement(Popconfirm, {\n          title: () => /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              maxWidth: '15em'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }\n          }, \"Do you want to approve this student\\u2019s enrollment in this offer?\"),\n          onConfirm: () => setStatusToApprove(enrollment),\n          okText: \"Yes\",\n          cancelText: \"No\",\n          disabled: enrollment.status === 'Approved' ? true : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: enrollment.status === 'Approved' ? '#cbd5e0' : '#1890ff',\n            cursor: enrollment.status === 'Approved' ? 'not-allowed' : 'pointer'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }\n        }, \"Approve\")),\n        props: {\n          'data-title': 'Action'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(EnrollModal, {\n    enrollment: selectedEnrollment,\n    visible: enrollModalOpen,\n    students: students,\n    onCancel: () => setEnrollModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(EnrollmentTable, \"useState{[enrollModalOpen, setEnrollModalOpen](false)}\\nuseState{[selectedEnrollment, setSelectedEnrollment](null)}\\nuseState{[enrollments, setEnrollments]([])}\\nuseForm{[form]}\\nuseContainer{enrollmentStore}\\nuseEffect{}\", () => [useForm]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n  reactHotLoader.register(Option, \"Option\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n  reactHotLoader.register(substituteStatuses, \"substituteStatuses\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n  reactHotLoader.register(renderGradeOptions, \"renderGradeOptions\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n  reactHotLoader.register(GradeScaleOptions, \"GradeScaleOptions\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n  reactHotLoader.register(EnrollmentTable, \"EnrollmentTable\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollmentTable.js"],"names":["React","useEffect","useState","Table","Popconfirm","Button","Input","Col","Select","Form","Row","axiosInstance","FontAwesomeIcon","faSearch","EnrollmentStore","EnrollModal","matchSorter","useForm","dayjs","Column","Option","substituteStatuses","Inactivate","Approved","Activated","Completed","Unenrolled","Failed","renderGradeOptions","letter","GradeScaleOptions","props","name","initialValue","enrollment","enablePointGradeScale","setEnablePointGradeScale","student_id","EnrollmentTable","activateCreditAssignment","dataSource","offer","students","filteredDataSource","presetOfferName","filter","offer_id","Offer","enrollModalOpen","setEnrollModalOpen","selectedEnrollment","setSelectedEnrollment","enrollments","setEnrollments","form","enrollmentStore","useContainer","updateEnrollment","put","id","status","setStatusToApprove","response","updateOne","data","err","console","error","handleData","value","validateFields","offerName","offer_name","results","keys","reset","setFieldsValue","offerNames","i","length","includes","push","pageSize","children","filtered","color","undefined","params","minWidth","map","index","toString","text","record","credit","_credit","height","date","format","maxWidth","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, Popconfirm, Button, Input, Col, Select, Form, Row } from 'antd';\nimport axiosInstance from 'services/AxiosInstance';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport EnrollmentStore from 'store/Enrollment';\nimport { EnrollModal } from 'components/enrollment';\nimport matchSorter from 'match-sorter';\nimport { useForm } from 'antd/lib/form/util';\nimport dayjs from 'dayjs';\nimport 'assets/scss/antd-overrides.scss';\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nconst substituteStatuses = {\n  Inactivate: 'Applied',\n  Approved: 'Enrolled',\n  Activated: 'Enrolled',\n  Completed: 'Completed',\n  Unenrolled: 'Unenrolled',\n  Failed: 'Failed',\n};\n\nfunction renderGradeOptions(letter) {\n  return (\n    <>\n      <Option value={letter + '+'}>{letter + '+'}</Option>\n      <Option value={letter}>{letter}</Option>\n      <Option value={letter + '-'}>{letter + '-'}</Option>\n    </>\n  );\n}\n\nfunction GradeScaleOptions(props) {\n  const { name, initialValue, enrollment } = props;\n  const [enablePointGradeScale, setEnablePointGradeScale] = useState(false);\n  return (\n    <div className=\"flex flex-no-wrap\">\n      <Form.Item\n        name={name}\n        className=\"w-64 my-auto\"\n        initialValue={initialValue}\n      >\n        <Select\n          className=\"rounded-r rounded-l-none\"\n          disabled={enrollment.student_id ? false : true}\n        >\n          {!enablePointGradeScale && (\n            <>\n              {renderGradeOptions('A')}\n              {renderGradeOptions('B')}\n              {renderGradeOptions('C')}\n              {renderGradeOptions('D')}\n              <Option value={'F'}>F</Option>\n            </>\n          )}\n          {enablePointGradeScale && (\n            <>\n              <Option value={4.0}>4.0</Option>\n              <Option value={3.5}>3.5</Option>\n              <Option value={3.0}>3.0</Option>\n              <Option value={2.5}>2.5</Option>\n              <Option value={2.0}>2.0</Option>\n              <Option value={1.5}>1.5</Option>\n              <Option value={1.0}>1.0</Option>\n              <Option value={0.5}>0.5</Option>\n              <Option value={0.0}>0.0</Option>\n            </>\n          )}\n        </Select>\n      </Form.Item>\n      <Button\n        className=\"px-2\"\n        onClick={() => setEnablePointGradeScale(!enablePointGradeScale)}\n        type={!enablePointGradeScale ? 'default' : 'primary'}\n      >\n        4.0 Scale\n      </Button>\n    </div>\n  );\n}\n\nexport default function EnrollmentTable({\n  activateCreditAssignment,\n  dataSource = [],\n  offer,\n  students,\n}) {\n  let filteredDataSource = dataSource;\n  let presetOfferName = null;\n\n  if (offer) {\n    filteredDataSource = dataSource.filter((enrollment) => {\n      if (\n        enrollment.offer_id === offer &&\n        presetOfferName !== enrollment.Offer.name\n      ) {\n        presetOfferName = enrollment.Offer.name;\n      }\n      return enrollment.offer_id === offer;\n    });\n  }\n\n  const [enrollModalOpen, setEnrollModalOpen] = useState(false);\n  const [selectedEnrollment, setSelectedEnrollment] = useState(null);\n  const [enrollments, setEnrollments] = useState([]);\n  const [form] = useForm();\n\n  const enrollmentStore = EnrollmentStore.useContainer();\n\n  const updateEnrollment = async (enrollment) => {\n    return axiosInstance.put(`/enrollments/${enrollment.id}`, {\n      status: 'Approved',\n    });\n  };\n\n  const setStatusToApprove = async (enrollment) => {\n    try {\n      const response = await updateEnrollment(enrollment);\n\n      if (response.status === 200) {\n        enrollmentStore.updateOne(response.data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleData = async () => {\n    const value = await form.validateFields(['offer_name']);\n    let offerName = '';\n    if (value) {\n      offerName = value.offer_name;\n    }\n    const results = matchSorter(dataSource, offerName, {\n      keys: ['Offer.name'],\n    });\n    setEnrollments(results);\n  };\n\n  const reset = () => {\n    form.setFieldsValue({\n      offer_name: null,\n    });\n    setEnrollments(dataSource);\n  };\n\n  const offerNames = [];\n\n  let name = null;\n  for (let i = 0; i < dataSource.length; i++) {\n    if (!dataSource[i] || !dataSource[i].Offer) {\n      break;\n    }\n    name = dataSource[i].Offer.name;\n    if (!offerNames.includes(name)) {\n      offerNames.push(name);\n    }\n  }\n\n  useEffect(() => {\n    if (dataSource) {\n      setEnrollments(filteredDataSource);\n    }\n  }, [dataSource]);\n\n  return (\n    <>\n      <Table\n        dataSource={enrollments}\n        bordered\n        className=\"ant-table-wrapper--responsive\"\n        rowClassName={() => 'antd-row'}\n        rowKey=\"id\"\n        pagination={{ pageSize: 8 }}\n      >\n        <Column\n          className=\"antd-col\"\n          title=\"Offer Name\"\n          dataIndex=\"Offer\"\n          key=\"index\"\n          render={(offer) => {\n            let children = 'N/A';\n            if (offer && offer.name) {\n              children = offer.name;\n            }\n            return {\n              children,\n              props: {\n                'data-title': 'Offer Name',\n              },\n            };\n          }}\n          filterIcon={(filtered) => (\n            <FontAwesomeIcon\n              style={{\n                color: filtered ? '#1890ff' : undefined,\n              }}\n              icon={faSearch}\n            />\n          )}\n          filterDropdown={(params) => {\n            return (\n              <Form\n                form={form}\n                initialValues={{\n                  offer_name: presetOfferName,\n                }}\n              >\n                <Col className=\"p-2 rounded\">\n                  <Form.Item className=\"mb-2\" name=\"offer_name\">\n                    <Select\n                      className=\"custom-select\"\n                      style={{ minWidth: '12rem' }}\n                      showSearch\n                    >\n                      {offerNames.map((name, index) => {\n                        return (\n                          <Option key={index.toString()} value={name}>\n                            {name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  </Form.Item>\n                  <div>\n                    <Button\n                      className=\"mr-2 rounded\"\n                      type=\"primary\"\n                      size=\"small\"\n                      onClick={handleData}\n                    >\n                      Search\n                    </Button>\n                    <Button\n                      className=\"rounded\"\n                      type=\"default\"\n                      size=\"small\"\n                      onClick={reset}\n                    >\n                      Reset\n                    </Button>\n                  </div>\n                </Col>\n              </Form>\n            );\n          }}\n        />\n        <Column\n          className=\"antd-col\"\n          title=\"Student ID\"\n          dataIndex=\"student_id\"\n          key=\"student_id\"\n          render={(text, record) => ({\n            children: record.student_id ? (\n              record.student_id\n            ) : (\n              <Button\n                className=\"rounded\"\n                type=\"primary\"\n                onClick={() => {\n                  setSelectedEnrollment(record);\n                  setEnrollModalOpen(true);\n                }}\n              >\n                Enroll Student\n              </Button>\n            ),\n            props: {\n              'data-title': 'Student ID',\n            },\n          })}\n        />\n        <Column\n          className=\"antd-col\"\n          title=\"Activation Code\"\n          dataIndex=\"activation_code\"\n          key=\"activation_code\"\n          render={(text, record) => ({\n            children: text || 'N/A',\n            props: {\n              'data-title': 'Activation Code',\n            },\n          })}\n        />\n        <Column\n          className=\"antd-col\"\n          title=\"Credit\"\n          dataIndex=\"credit\"\n          key=\"credit\"\n          width={200}\n          render={(credit, enrollment) => {\n            const { id, credit: _credit } = enrollment;\n            return {\n              children: activateCreditAssignment ? (\n                <Row className=\"p-0 items-center flex-no-wrap\">\n                  <span\n                    className=\"px-1 bg-gray-100 border bordered border-r-none rounded-l flex items-center\"\n                    style={{ height: 32 }}\n                  >\n                    Score\n                  </span>\n                  <GradeScaleOptions\n                    name={`enrollment_${id}`}\n                    initialValue={_credit}\n                    enrollment={enrollment}\n                  />\n                </Row>\n              ) : (\n                credit || 'N/A'\n              ),\n              props: {\n                'data-title': 'Credit',\n              },\n            };\n          }}\n          filterIcon={(filtered) => (\n            <FontAwesomeIcon\n              style={{\n                color: filtered ? '#1890ff' : undefined,\n              }}\n              icon={faSearch}\n            />\n          )}\n          filterDropdown={(params) => {\n            return (\n              <Col className=\"p-2 rounded\">\n                <Input\n                  className=\"mb-2 w-48 rounded\"\n                  placeholder=\"Search credit\"\n                  disabled\n                />\n                <div>\n                  <Button\n                    disabled\n                    className=\"mr-2 rounded\"\n                    type=\"primary\"\n                    size=\"small\"\n                    icon={<FontAwesomeIcon className=\"mr-1\" icon={faSearch} />}\n                  >\n                    Search\n                  </Button>\n                  <Button\n                    disabled\n                    className=\"rounded\"\n                    type=\"default\"\n                    size=\"small\"\n                  >\n                    Reset\n                  </Button>\n                </div>\n              </Col>\n            );\n          }}\n        />\n        <Column\n          className=\"antd-col\"\n          title=\"Status\"\n          dataIndex=\"status\"\n          key=\"status\"\n          render={(status, enrollment) => {\n            status = substituteStatuses[status];\n            if (!enrollment.student_id && enrollment.status === 'Inactivate') {\n              status = 'Inactivate';\n            }\n            return {\n              children: status,\n              props: {\n                'data-title': 'Status',\n              },\n            };\n          }}\n        />\n        <Column\n          title=\"Start Date\"\n          className=\"antd-col\"\n          dataIndex=\"start_date\"\n          key=\"start_date\"\n          render={(date, record, index) => {\n            return {\n              children: date ? dayjs(date).format('MM-DD-YYYY') : 'N/A',\n              props: {\n                'data-title': 'Start Date',\n              },\n            };\n          }}\n        />\n        <Column\n          className=\"antd-col\"\n          title=\"Action\"\n          key=\"index\"\n          render={(enrollment) => {\n            return {\n              children: (\n                <Popconfirm\n                  title={() => (\n                    <p style={{ maxWidth: '15em' }}>\n                      Do you want to approve this student’s enrollment in this\n                      offer?\n                    </p>\n                  )}\n                  onConfirm={() => setStatusToApprove(enrollment)}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  disabled={enrollment.status === 'Approved' ? true : null}\n                >\n                  <span\n                    style={{\n                      color:\n                        enrollment.status === 'Approved'\n                          ? '#cbd5e0'\n                          : '#1890ff',\n                      cursor:\n                        enrollment.status === 'Approved'\n                          ? 'not-allowed'\n                          : 'pointer',\n                    }}\n                  >\n                    Approve\n                  </span>\n                </Popconfirm>\n              ),\n              props: {\n                'data-title': 'Action',\n              },\n            };\n          }}\n        />\n      </Table>\n      <EnrollModal\n        enrollment={selectedEnrollment}\n        visible={enrollModalOpen}\n        students={students}\n        onCancel={() => setEnrollModalOpen(false)}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
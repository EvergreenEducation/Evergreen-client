{"ast":null,"code":"var attributesToProps = require('./attributes-to-props');\n\nvar utilities = require('./utilities');\n/**\n * Converts DOM nodes to React elements.\n *\n * @param {DomElement[]} nodes - The DOM nodes.\n * @param {Object} [options={}] - The additional options.\n * @param {Function} [options.replace] - The replacer.\n * @param {Object} [options.library] - The library (React, Preact, etc.).\n * @return {String|ReactElement|ReactElement[]}\n */\n\n\nfunction domToReact(nodes, options) {\n  options = options || {};\n\n  var React = options.library || require('react');\n\n  var cloneElement = React.cloneElement;\n  var createElement = React.createElement;\n  var isValidElement = React.isValidElement;\n  var result = [];\n  var node;\n  var hasReplace = typeof options.replace === 'function';\n  var replaceElement;\n  var props;\n  var children;\n  var data;\n  var trim = options.trim;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i]; // replace with custom React element (if present)\n\n    if (hasReplace) {\n      replaceElement = options.replace(node);\n\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://fb.me/react-warning-keys\n        if (len > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || i\n          });\n        }\n\n        result.push(replaceElement);\n        continue;\n      }\n    }\n\n    if (node.type === 'text') {\n      // if trim option is enabled, skip whitespace text nodes\n      if (trim) {\n        data = node.data.trim();\n\n        if (data) {\n          result.push(node.data);\n        }\n      } else {\n        result.push(node.data);\n      }\n\n      continue;\n    }\n\n    props = node.attribs;\n\n    if (!shouldPassAttributesUnaltered(node)) {\n      props = attributesToProps(node.attribs);\n    }\n\n    children = null;\n\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: node.children[0].data\n          };\n        }\n\n        break;\n\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = node.children[0].data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children, options);\n        }\n\n        break;\n      // skip all other cases (e.g., comment)\n\n      default:\n        continue;\n    } // set \"key\" prop for sibling elements\n    // https://fb.me/react-warning-keys\n\n\n    if (len > 1) {\n      props.key = i;\n    }\n\n    result.push(createElement(node.name, props, children));\n  }\n\n  return result.length === 1 ? result[0] : result;\n}\n/**\n * Determines whether attributes should be altered or not.\n *\n * @param {React.ReactElement} node\n * @return {Boolean}\n */\n\n\nfunction shouldPassAttributesUnaltered(node) {\n  return utilities.PRESERVE_CUSTOM_ATTRIBUTES && node.type === 'tag' && utilities.isCustomComponent(node.name, node.attribs);\n}\n\nmodule.exports = domToReact;","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/html-react-parser/lib/dom-to-react.js"],"names":["attributesToProps","require","utilities","domToReact","nodes","options","React","library","cloneElement","createElement","isValidElement","result","node","hasReplace","replace","replaceElement","props","children","data","trim","i","len","length","key","push","type","attribs","shouldPassAttributesUnaltered","dangerouslySetInnerHTML","__html","name","defaultValue","PRESERVE_CUSTOM_ATTRIBUTES","isCustomComponent","module","exports"],"mappings":"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","sourcesContent":["var attributesToProps = require('./attributes-to-props');\nvar utilities = require('./utilities');\n\n/**\n * Converts DOM nodes to React elements.\n *\n * @param {DomElement[]} nodes - The DOM nodes.\n * @param {Object} [options={}] - The additional options.\n * @param {Function} [options.replace] - The replacer.\n * @param {Object} [options.library] - The library (React, Preact, etc.).\n * @return {String|ReactElement|ReactElement[]}\n */\nfunction domToReact(nodes, options) {\n  options = options || {};\n\n  var React = options.library || require('react');\n  var cloneElement = React.cloneElement;\n  var createElement = React.createElement;\n  var isValidElement = React.isValidElement;\n\n  var result = [];\n  var node;\n  var hasReplace = typeof options.replace === 'function';\n  var replaceElement;\n  var props;\n  var children;\n  var data;\n  var trim = options.trim;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n\n    // replace with custom React element (if present)\n    if (hasReplace) {\n      replaceElement = options.replace(node);\n\n      if (isValidElement(replaceElement)) {\n        // set \"key\" prop for sibling elements\n        // https://fb.me/react-warning-keys\n        if (len > 1) {\n          replaceElement = cloneElement(replaceElement, {\n            key: replaceElement.key || i\n          });\n        }\n        result.push(replaceElement);\n        continue;\n      }\n    }\n\n    if (node.type === 'text') {\n      // if trim option is enabled, skip whitespace text nodes\n      if (trim) {\n        data = node.data.trim();\n        if (data) {\n          result.push(node.data);\n        }\n      } else {\n        result.push(node.data);\n      }\n      continue;\n    }\n\n    props = node.attribs;\n    if (!shouldPassAttributesUnaltered(node)) {\n      props = attributesToProps(node.attribs);\n    }\n\n    children = null;\n\n    switch (node.type) {\n      case 'script':\n      case 'style':\n        // prevent text in <script> or <style> from being escaped\n        // https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml\n        if (node.children[0]) {\n          props.dangerouslySetInnerHTML = {\n            __html: node.children[0].data\n          };\n        }\n        break;\n\n      case 'tag':\n        // setting textarea value in children is an antipattern in React\n        // https://reactjs.org/docs/forms.html#the-textarea-tag\n        if (node.name === 'textarea' && node.children[0]) {\n          props.defaultValue = node.children[0].data;\n        } else if (node.children && node.children.length) {\n          // continue recursion of creating React elements (if applicable)\n          children = domToReact(node.children, options);\n        }\n        break;\n\n      // skip all other cases (e.g., comment)\n      default:\n        continue;\n    }\n\n    // set \"key\" prop for sibling elements\n    // https://fb.me/react-warning-keys\n    if (len > 1) {\n      props.key = i;\n    }\n\n    result.push(createElement(node.name, props, children));\n  }\n\n  return result.length === 1 ? result[0] : result;\n}\n\n/**\n * Determines whether attributes should be altered or not.\n *\n * @param {React.ReactElement} node\n * @return {Boolean}\n */\nfunction shouldPassAttributesUnaltered(node) {\n  return (\n    utilities.PRESERVE_CUSTOM_ATTRIBUTES &&\n    node.type === 'tag' &&\n    utilities.isCustomComponent(node.name, node.attribs)\n  );\n}\n\nmodule.exports = domToReact;\n"]},"metadata":{},"sourceType":"script"}
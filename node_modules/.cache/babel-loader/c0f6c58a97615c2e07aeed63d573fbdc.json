{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _reject from \"lodash/reject\";\nimport _head from \"lodash/head\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/offer/OfferCreationContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useRef } from 'react';\nimport { Button, Form, notification } from 'antd';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\nimport OfferForm from 'components/offer/OfferForm';\nimport useGlobalStore from 'store/GlobalStore';\nimport AuthService from 'services/AuthService';\nimport UploaderService from 'services/Uploader';\nimport { useImageAndBannerImage } from 'hooks';\nconfigure({\n  axios: axiosInstance\n});\n\nconst OfferCreationContainer = ({\n  closeModal,\n  role,\n  providerId\n}) => {\n  const _AuthService$currentS = AuthService.currentSession,\n        userId = _AuthService$currentS.id,\n        provider_id = _AuthService$currentS.provider_id;\n  const formRef = useRef(null);\n\n  const _useImageAndBannerIma = useImageAndBannerImage(),\n        _useImageAndBannerIma2 = _slicedToArray(_useImageAndBannerIma, 2),\n        _useImageAndBannerIma3 = _useImageAndBannerIma2[0],\n        file = _useImageAndBannerIma3.file,\n        onChangeFileUpload = _useImageAndBannerIma3.onChangeFileUpload,\n        _useImageAndBannerIma4 = _useImageAndBannerIma2[1],\n        bannerFile = _useImageAndBannerIma4.bannerFile,\n        onChangeBannerUpload = _useImageAndBannerIma4.onChangeBannerUpload;\n\n  const _Form$useForm = Form.useForm(),\n        _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n        form = _Form$useForm2[0];\n\n  const _useAxios = useAxios({\n    url: '/offers',\n    method: 'POST'\n  }, {\n    manual: true\n  }),\n        _useAxios2 = _slicedToArray(_useAxios, 2),\n        _useAxios2$ = _useAxios2[0],\n        offerPayload = _useAxios2$.data,\n        offerError = _useAxios2$.error,\n        createOffer = _useAxios2[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafieldStore = _useGlobalStore.datafield,\n        providerStore = _useGlobalStore.provider,\n        offerStore = _useGlobalStore.offer;\n\n  console.log(\"66666666\", offerStore);\n  let providerEntities = Object.values(providerStore.entities);\n\n  const submit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        const values = yield form.validateFields(['rubric_attachment', 'location_type', 'category', 'description', 'learn_and_earn', 'frequency', 'frequency_unit', 'cost', 'cost_unit', 'credit_unit', 'pay_unit', 'length', 'length_unit', 'name', 'provider_id', 'topics', 'pay', 'credit', 'keywords', 'related_offers', 'prerequisites', 'is_local_promo', 'is_main_promo', 'external_url']);\n        const provider_id = values.provider_id;\n        console.log(\"insissssssssssssss\", values);\n        const offerResponse = yield createOffer({\n          data: _objectSpread(_objectSpread({}, values), {}, {\n            provider_id\n          })\n        });\n\n        if (offerResponse.data) {\n          offerStore.addOne(offerResponse.data);\n        }\n\n        if (offerResponse.data && userId) {\n          const fileable_type = 'offer';\n          let clonedResponse = Object.assign(offerResponse.data);\n          const filePayload = [];\n\n          if (file) {\n            const results = yield UploaderService.uploadFile(file, {\n              uploaded_by_user_id: userId,\n              fileable_type,\n              fileable_id: offerResponse.data.id\n            });\n\n            if (results && results.file.data) {\n              filePayload.push(_objectSpread({}, results.file.data));\n            }\n\n            if (results.success) {\n              notification.success({\n                message: 'Success',\n                description: 'Main image is uploaded'\n              });\n            }\n          }\n\n          if (bannerFile) {\n            const results = yield UploaderService.uploadFile(bannerFile, {\n              uploaded_by_user_id: userId,\n              fileable_type,\n              fileable_id: offerResponse.data.id,\n              meta: 'banner-image'\n            });\n\n            if (results && results.file.data) {\n              filePayload.push(_objectSpread({}, results.file.data));\n            }\n\n            if (results.success) {\n              notification.success({\n                message: 'Success',\n                description: 'Banner image is uploaded'\n              });\n            }\n          }\n\n          clonedResponse.Files = [...filePayload];\n          offerStore.updateOne(clonedResponse);\n        }\n\n        if (offerResponse && offerResponse.status === 201) {\n          notification.success({\n            message: offerResponse.status,\n            description: 'Successfully created offer'\n          });\n          form.resetFields();\n          closeModal();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n\n    return function submit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    if (formRef.current && role === 'provider') {\n      if (providerEntities.length) {\n        providerEntities = _reject(providerEntities, p => {\n          return !(p.id === providerId);\n        });\n        form.setFieldsValue({\n          provider_id: _head(providerEntities).id\n        });\n      }\n    }\n\n    if (offerError) {\n      const _offerError$request = offerError.request,\n            status = _offerError$request.status,\n            statusText = _offerError$request.statusText;\n      notification.error({\n        message: status,\n        description: statusText\n      });\n    }\n  }, [offerPayload, offerError, formRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"offerForm\",\n    ref: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-6 overflow-y-auto\",\n    style: {\n      maxHeight: '32rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OfferForm, {\n    role: role,\n    offers: Object.values(offerStore.entities),\n    datafields: datafieldStore.entities,\n    providers: providerEntities,\n    userId: userId,\n    providerId: provider_id,\n    file: file,\n    onChangeUpload: onChangeFileUpload,\n    bannerFile: bannerFile,\n    onChangeBannerUpload: onChangeBannerUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-white px-6 pt-5 pb-1 flex justify-center\",\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-3 px-10 rounded\",\n    type: \"primary\",\n    size: \"small\",\n    htmlType: \"submit\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"px-10 rounded\",\n    size: \"small\",\n    type: \"dashed\",\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\n__signature__(OfferCreationContainer, \"useRef{formRef}\\nuseImageAndBannerImage{[\\r\\n    { file, onChangeFileUpload },\\r\\n    { bannerFile, onChangeBannerUpload },\\r\\n  ]}\\nuseForm{[form]}\\nuseAxios{[{ data: offerPayload, error: offerError }, createOffer]}\\nuseGlobalStore{{\\r\\n    datafield: datafieldStore,\\r\\n    provider: providerStore,\\r\\n    offer: offerStore,\\r\\n  }}\\nuseEffect{}\", () => [useImageAndBannerImage, useAxios, useGlobalStore]);\n\nconst _default = OfferCreationContainer;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OfferCreationContainer, \"OfferCreationContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/offer/OfferCreationContainer.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/offer/OfferCreationContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/offer/OfferCreationContainer.js"],"names":["React","useEffect","useRef","Button","Form","notification","useAxios","configure","axiosInstance","OfferForm","useGlobalStore","AuthService","UploaderService","useImageAndBannerImage","axios","OfferCreationContainer","closeModal","role","providerId","currentSession","userId","id","provider_id","formRef","file","onChangeFileUpload","bannerFile","onChangeBannerUpload","useForm","form","url","method","manual","offerPayload","data","offerError","error","createOffer","datafieldStore","datafield","providerStore","provider","offerStore","offer","console","log","providerEntities","Object","values","entities","submit","validateFields","offerResponse","addOne","fileable_type","clonedResponse","assign","filePayload","results","uploadFile","uploaded_by_user_id","fileable_id","push","success","message","description","meta","Files","updateOne","status","resetFields","current","length","p","setFieldsValue","request","statusText","maxHeight","borderTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Button, Form, notification } from 'antd';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport OfferForm from 'components/offer/OfferForm';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport AuthService from 'services/AuthService';\r\nimport UploaderService from 'services/Uploader';\r\nimport { head, reject } from 'lodash';\r\nimport { useImageAndBannerImage } from 'hooks';\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nconst OfferCreationContainer = ({ closeModal, role, providerId }) => {\r\n  const { id: userId, provider_id } = AuthService.currentSession;\r\n  const formRef = useRef(null);\r\n  const [\r\n    { file, onChangeFileUpload },\r\n    { bannerFile, onChangeBannerUpload },\r\n  ] = useImageAndBannerImage();\r\n  const [form] = Form.useForm();\r\n  const [{ data: offerPayload, error: offerError }, createOffer] = useAxios(\r\n    {\r\n      url: '/offers',\r\n      method: 'POST',\r\n    },\r\n    { manual: true }\r\n  );\r\n\r\n  const {\r\n    datafield: datafieldStore,\r\n    provider: providerStore,\r\n    offer: offerStore,\r\n  } = useGlobalStore();\r\n console.log(\"66666666\",offerStore)\r\n  let providerEntities = Object.values(providerStore.entities);\r\n\r\n  const submit = async () => {\r\n    try {\r\n      const values = await form.validateFields([\r\n        'rubric_attachment',\r\n        'location_type',\r\n        'category',\r\n        'description',\r\n        'learn_and_earn',\r\n        'frequency',\r\n        'frequency_unit',\r\n        'cost',\r\n        'cost_unit',\r\n        'credit_unit',\r\n        'pay_unit',\r\n        'length',\r\n        'length_unit',\r\n        'name',\r\n        'provider_id',\r\n        'topics',\r\n        'pay',\r\n        'credit',\r\n        'keywords',\r\n        'related_offers',\r\n        'prerequisites',\r\n        'is_local_promo',\r\n        'is_main_promo',\r\n        'external_url',\r\n      ]);\r\n     \r\n      const { provider_id } = values;\r\n      console.log(\"insissssssssssssss\",values)\r\n      const offerResponse = await createOffer({\r\n        data: {\r\n          ...values,\r\n          provider_id,\r\n        },\r\n      });\r\n\r\n      if (offerResponse.data) {\r\n        offerStore.addOne(offerResponse.data);\r\n      }\r\n\r\n      if (offerResponse.data && userId) {\r\n        const fileable_type = 'offer';\r\n        let clonedResponse = Object.assign(offerResponse.data);\r\n        const filePayload = [];\r\n        if (file) {\r\n          const results = await UploaderService.uploadFile(file, {\r\n            uploaded_by_user_id: userId,\r\n            fileable_type,\r\n            fileable_id: offerResponse.data.id,\r\n          });\r\n\r\n          if (results && results.file.data) {\r\n            filePayload.push({ ...results.file.data });\r\n          }\r\n\r\n          if (results.success) {\r\n            notification.success({\r\n              message: 'Success',\r\n              description: 'Main image is uploaded',\r\n            });\r\n          }\r\n        }\r\n        if (bannerFile) {\r\n          const results = await UploaderService.uploadFile(bannerFile, {\r\n            uploaded_by_user_id: userId,\r\n            fileable_type,\r\n            fileable_id: offerResponse.data.id,\r\n            meta: 'banner-image',\r\n          });\r\n\r\n          if (results && results.file.data) {\r\n            filePayload.push({ ...results.file.data });\r\n          }\r\n\r\n          if (results.success) {\r\n            notification.success({\r\n              message: 'Success',\r\n              description: 'Banner image is uploaded',\r\n            });\r\n          }\r\n        }\r\n        clonedResponse.Files = [...filePayload];\r\n        offerStore.updateOne(clonedResponse);\r\n      }\r\n\r\n      if (offerResponse && offerResponse.status === 201) {\r\n        notification.success({\r\n          message: offerResponse.status,\r\n          description: 'Successfully created offer',\r\n        });\r\n        form.resetFields();\r\n        closeModal();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formRef.current && role === 'provider') {\r\n      if (providerEntities.length) {\r\n        providerEntities = reject(providerEntities, (p) => {\r\n          return !(p.id === providerId);\r\n        });\r\n\r\n        form.setFieldsValue({\r\n          provider_id: head(providerEntities).id,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (offerError) {\r\n      const { status, statusText } = offerError.request;\r\n      notification.error({\r\n        message: status,\r\n        description: statusText,\r\n      });\r\n    }\r\n  }, [offerPayload, offerError, formRef]);\r\n\r\n  return (\r\n    <div>\r\n      <Form form={form} name=\"offerForm\" ref={formRef}>\r\n        <div className=\"p-6 overflow-y-auto\" style={{ maxHeight: '32rem' }}>\r\n          <OfferForm\r\n            role={role}\r\n            offers={Object.values(offerStore.entities)}\r\n            datafields={datafieldStore.entities}\r\n            providers={providerEntities}\r\n            userId={userId}\r\n            providerId={provider_id}\r\n            file={file}\r\n            onChangeUpload={onChangeFileUpload}\r\n            bannerFile={bannerFile}\r\n            onChangeBannerUpload={onChangeBannerUpload}\r\n          />\r\n        </div>\r\n        <section\r\n          className=\"bg-white px-6 pt-5 pb-1 flex justify-center\"\r\n          style={{\r\n            borderTop: '1px solid #f0f0f0',\r\n          }}\r\n        >\r\n          <Button\r\n            className=\"mr-3 px-10 rounded\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            htmlType=\"submit\"\r\n            onClick={submit}\r\n          >\r\n            Create\r\n          </Button>\r\n          <Button\r\n            className=\"px-10 rounded\"\r\n            size=\"small\"\r\n            type=\"dashed\"\r\n            onClick={() => closeModal()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </section>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OfferCreationContainer;\r\n"]},"metadata":{},"sourceType":"module"}
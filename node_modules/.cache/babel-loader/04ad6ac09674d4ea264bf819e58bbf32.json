{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\n\nconst axios = require('axios').default;\n\nfunction PdfUploadFunction(props) {\n  const _useState = useState({\n    files: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        files = _useState2[0],\n        setInputFile = _useState2[1];\n\n  const onChangeUpload = e => {\n    console.log(\"eeeeeeeee\", e.target.files);\n\n    let emailvalue = _objectSpread(_objectSpread({}, files), {}, {\n      files: e.target.files[0]\n    });\n\n    setInputFile(emailvalue);\n  };\n\n  const handleButton = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield pdfFileData(files).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resp) {\n          console.log(\"resp\", handleButton); // if (resp.status === 200) {\n          //   let pdfItem = resp.data.original\n          // }\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(error => {\n        console.log(error, \"erorrr\");\n      });\n    });\n\n    return function handleButton() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const pdfFileData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (files) {\n      let fileData = files.files;\n      var bodyFormData = new FormData();\n      yield bodyFormData.append('files', fileData);\n      let pdfData = yield axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return pdfData;\n    });\n\n    return function pdfFileData(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  console.log(\"inputFile\", files);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"h-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: e => onChangeUpload(e, \"files\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Choose\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"label\",\n    \"data-js-label\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }\n  }, \"No file selected\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pdf_btn\",\n    onClick: () => handleButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Upload PDF\")));\n}\n\n__signature__(PdfUploadFunction, \"useState{[files, setInputFile]({\\n    files: []\\n  })}\");\n\nconst _default = PdfUploadFunction;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n  reactHotLoader.register(PdfUploadFunction, \"PdfUploadFunction\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js"],"names":["React","useEffect","useState","Layout","Row","Col","Input","Form","Upload","message","Button","FontAwesomeIcon","faCloudUploadAlt","axios","require","default","PdfUploadFunction","props","files","setInputFile","onChangeUpload","e","console","log","target","emailvalue","handleButton","pdfFileData","then","resp","catch","error","fileData","bodyFormData","FormData","append","pdfData","post","headers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\nconst axios = require('axios').default;\n\nfunction PdfUploadFunction(props) {\n  const [files, setInputFile] = useState({\n    files: []\n  })\n  const onChangeUpload = (e) => {\n      console.log(\"eeeeeeeee\",e.target.files)\n    let emailvalue = { ...files, files: e.target.files[0] }\n    setInputFile(emailvalue)\n  }\n  const handleButton = async () => {\n    await pdfFileData(files).then(async resp => {\n      console.log(\"resp\",handleButton)\n      // if (resp.status === 200) {\n      //   let pdfItem = resp.data.original\n      // }\n    }).catch(error => {\n      console.log(error,\"erorrr\")\n    })\n  }\n  const pdfFileData = async (files) => {\n    let fileData = files.files\n    var bodyFormData = new FormData();\n    await bodyFormData.append('files', fileData);\n    let pdfData = await axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    return pdfData\n  }\n  console.log(\"inputFile\",files)\n  return (\n    <Layout className=\"h-auto mb-6\">\n       <Col span={7} className=\"flex justify-end items-center\">\n        <div class='file-input'>\n          <input type='file'  name=\"file\"  onChange={(e) => onChangeUpload(e, \"files\")}/>\n          <span class='button'>Choose</span>\n          <span class='label' data-js-label><label>No file selected</label></span>\n        </div>\n        <button className=\"pdf_btn\" onClick={() => handleButton()}>Upload PDF</button> \n      </Col>\n    </Layout>\n  );\n}\n\nexport default PdfUploadFunction;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _sortBy from \"lodash/sortBy\";\nimport _last from \"lodash/last\";\nimport _head from \"lodash/head\";\nimport _keyBy from \"lodash/keyBy\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport _property from \"lodash/property\";\nimport _groupBy from \"lodash/groupBy\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/user-pathway/UserPathwayContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport { TitleDivider } from 'components/shared';\nimport { InfoCard } from 'components/student';\nimport UserPathway from 'components/student/user-pathway/UserPathway/UserPathway';\nimport 'assets/scss/responsive-carousel-override.scss';\n\nconst _default = function _default(props) {\n  const session = props.session,\n        pathway = props.pathway,\n        student = props.student,\n        completedEnrollments = props.completedEnrollments,\n        enrollmentsByOfferId = props.enrollmentsByOfferId,\n        myEnrollments = props.myEnrollments;\n\n  const _useGlobalStore = useGlobalStore(),\n        offerStore = _useGlobalStore.offer,\n        datafield = _useGlobalStore.datafield,\n        pathwayStore = _useGlobalStore.pathway;\n\n  const groupedDataFields = _groupBy(datafield.entities, _property('type'));\n\n  const pathwayId = pathway ? pathway.id : null;\n\n  const getOffer = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (offerId) {\n      const _yield$axiosInstance$ = yield axiosInstance.get(`/offers/${offerId}?scope=with_details`),\n            data = _yield$axiosInstance$.data;\n\n      offerStore.addOne(data);\n    });\n\n    return function getOffer(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getPathway = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_pathwayId) {\n      if (!_pathwayId) {\n        return null;\n      }\n\n      if (!pathwayStore.entities[_pathwayId]) {\n        const _yield$axiosInstance$2 = yield axiosInstance.get(`/pathways/${pathwayId}?scope=with_details`),\n              data = _yield$axiosInstance$2.data;\n\n        pathwayStore.addOne(data);\n      }\n    });\n\n    return function getPathway(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getPathway(pathwayId);\n  }, []);\n\n  if (!pathway) {\n    return null;\n  }\n\n  let groupsOfOffers = {};\n  let groupKeys = [];\n\n  if (pathway && pathway.GroupsOfOffers) {\n    groupsOfOffers = _groupBy(pathway.GroupsOfOffers, 'group_name');\n    groupKeys = Object.keys(groupsOfOffers);\n  }\n\n  let studentsPathways = null;\n\n  const keyedByStudentPathwayId = _keyBy(student.StudentPathways, 'StudentPathway.pathway_id');\n\n  if (keyedByStudentPathwayId[pathway.id]) {\n    studentsPathways = keyedByStudentPathwayId[pathway.id];\n  }\n\n  if (pathway && pathway.group_sort_order && pathway.group_sort_order.length) {\n    groupKeys = pathway.group_sort_order;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserPathway, {\n    title: pathway && pathway.name ? pathway.name : '---',\n    pathway: pathway,\n    groupedDataFields: groupedDataFields,\n    session: session,\n    studentsPathways: studentsPathways,\n    completedEnrollments: completedEnrollments,\n    enrollmentsByOfferId: enrollmentsByOfferId,\n    student: student,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      maxWidth: 896\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, groupKeys && groupKeys.length && /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'GROUPS OF OFFERS',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }) || null, groupKeys && groupKeys.length && groupKeys.map((groupName, index) => {\n    const group = groupsOfOffers[groupName];\n    let groupOfOfferEnrollments = [];\n\n    let firstOfferPathway = _head(group);\n\n    let year = null;\n\n    if (!group) {\n      return null;\n    }\n\n    for (let i = 0; i < group.length; i++) {\n      if (!myEnrollments[group[i].offer_id]) {\n        break;\n      }\n\n      const offerEnrollments = myEnrollments[group[i].offer_id];\n\n      for (let j = 0; j < offerEnrollments.length; j++) {\n        if (!offerEnrollments[j]) {\n          break;\n        }\n\n        groupOfOfferEnrollments.push(offerEnrollments[j]);\n      }\n    }\n\n    groupOfOfferEnrollments = _sortBy(groupOfOfferEnrollments, ['start_date', 'updatedAt']);\n\n    if (!groupOfOfferEnrollments.length) {\n      year = dayjs().year() + firstOfferPathway.year - 1;\n    }\n\n    if (_last(groupOfOfferEnrollments)) {\n      year = dayjs(_last(groupOfOfferEnrollments).start_date).year();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: _uniqueId('div_'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-row mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2 font-bold bg-green-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, groupName), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"block capitalize px-2 bg-green-200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, firstOfferPathway.semester), year ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-2 bg-gray-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Year \", year) : null)), group.map((g, idx) => {\n      let latestEnrollment = null;\n\n      if (!g) {\n        return null;\n      }\n\n      let p = null;\n      const offer = offerStore.entities[g.offer_id];\n\n      if (!offer) {\n        getOffer(g.offer_id);\n      }\n\n      if (offer && offer.provider_id) {\n        p = offer.Provider;\n      }\n\n      if (myEnrollments[g.offer_id]) {\n        latestEnrollment = _last(myEnrollments[g.offer_id]);\n      }\n\n      return /*#__PURE__*/React.createElement(Link, {\n        to: `/home/offer/${offer.id}`,\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(InfoCard, {\n        className: \"mb-4\",\n        data: offer,\n        provider: p,\n        key: _uniqueId('card_'),\n        groupedDataFields: groupedDataFields,\n        latestEnrollment: latestEnrollment,\n        enableStatus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }) || null)));\n};\n\n__signature__(_default, \"useGlobalStore{{\\r\\n    offer: offerStore,\\r\\n    datafield,\\r\\n    pathway: pathwayStore,\\r\\n  }}\\nuseEffect{}\", () => [useGlobalStore]);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/user-pathway/UserPathwayContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/user-pathway/UserPathwayContainer.js"],"names":["React","useEffect","Link","dayjs","useGlobalStore","axiosInstance","TitleDivider","InfoCard","UserPathway","props","session","pathway","student","completedEnrollments","enrollmentsByOfferId","myEnrollments","offerStore","offer","datafield","pathwayStore","groupedDataFields","entities","pathwayId","id","getOffer","offerId","get","data","addOne","getPathway","_pathwayId","groupsOfOffers","groupKeys","GroupsOfOffers","Object","keys","studentsPathways","keyedByStudentPathwayId","StudentPathways","group_sort_order","length","name","maxWidth","middleSpan","map","groupName","index","group","groupOfOfferEnrollments","firstOfferPathway","year","i","offer_id","offerEnrollments","j","push","start_date","semester","g","idx","latestEnrollment","p","provider_id","Provider"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { groupBy, property, uniqueId, keyBy, head, last, sortBy } from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport { TitleDivider } from 'components/shared';\r\nimport { InfoCard } from 'components/student';\r\nimport UserPathway from 'components/student/user-pathway/UserPathway/UserPathway';\r\nimport 'assets/scss/responsive-carousel-override.scss';\r\n\r\nexport default function (props) {\r\n  const {\r\n    session,\r\n    pathway,\r\n    student,\r\n    completedEnrollments,\r\n    enrollmentsByOfferId,\r\n    myEnrollments,\r\n  } = props;\r\n  const {\r\n    offer: offerStore,\r\n    datafield,\r\n    pathway: pathwayStore,\r\n  } = useGlobalStore();\r\n\r\n  const groupedDataFields = groupBy(datafield.entities, property('type'));\r\n  const pathwayId = pathway ? pathway.id : null;\r\n\r\n  const getOffer = async (offerId) => {\r\n    const { data } = await axiosInstance.get(\r\n      `/offers/${offerId}?scope=with_details`\r\n    );\r\n    offerStore.addOne(data);\r\n  };\r\n\r\n  const getPathway = async (_pathwayId) => {\r\n    if (!_pathwayId) {\r\n      return null;\r\n    }\r\n    if (!pathwayStore.entities[_pathwayId]) {\r\n      const { data } = await axiosInstance.get(\r\n        `/pathways/${pathwayId}?scope=with_details`\r\n      );\r\n      pathwayStore.addOne(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPathway(pathwayId);\r\n  }, []);\r\n\r\n  if (!pathway) {\r\n    return null;\r\n  }\r\n\r\n  let groupsOfOffers = {};\r\n  let groupKeys = [];\r\n\r\n  if (pathway && pathway.GroupsOfOffers) {\r\n    groupsOfOffers = groupBy(pathway.GroupsOfOffers, 'group_name');\r\n    groupKeys = Object.keys(groupsOfOffers);\r\n  }\r\n\r\n  let studentsPathways = null;\r\n\r\n  const keyedByStudentPathwayId = keyBy(\r\n    student.StudentPathways,\r\n    'StudentPathway.pathway_id'\r\n  );\r\n\r\n  if (keyedByStudentPathwayId[pathway.id]) {\r\n    studentsPathways = keyedByStudentPathwayId[pathway.id];\r\n  }\r\n\r\n  if (pathway && pathway.group_sort_order && pathway.group_sort_order.length) {\r\n    groupKeys = pathway.group_sort_order;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <UserPathway\r\n        title={pathway && pathway.name ? pathway.name : '---'}\r\n        pathway={pathway}\r\n        groupedDataFields={groupedDataFields}\r\n        session={session}\r\n        studentsPathways={studentsPathways}\r\n        completedEnrollments={completedEnrollments}\r\n        enrollmentsByOfferId={enrollmentsByOfferId}\r\n        student={student}\r\n      >\r\n        <section style={{ maxWidth: 896 }}>\r\n          {(groupKeys && groupKeys.length && (\r\n            <TitleDivider\r\n              title={'GROUPS OF OFFERS'}\r\n              align=\"center\"\r\n              classNames={{ middleSpan: 'text-base' }}\r\n            />\r\n          )) ||\r\n            null}\r\n          {(groupKeys &&\r\n            groupKeys.length &&\r\n            groupKeys.map((groupName, index) => {\r\n              const group = groupsOfOffers[groupName];\r\n              let groupOfOfferEnrollments = [];\r\n              let firstOfferPathway = head(group);\r\n\r\n              let year = null;\r\n\r\n              if (!group) {\r\n                return null;\r\n              }\r\n\r\n              for (let i = 0; i < group.length; i++) {\r\n                if (!myEnrollments[group[i].offer_id]) {\r\n                  break;\r\n                }\r\n                const offerEnrollments = myEnrollments[group[i].offer_id];\r\n                for (let j = 0; j < offerEnrollments.length; j++) {\r\n                  if (!offerEnrollments[j]) {\r\n                    break;\r\n                  }\r\n                  groupOfOfferEnrollments.push(offerEnrollments[j]);\r\n                }\r\n              }\r\n\r\n              groupOfOfferEnrollments = sortBy(groupOfOfferEnrollments, [\r\n                'start_date',\r\n                'updatedAt',\r\n              ]);\r\n\r\n              if (!groupOfOfferEnrollments.length) {\r\n                year = dayjs().year() + firstOfferPathway.year - 1;\r\n              }\r\n\r\n              if (last(groupOfOfferEnrollments)) {\r\n                year = dayjs(last(groupOfOfferEnrollments).start_date).year();\r\n              }\r\n\r\n              return (\r\n                <div key={uniqueId('div_')}>\r\n                  <div className=\"mb-2\">\r\n                    <div className=\"flex flex-row mx-auto\">\r\n                      <span className=\"px-2 font-bold bg-green-300\">\r\n                        {groupName}\r\n                      </span>\r\n                      <span className=\"block capitalize px-2 bg-green-200\">\r\n                        {firstOfferPathway.semester}\r\n                      </span>\r\n                      {year ? (\r\n                        <span className=\"px-2 bg-gray-300\">Year {year}</span>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  {group.map((g, idx) => {\r\n                    let latestEnrollment = null;\r\n\r\n                    if (!g) {\r\n                      return null;\r\n                    }\r\n\r\n                    let p = null;\r\n\r\n                    const offer = offerStore.entities[g.offer_id];\r\n\r\n                    if (!offer) {\r\n                      getOffer(g.offer_id);\r\n                    }\r\n\r\n                    if (offer && offer.provider_id) {\r\n                      p = offer.Provider;\r\n                    }\r\n\r\n                    if (myEnrollments[g.offer_id]) {\r\n                      latestEnrollment = last(myEnrollments[g.offer_id]);\r\n                    }\r\n\r\n                    return (\r\n                      <Link to={`/home/offer/${offer.id}`} key={idx}>\r\n                        <InfoCard\r\n                          className=\"mb-4\"\r\n                          data={offer}\r\n                          provider={p}\r\n                          key={uniqueId('card_')}\r\n                          groupedDataFields={groupedDataFields}\r\n                          latestEnrollment={latestEnrollment}\r\n                          enableStatus={true}\r\n                        />\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })) ||\r\n            null}\r\n        </section>\r\n      </UserPathway>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
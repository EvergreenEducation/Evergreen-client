{"ast":null,"code":"import _isNil from \"lodash/isNil\";\nimport _matchesProperty from \"lodash/matchesProperty\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProvidersTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Table, Tag, Button } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nconst Column = Table.Column;\n\nfunction ProvidersTable({\n  data = [],\n  loading,\n  handleUpdateModal,\n  handleDeleteModal\n}) {\n  // console.log(\"============\",data)\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    loading: loading,\n    pagination: {\n      pageSize: 8\n    },\n    dataSource: data,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: text => ({\n      children: text,\n      props: {\n        'data-title': 'ID'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Name'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Location\",\n    dataIndex: \"location\",\n    key: \"location\",\n    render: text => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Location'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Industry\",\n    dataIndex: \"industry\",\n    key: \"industry\",\n    render: text => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Industry'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Location Type\",\n    dataIndex: \"location_type\",\n    key: \"location_type\",\n    render: text => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'location_type'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Topics\",\n    dataIndex: \"DataFields\",\n    key: \"DataFields\",\n    render: (datafields = []) => {\n      datafields = datafields.filter(d => d.type === 'topic');\n      let children = 'N/A';\n\n      if (datafields.length) {\n        children = /*#__PURE__*/React.createElement(React.Fragment, null, datafields.map((datafield, index) => {\n          if (datafield.type !== 'topic') {\n            return null;\n          }\n\n          return /*#__PURE__*/React.createElement(Tag, {\n            color: index % 2 ? 'blue' : 'orange',\n            key: index.toString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }\n          }, datafield.name);\n        }) || null);\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Topics'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Type\",\n    dataIndex: \"DataFields\",\n    key: \"DataFields\",\n    render: (datafields = []) => {\n      const datafield = _find(datafields, _matchesProperty('type', 'provider'));\n\n      let children = 'N/A';\n\n      if (!_isNil(datafield)) {\n        children = datafield.name;\n      }\n\n      return {\n        children: children,\n        props: {\n          'data-title': 'Type'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Action\",\n    key: \"update\",\n    render: (text, record) => ({\n      children: /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        onClick: () => handleUpdateModal(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, \"Update\"),\n      props: {\n        'data-title': ''\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Action\",\n    key: \"update\",\n    render: (text, record) => ({\n      children: /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        onClick: () => handleDeleteModal(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, \"Delete\"),\n      props: {\n        'data-title': ''\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst _default = ProvidersTable;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(ProvidersTable, \"ProvidersTable\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProvidersTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProvidersTable.js"],"names":["React","Table","Tag","Button","Column","ProvidersTable","data","loading","handleUpdateModal","handleDeleteModal","pageSize","text","children","props","length","datafields","filter","d","type","map","datafield","index","toString","name","record"],"mappings":"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","sourcesContent":["import React, {} from 'react';\r\nimport { Table, Tag, Button } from 'antd';\r\nimport { find, matchesProperty, isNil } from 'lodash';\r\nimport 'assets/scss/antd-overrides.scss';\r\nconst { Column } = Table;\r\n\r\nfunction ProvidersTable({ data = [], loading, handleUpdateModal,handleDeleteModal }) {\r\n  // console.log(\"============\",data)\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table\r\n          loading={loading}\r\n          pagination={{ pageSize: 8 }}\r\n          dataSource={data}\r\n          bordered\r\n          className=\"ant-table-wrapper--responsive\"\r\n          rowClassName={() => 'antd-row'}\r\n          rowKey=\"id\"\r\n        >\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"ID\"\r\n            dataIndex=\"id\"\r\n            key=\"id\"\r\n            render={(text) => ({\r\n              children: text,\r\n              props: {\r\n                'data-title': 'ID',\r\n              },\r\n            })}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Name',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n            render={(text) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Location',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Industry\"\r\n            dataIndex=\"industry\"\r\n            key=\"industry\"\r\n            render={(text) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Industry',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n           <Column\r\n            className=\"antd-col\"\r\n            title=\"Location Type\"\r\n            dataIndex=\"location_type\"\r\n            key=\"location_type\"\r\n            render={(text) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'location_type',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Topics\"\r\n            dataIndex=\"DataFields\"\r\n            key=\"DataFields\"\r\n            render={(datafields = [],) => {\r\n              datafields = datafields.filter((d) => d.type === 'topic');\r\n              let children = 'N/A';\r\n\r\n              if (datafields.length) {\r\n                children = (\r\n                  <>\r\n                    {datafields.map((datafield, index) => {\r\n                      if (datafield.type !== 'topic') {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <Tag\r\n                          color={index % 2 ? 'blue' : 'orange'}\r\n                          key={index.toString()}\r\n                        >\r\n                          {datafield.name}\r\n                        </Tag>\r\n                      );\r\n                    }) || null}\r\n                  </>\r\n                );\r\n              }\r\n\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Topics',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Type\"\r\n            dataIndex=\"DataFields\"\r\n            key=\"DataFields\"\r\n            render={(datafields = []) => {\r\n              const datafield = find(\r\n                datafields,\r\n                matchesProperty('type', 'provider')\r\n              );\r\n              let children = 'N/A';\r\n              if (!isNil(datafield)) {\r\n                children = datafield.name;\r\n              }\r\n              return {\r\n                children: children,\r\n                props: {\r\n                  'data-title': 'Type',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Action\"\r\n            key=\"update\"\r\n            render={(text, record) => ({\r\n              children: (\r\n                <Button type=\"link\" onClick={() => handleUpdateModal(record)}>\r\n                  Update\r\n                </Button>\r\n              ),\r\n              props: {\r\n                'data-title': '',\r\n              },\r\n            })}\r\n          />\r\n         <Column\r\n            className=\"antd-col\"\r\n            title=\"Action\"\r\n            key=\"update\"\r\n            render={(text, record) => ({\r\n              children: (\r\n                <Button type=\"link\" onClick={() => handleDeleteModal(record)}>\r\n                  Delete\r\n                </Button>\r\n              ),\r\n              props: {\r\n                'data-title': '',\r\n              },\r\n            })}\r\n          />\r\n        </Table>\r\n      </div>\r\n      <div>\r\n        {/* <PdfListing /> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProvidersTable;\r\n"]},"metadata":{},"sourceType":"module"}
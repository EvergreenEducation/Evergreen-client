{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollModal.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Modal, Form, Button, notification, Select, Col } from 'antd';\nimport axiosInstance from 'services/AxiosInstance';\nimport useGlobalStore from 'store/GlobalStore';\nimport 'assets/scss/antd-overrides.scss';\nconst Option = Select.Option;\nexport default function EnrollModal({\n  offer,\n  onCancel,\n  visible,\n  students,\n  enrollment\n}) {\n  const _useGlobalStore = useGlobalStore(),\n        enrollmentStore = _useGlobalStore.enrollment;\n\n  const _Form$useForm = Form.useForm(),\n        _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n        form = _Form$useForm2[0];\n\n  const submitEnrollment = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (enrollment && enrollment.id) {\n        const values = yield form.validateFields(['student_id']);\n\n        if (values.student_id) {\n          const _yield$axiosInstance$ = yield axiosInstance.put(`/enrollments/${enrollment.id}`, {\n            student_id: values.student_id\n          }),\n                data = _yield$axiosInstance$.data,\n                status = _yield$axiosInstance$.status;\n\n          if (data) {\n            enrollmentStore.updateOne(data);\n          }\n\n          if (status === 200) {\n            notification.success({\n              message: 'Enrollment updated'\n            });\n            onCancel();\n          }\n        }\n      }\n    });\n\n    return function submitEnrollment() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    forceRender: true,\n    className: \"custom-modal\",\n    title: 'Enroll Student',\n    visible: visible,\n    width: 520,\n    bodyStyle: {\n      backgroundColor: '#f0f2f5',\n      padding: 0\n    },\n    footer: true,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-6 overflow-y-auto\",\n    style: {\n      maxHeight: '32rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Student\",\n    name: \"student_id\",\n    labelAlign: 'left',\n    colon: false,\n    className: \"mb-0 inherit flex-col w-full\",\n    rules: [{\n      required: true,\n      message: 'Please select a student'\n    }],\n    disabled: !students.length ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"custom-select-rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, students && students.length && students.map(({\n    student_id\n  }, index) => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: student_id,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, student_id);\n  }))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-white px-6 pt-5 pb-1 flex justify-center\",\n    style: {\n      borderTop: '1px solid #f0f0f0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-3 px-10 rounded\",\n    size: \"small\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: submitEnrollment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Enroll\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"px-10 rounded\",\n    size: \"small\",\n    type: \"dashed\",\n    onClick: () => onCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n}\n\n__signature__(EnrollModal, \"useGlobalStore{{ enrollment: enrollmentStore }}\\nuseForm{[form]}\", () => [useGlobalStore]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Option, \"Option\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollModal.js\");\n  reactHotLoader.register(EnrollModal, \"EnrollModal\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollModal.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/enrollment/EnrollModal.js"],"names":["React","Modal","Form","Button","notification","Select","Col","axiosInstance","useGlobalStore","Option","EnrollModal","offer","onCancel","visible","students","enrollment","enrollmentStore","useForm","form","submitEnrollment","id","values","validateFields","student_id","put","data","status","updateOne","success","message","backgroundColor","padding","maxHeight","required","length","map","index","borderTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Form, Button, notification, Select, Col } from 'antd';\nimport axiosInstance from 'services/AxiosInstance';\nimport useGlobalStore from 'store/GlobalStore';\nimport 'assets/scss/antd-overrides.scss';\n\nconst { Option } = Select;\n\nexport default function EnrollModal({\n  offer,\n  onCancel,\n  visible,\n  students,\n  enrollment,\n}) {\n  const { enrollment: enrollmentStore } = useGlobalStore();\n  const [form] = Form.useForm();\n\n  const submitEnrollment = async () => {\n    if (enrollment && enrollment.id) {\n      const values = await form.validateFields(['student_id']);\n      if (values.student_id) {\n        const { data, status } = await axiosInstance.put(\n          `/enrollments/${enrollment.id}`,\n          {\n            student_id: values.student_id,\n          }\n        );\n\n        if (data) {\n          enrollmentStore.updateOne(data);\n        }\n\n        if (status === 200) {\n          notification.success({\n            message: 'Enrollment updated',\n          });\n          onCancel();\n        }\n      }\n    }\n  };\n\n  return (\n    <Modal\n      forceRender={true}\n      className=\"custom-modal\"\n      title={'Enroll Student'}\n      visible={visible}\n      width={520}\n      bodyStyle={{ backgroundColor: '#f0f2f5', padding: 0 }}\n      footer={true}\n      onCancel={onCancel}\n    >\n      <Form form={form}>\n        <div className=\"p-6 overflow-y-auto\" style={{ maxHeight: '32rem' }}>\n          <Col span={24} className=\"mb-5\">\n            <Form.Item\n              label=\"Student\"\n              name=\"student_id\"\n              labelAlign={'left'}\n              colon={false}\n              className=\"mb-0 inherit flex-col w-full\"\n              rules={[{ required: true, message: 'Please select a student' }]}\n              disabled={!students.length ? true : false}\n            >\n              <Select className=\"custom-select-rounded\">\n                {students &&\n                  students.length &&\n                  students.map(({ student_id }, index) => {\n                    return (\n                      <Option value={student_id} key={index}>\n                        {student_id}\n                      </Option>\n                    );\n                  })}\n              </Select>\n            </Form.Item>\n          </Col>\n        </div>\n        <section\n          className=\"bg-white px-6 pt-5 pb-1 flex justify-center\"\n          style={{\n            borderTop: '1px solid #f0f0f0',\n          }}\n        >\n          <Button\n            className=\"mr-3 px-10 rounded\"\n            size=\"small\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={submitEnrollment}\n          >\n            Enroll\n          </Button>\n          <Button\n            className=\"px-10 rounded\"\n            size=\"small\"\n            type=\"dashed\"\n            onClick={() => onCancel()}\n          >\n            Cancel\n          </Button>\n        </section>\n      </Form>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar cuid = require('cuid');\n\nvar _require = require('@uppy/companion-client'),\n    Provider = _require.Provider,\n    RequestClient = _require.RequestClient,\n    Socket = _require.Socket;\n\nvar emitSocketProgress = require('@uppy/utils/lib/emitSocketProgress');\n\nvar getSocketHost = require('@uppy/utils/lib/getSocketHost');\n\nvar EventTracker = require('@uppy/utils/lib/EventTracker');\n\nvar ProgressTimeout = require('@uppy/utils/lib/ProgressTimeout');\n\nvar NetworkError = require('@uppy/utils/lib/NetworkError');\n\nvar isNetworkError = require('@uppy/utils/lib/isNetworkError'); // See XHRUpload\n\n\nfunction buildResponseError(xhr, error) {\n  // No error message\n  if (!error) error = new Error('Upload error'); // Got an error message string\n\n  if (typeof error === 'string') error = new Error(error); // Got something else\n\n  if (!(error instanceof Error)) {\n    error = _extends(new Error('Upload error'), {\n      data: error\n    });\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr);\n    return error;\n  }\n\n  error.request = xhr;\n  return error;\n} // See XHRUpload\n\n\nfunction setTypeInBlob(file) {\n  var dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);\n  return dataWithUpdatedType;\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  function MiniXHRUpload(uppy, opts) {\n    this.uppy = uppy;\n    this.opts = _extends({\n      validateStatus: function validateStatus(status, responseText, response) {\n        return status >= 200 && status < 300;\n      }\n    }, opts);\n    this.requests = opts.__queue;\n    this.uploaderEvents = Object.create(null);\n    this.i18n = opts.i18n;\n  }\n\n  var _proto = MiniXHRUpload.prototype;\n\n  _proto._getOptions = function _getOptions(file) {\n    var uppy = this.uppy;\n    var overrides = uppy.getState().xhrUpload;\n\n    var opts = _extends({}, this.opts, overrides || {}, file.xhrUpload || {}, {\n      headers: {}\n    });\n\n    _extends(opts.headers, this.opts.headers);\n\n    if (overrides) {\n      _extends(opts.headers, overrides.headers);\n    }\n\n    if (file.xhrUpload) {\n      _extends(opts.headers, file.xhrUpload.headers);\n    }\n\n    return opts;\n  };\n\n  _proto.uploadFile = function uploadFile(id, current, total) {\n    var file = this.uppy.getFile(id);\n\n    if (file.error) {\n      throw new Error(file.error);\n    } else if (file.isRemote) {\n      return this._uploadRemoteFile(file, current, total);\n    }\n\n    return this._uploadLocalFile(file, current, total);\n  };\n\n  _proto._addMetadata = function _addMetadata(formData, meta, opts) {\n    var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.\n    : Object.keys(meta);\n    metaFields.forEach(function (item) {\n      formData.append(item, meta[item]);\n    });\n  };\n\n  _proto._createFormDataUpload = function _createFormDataUpload(file, opts) {\n    var formPost = new FormData();\n\n    this._addMetadata(formPost, file.meta, opts);\n\n    var dataWithUpdatedType = setTypeInBlob(file);\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType);\n    }\n\n    return formPost;\n  };\n\n  _proto._createBareUpload = function _createBareUpload(file, opts) {\n    return file.data;\n  };\n\n  _proto._onFileRemoved = function _onFileRemoved(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', function (file) {\n      if (fileID === file.id) cb(file.id);\n    });\n  };\n\n  _proto._onRetry = function _onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', function (targetFileID) {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  };\n\n  _proto._onRetryAll = function _onRetryAll(fileID, cb) {\n    var _this = this;\n\n    this.uploaderEvents[fileID].on('retry-all', function (filesToRetry) {\n      if (!_this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  };\n\n  _proto._onCancelAll = function _onCancelAll(fileID, cb) {\n    var _this2 = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this2.uppy.getFile(fileID)) return;\n      cb();\n    });\n  };\n\n  _proto._uploadLocalFile = function _uploadLocalFile(file, current, total) {\n    var _this3 = this;\n\n    var opts = this._getOptions(file);\n\n    this.uppy.log(\"uploading \" + current + \" of \" + total);\n    return new Promise(function (resolve, reject) {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n      var data = opts.formData ? _this3._createFormDataUpload(file, opts) : _this3._createBareUpload(file, opts);\n      var xhr = new XMLHttpRequest();\n      _this3.uploaderEvents[file.id] = new EventTracker(_this3.uppy);\n      var timer = new ProgressTimeout(opts.timeout, function () {\n        xhr.abort();\n        queuedRequest.done();\n        var error = new Error(_this3.i18n('timedOut', {\n          seconds: Math.ceil(opts.timeout / 1000)\n        }));\n\n        _this3.uppy.emit('upload-error', file, error);\n\n        reject(error);\n      });\n      var id = cuid();\n      xhr.upload.addEventListener('loadstart', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" started\");\n      });\n      xhr.upload.addEventListener('progress', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" progress: \" + ev.loaded + \" / \" + ev.total); // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n\n\n        timer.progress();\n\n        if (ev.lengthComputable) {\n          _this3.uppy.emit('upload-progress', file, {\n            uploader: _this3,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total\n          });\n        }\n      });\n      xhr.addEventListener('load', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" finished\");\n\n        timer.done();\n        queuedRequest.done();\n\n        if (_this3.uploaderEvents[file.id]) {\n          _this3.uploaderEvents[file.id].remove();\n\n          _this3.uploaderEvents[file.id] = null;\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          var body = opts.getResponseData(xhr.responseText, xhr);\n          var uploadURL = body[opts.responseUrlFieldName];\n          var uploadResp = {\n            status: ev.target.status,\n            body: body,\n            uploadURL: uploadURL\n          };\n\n          _this3.uppy.emit('upload-success', file, uploadResp);\n\n          if (uploadURL) {\n            _this3.uppy.log(\"Download \" + file.name + \" from \" + uploadURL);\n          }\n\n          return resolve(file);\n        } else {\n          var _body = opts.getResponseData(xhr.responseText, xhr);\n\n          var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n          var response = {\n            status: ev.target.status,\n            body: _body\n          };\n\n          _this3.uppy.emit('upload-error', file, error, response);\n\n          return reject(error);\n        }\n      });\n      xhr.addEventListener('error', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" errored\");\n\n        timer.done();\n        queuedRequest.done();\n\n        if (_this3.uploaderEvents[file.id]) {\n          _this3.uploaderEvents[file.id].remove();\n\n          _this3.uploaderEvents[file.id] = null;\n        }\n\n        var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n\n        _this3.uppy.emit('upload-error', file, error);\n\n        return reject(error);\n      });\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = opts.withCredentials;\n\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType;\n      }\n\n      Object.keys(opts.headers).forEach(function (header) {\n        xhr.setRequestHeader(header, opts.headers[header]);\n      });\n\n      var queuedRequest = _this3.requests.run(function () {\n        xhr.send(data);\n        return function () {\n          timer.done();\n          xhr.abort();\n        };\n      }, {\n        priority: 1\n      });\n\n      _this3._onFileRemoved(file.id, function () {\n        queuedRequest.abort();\n        reject(new Error('File removed'));\n      });\n\n      _this3._onCancelAll(file.id, function () {\n        queuedRequest.abort();\n        reject(new Error('Upload cancelled'));\n      });\n    });\n  };\n\n  _proto._uploadRemoteFile = function _uploadRemoteFile(file, current, total) {\n    var _this4 = this;\n\n    var opts = this._getOptions(file);\n\n    return new Promise(function (resolve, reject) {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n      var fields = {};\n      var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.\n      : Object.keys(file.meta);\n      metaFields.forEach(function (name) {\n        fields[name] = file.meta[name];\n      });\n      var Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n      var client = new Client(_this4.uppy, file.remote.providerOptions);\n      client.post(file.remote.url, _extends({}, file.remote.body, {\n        endpoint: opts.endpoint,\n        size: file.data.size,\n        fieldname: opts.fieldName,\n        metadata: fields,\n        httpMethod: opts.method,\n        useFormData: opts.formData,\n        headers: opts.headers\n      })).then(function (res) {\n        var token = res.token;\n        var host = getSocketHost(file.remote.companionUrl);\n        var socket = new Socket({\n          target: host + \"/api/\" + token,\n          autoOpen: false\n        });\n        _this4.uploaderEvents[file.id] = new EventTracker(_this4.uppy);\n\n        _this4._onFileRemoved(file.id, function () {\n          socket.send('pause', {});\n          queuedRequest.abort();\n          resolve(\"upload \" + file.id + \" was removed\");\n        });\n\n        _this4._onCancelAll(file.id, function () {\n          socket.send('pause', {});\n          queuedRequest.abort();\n          resolve(\"upload \" + file.id + \" was canceled\");\n        });\n\n        _this4._onRetry(file.id, function () {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        });\n\n        _this4._onRetryAll(file.id, function () {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        });\n\n        socket.on('progress', function (progressData) {\n          return emitSocketProgress(_this4, progressData, file);\n        });\n        socket.on('success', function (data) {\n          var body = opts.getResponseData(data.response.responseText, data.response);\n          var uploadURL = body[opts.responseUrlFieldName];\n          var uploadResp = {\n            status: data.response.status,\n            body: body,\n            uploadURL: uploadURL\n          };\n\n          _this4.uppy.emit('upload-success', file, uploadResp);\n\n          queuedRequest.done();\n\n          if (_this4.uploaderEvents[file.id]) {\n            _this4.uploaderEvents[file.id].remove();\n\n            _this4.uploaderEvents[file.id] = null;\n          }\n\n          return resolve();\n        });\n        socket.on('error', function (errData) {\n          var resp = errData.response;\n          var error = resp ? opts.getResponseError(resp.responseText, resp) : _extends(new Error(errData.error.message), {\n            cause: errData.error\n          });\n\n          _this4.uppy.emit('upload-error', file, error);\n\n          queuedRequest.done();\n\n          if (_this4.uploaderEvents[file.id]) {\n            _this4.uploaderEvents[file.id].remove();\n\n            _this4.uploaderEvents[file.id] = null;\n          }\n\n          reject(error);\n        });\n\n        var queuedRequest = _this4.requests.run(function () {\n          socket.open();\n\n          if (file.isPaused) {\n            socket.send('pause', {});\n          }\n\n          return function () {\n            return socket.close();\n          };\n        });\n      }).catch(function (err) {\n        _this4.uppy.emit('upload-error', file, err);\n\n        reject(err);\n      });\n    });\n  };\n\n  return MiniXHRUpload;\n}();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/@uppy/aws-s3/lib/MiniXHRUpload.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","cuid","require","_require","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","NetworkError","isNetworkError","buildResponseError","xhr","error","Error","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","module","exports","MiniXHRUpload","uppy","opts","validateStatus","status","responseText","response","requests","__queue","uploaderEvents","create","i18n","_proto","_getOptions","overrides","getState","xhrUpload","headers","uploadFile","id","current","total","getFile","isRemote","_uploadRemoteFile","_uploadLocalFile","_addMetadata","formData","metaFields","Array","isArray","keys","forEach","item","append","_createFormDataUpload","formPost","FormData","name","fieldName","_createBareUpload","_onFileRemoved","fileID","cb","on","_onRetry","targetFileID","_onRetryAll","_this","filesToRetry","_onCancelAll","_this2","_this3","log","Promise","resolve","reject","XMLHttpRequest","timer","timeout","abort","queuedRequest","done","seconds","Math","ceil","emit","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","remove","body","getResponseData","uploadURL","responseUrlFieldName","uploadResp","_body","getResponseError","open","method","toUpperCase","endpoint","withCredentials","responseType","header","setRequestHeader","run","send","priority","_this4","fields","Client","remote","providerOptions","provider","client","post","url","fieldname","metadata","httpMethod","useFormData","then","res","token","host","companionUrl","socket","autoOpen","progressData","errData","resp","message","cause","isPaused","close","catch","err"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar cuid = require('cuid');\n\nvar _require = require('@uppy/companion-client'),\n    Provider = _require.Provider,\n    RequestClient = _require.RequestClient,\n    Socket = _require.Socket;\n\nvar emitSocketProgress = require('@uppy/utils/lib/emitSocketProgress');\n\nvar getSocketHost = require('@uppy/utils/lib/getSocketHost');\n\nvar EventTracker = require('@uppy/utils/lib/EventTracker');\n\nvar ProgressTimeout = require('@uppy/utils/lib/ProgressTimeout');\n\nvar NetworkError = require('@uppy/utils/lib/NetworkError');\n\nvar isNetworkError = require('@uppy/utils/lib/isNetworkError'); // See XHRUpload\n\n\nfunction buildResponseError(xhr, error) {\n  // No error message\n  if (!error) error = new Error('Upload error'); // Got an error message string\n\n  if (typeof error === 'string') error = new Error(error); // Got something else\n\n  if (!(error instanceof Error)) {\n    error = _extends(new Error('Upload error'), {\n      data: error\n    });\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr);\n    return error;\n  }\n\n  error.request = xhr;\n  return error;\n} // See XHRUpload\n\n\nfunction setTypeInBlob(file) {\n  var dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);\n  return dataWithUpdatedType;\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  function MiniXHRUpload(uppy, opts) {\n    this.uppy = uppy;\n    this.opts = _extends({\n      validateStatus: function validateStatus(status, responseText, response) {\n        return status >= 200 && status < 300;\n      }\n    }, opts);\n    this.requests = opts.__queue;\n    this.uploaderEvents = Object.create(null);\n    this.i18n = opts.i18n;\n  }\n\n  var _proto = MiniXHRUpload.prototype;\n\n  _proto._getOptions = function _getOptions(file) {\n    var uppy = this.uppy;\n    var overrides = uppy.getState().xhrUpload;\n\n    var opts = _extends({}, this.opts, overrides || {}, file.xhrUpload || {}, {\n      headers: {}\n    });\n\n    _extends(opts.headers, this.opts.headers);\n\n    if (overrides) {\n      _extends(opts.headers, overrides.headers);\n    }\n\n    if (file.xhrUpload) {\n      _extends(opts.headers, file.xhrUpload.headers);\n    }\n\n    return opts;\n  };\n\n  _proto.uploadFile = function uploadFile(id, current, total) {\n    var file = this.uppy.getFile(id);\n\n    if (file.error) {\n      throw new Error(file.error);\n    } else if (file.isRemote) {\n      return this._uploadRemoteFile(file, current, total);\n    }\n\n    return this._uploadLocalFile(file, current, total);\n  };\n\n  _proto._addMetadata = function _addMetadata(formData, meta, opts) {\n    var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.\n    : Object.keys(meta);\n    metaFields.forEach(function (item) {\n      formData.append(item, meta[item]);\n    });\n  };\n\n  _proto._createFormDataUpload = function _createFormDataUpload(file, opts) {\n    var formPost = new FormData();\n\n    this._addMetadata(formPost, file.meta, opts);\n\n    var dataWithUpdatedType = setTypeInBlob(file);\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType);\n    }\n\n    return formPost;\n  };\n\n  _proto._createBareUpload = function _createBareUpload(file, opts) {\n    return file.data;\n  };\n\n  _proto._onFileRemoved = function _onFileRemoved(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', function (file) {\n      if (fileID === file.id) cb(file.id);\n    });\n  };\n\n  _proto._onRetry = function _onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', function (targetFileID) {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  };\n\n  _proto._onRetryAll = function _onRetryAll(fileID, cb) {\n    var _this = this;\n\n    this.uploaderEvents[fileID].on('retry-all', function (filesToRetry) {\n      if (!_this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  };\n\n  _proto._onCancelAll = function _onCancelAll(fileID, cb) {\n    var _this2 = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this2.uppy.getFile(fileID)) return;\n      cb();\n    });\n  };\n\n  _proto._uploadLocalFile = function _uploadLocalFile(file, current, total) {\n    var _this3 = this;\n\n    var opts = this._getOptions(file);\n\n    this.uppy.log(\"uploading \" + current + \" of \" + total);\n    return new Promise(function (resolve, reject) {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n      var data = opts.formData ? _this3._createFormDataUpload(file, opts) : _this3._createBareUpload(file, opts);\n      var xhr = new XMLHttpRequest();\n      _this3.uploaderEvents[file.id] = new EventTracker(_this3.uppy);\n      var timer = new ProgressTimeout(opts.timeout, function () {\n        xhr.abort();\n        queuedRequest.done();\n        var error = new Error(_this3.i18n('timedOut', {\n          seconds: Math.ceil(opts.timeout / 1000)\n        }));\n\n        _this3.uppy.emit('upload-error', file, error);\n\n        reject(error);\n      });\n      var id = cuid();\n      xhr.upload.addEventListener('loadstart', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" started\");\n      });\n      xhr.upload.addEventListener('progress', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" progress: \" + ev.loaded + \" / \" + ev.total); // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n\n\n        timer.progress();\n\n        if (ev.lengthComputable) {\n          _this3.uppy.emit('upload-progress', file, {\n            uploader: _this3,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total\n          });\n        }\n      });\n      xhr.addEventListener('load', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" finished\");\n\n        timer.done();\n        queuedRequest.done();\n\n        if (_this3.uploaderEvents[file.id]) {\n          _this3.uploaderEvents[file.id].remove();\n\n          _this3.uploaderEvents[file.id] = null;\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          var body = opts.getResponseData(xhr.responseText, xhr);\n          var uploadURL = body[opts.responseUrlFieldName];\n          var uploadResp = {\n            status: ev.target.status,\n            body: body,\n            uploadURL: uploadURL\n          };\n\n          _this3.uppy.emit('upload-success', file, uploadResp);\n\n          if (uploadURL) {\n            _this3.uppy.log(\"Download \" + file.name + \" from \" + uploadURL);\n          }\n\n          return resolve(file);\n        } else {\n          var _body = opts.getResponseData(xhr.responseText, xhr);\n\n          var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n          var response = {\n            status: ev.target.status,\n            body: _body\n          };\n\n          _this3.uppy.emit('upload-error', file, error, response);\n\n          return reject(error);\n        }\n      });\n      xhr.addEventListener('error', function (ev) {\n        _this3.uppy.log(\"[AwsS3/XHRUpload] \" + id + \" errored\");\n\n        timer.done();\n        queuedRequest.done();\n\n        if (_this3.uploaderEvents[file.id]) {\n          _this3.uploaderEvents[file.id].remove();\n\n          _this3.uploaderEvents[file.id] = null;\n        }\n\n        var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n\n        _this3.uppy.emit('upload-error', file, error);\n\n        return reject(error);\n      });\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n\n      xhr.withCredentials = opts.withCredentials;\n\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType;\n      }\n\n      Object.keys(opts.headers).forEach(function (header) {\n        xhr.setRequestHeader(header, opts.headers[header]);\n      });\n\n      var queuedRequest = _this3.requests.run(function () {\n        xhr.send(data);\n        return function () {\n          timer.done();\n          xhr.abort();\n        };\n      }, {\n        priority: 1\n      });\n\n      _this3._onFileRemoved(file.id, function () {\n        queuedRequest.abort();\n        reject(new Error('File removed'));\n      });\n\n      _this3._onCancelAll(file.id, function () {\n        queuedRequest.abort();\n        reject(new Error('Upload cancelled'));\n      });\n    });\n  };\n\n  _proto._uploadRemoteFile = function _uploadRemoteFile(file, current, total) {\n    var _this4 = this;\n\n    var opts = this._getOptions(file);\n\n    return new Promise(function (resolve, reject) {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n      var fields = {};\n      var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.\n      : Object.keys(file.meta);\n      metaFields.forEach(function (name) {\n        fields[name] = file.meta[name];\n      });\n      var Client = file.remote.providerOptions.provider ? Provider : RequestClient;\n      var client = new Client(_this4.uppy, file.remote.providerOptions);\n      client.post(file.remote.url, _extends({}, file.remote.body, {\n        endpoint: opts.endpoint,\n        size: file.data.size,\n        fieldname: opts.fieldName,\n        metadata: fields,\n        httpMethod: opts.method,\n        useFormData: opts.formData,\n        headers: opts.headers\n      })).then(function (res) {\n        var token = res.token;\n        var host = getSocketHost(file.remote.companionUrl);\n        var socket = new Socket({\n          target: host + \"/api/\" + token,\n          autoOpen: false\n        });\n        _this4.uploaderEvents[file.id] = new EventTracker(_this4.uppy);\n\n        _this4._onFileRemoved(file.id, function () {\n          socket.send('pause', {});\n          queuedRequest.abort();\n          resolve(\"upload \" + file.id + \" was removed\");\n        });\n\n        _this4._onCancelAll(file.id, function () {\n          socket.send('pause', {});\n          queuedRequest.abort();\n          resolve(\"upload \" + file.id + \" was canceled\");\n        });\n\n        _this4._onRetry(file.id, function () {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        });\n\n        _this4._onRetryAll(file.id, function () {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        });\n\n        socket.on('progress', function (progressData) {\n          return emitSocketProgress(_this4, progressData, file);\n        });\n        socket.on('success', function (data) {\n          var body = opts.getResponseData(data.response.responseText, data.response);\n          var uploadURL = body[opts.responseUrlFieldName];\n          var uploadResp = {\n            status: data.response.status,\n            body: body,\n            uploadURL: uploadURL\n          };\n\n          _this4.uppy.emit('upload-success', file, uploadResp);\n\n          queuedRequest.done();\n\n          if (_this4.uploaderEvents[file.id]) {\n            _this4.uploaderEvents[file.id].remove();\n\n            _this4.uploaderEvents[file.id] = null;\n          }\n\n          return resolve();\n        });\n        socket.on('error', function (errData) {\n          var resp = errData.response;\n          var error = resp ? opts.getResponseError(resp.responseText, resp) : _extends(new Error(errData.error.message), {\n            cause: errData.error\n          });\n\n          _this4.uppy.emit('upload-error', file, error);\n\n          queuedRequest.done();\n\n          if (_this4.uploaderEvents[file.id]) {\n            _this4.uploaderEvents[file.id].remove();\n\n            _this4.uploaderEvents[file.id] = null;\n          }\n\n          reject(error);\n        });\n\n        var queuedRequest = _this4.requests.run(function () {\n          socket.open();\n\n          if (file.isPaused) {\n            socket.send('pause', {});\n          }\n\n          return function () {\n            return socket.close();\n          };\n        });\n      }).catch(function (err) {\n        _this4.uppy.emit('upload-error', file, err);\n\n        reject(err);\n      });\n    });\n  };\n\n  return MiniXHRUpload;\n}();"]},"metadata":{},"sourceType":"script"}
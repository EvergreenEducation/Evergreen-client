{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _property from \"lodash/property\";\nimport _groupBy from \"lodash/groupBy\";\nimport _compact from \"lodash/compact\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/student/TopicCarouselContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button } from 'antd';\nimport useGlobalStore from 'store/GlobalStore';\nimport { Carousel } from 'react-responsive-carousel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { InfoCard } from 'components/student';\nimport { TitleDivider } from 'components/shared';\nimport 'assets/scss/responsive-carousel-override.scss';\nimport * as _ from 'underscore';\n\nconst _default = function _default(props) {\n  const getDataFields = props.getDataFields,\n        getPathways = props.getPathways,\n        getOffers = props.getOffers,\n        getProviders = props.getProviders,\n        activePageId = props.activePageId;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentTopic = _useState2[0],\n        setCurrentTopic = _useState2[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        offerStore = _useGlobalStore.offer,\n        PathwayStore = _useGlobalStore.pathway;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedOfferData = _useState4[0],\n        setSelectedOfferData = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedOutlookData = _useState6[0],\n        setSelectedOutlookData = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedEarningData = _useState8[0],\n        setSelectedEarningData = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedTopicId = _useState10[0],\n        setSelectedTopicId = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        activeTopicId = _useState12[0],\n        setActiveTopicId = _useState12[1];\n\n  const topics = _compact(Object.values(datafield.entities).filter(d => d.type === 'topic'));\n\n  const outlook = _compact(Object.values(datafield.entities).filter(d => d.type === 'provider'));\n\n  topics.push({\n    name: 'Others'\n  });\n  outlook.push({\n    name: 'Others'\n  });\n\n  const groupedDataFields = _groupBy(datafield.entities, _property('type'));\n\n  const handleChange = e => {\n    if (selectedTopicId.length) {\n      let id = selectedTopicId[e].id;\n      getUpdatedOfferData(id);\n    }\n  }; // saving selected data when topic is change\n\n\n  function getUpdatedOfferData(id) {\n    let offerData = getOfferData(id),\n        earningData = getEarningData(id),\n        outlookData = getOutlookData(id);\n    setSelectedOfferData(offerData);\n    setSelectedEarningData(earningData);\n    setSelectedOutlookData(outlookData);\n    setActiveTopicId(id);\n    setCurrentTopic(id);\n  } // getting and saving offerdata when next topic is choose\n\n\n  function getOfferData(id) {\n    let offerArray = [];\n\n    if (getOffers && getOffers.length) {\n      for (let i = 0; i < getOffers.length; i++) {\n        for (let j = 0; j < getOffers[i].DataFields.length; j++) {\n          if (getOffers[i].DataFields[j].id === id && getOffers[i].DataFields[j].is_check_topic === true && getOffers[i].DataFields[j].page_id.includes(activePageId.id)) {\n            let offerObj = getOffers[i];\n            offerArray.push(offerObj);\n          }\n        }\n      }\n    }\n\n    return offerArray;\n  } // getting and saving earning data when next topic is choose\n\n\n  function getEarningData(id) {\n    let earningArray = [];\n\n    if (getPathways && getPathways.length) {\n      for (let i = 0; i < getPathways.length; i++) {\n        for (let j = 0; j < getPathways[i].DataFields.length; j++) {\n          if (getPathways[i].DataFields[j].id === id && getPathways[i].DataFields[j].is_check_topic === true && getPathways[i].DataFields[j].page_id.includes(activePageId.id)) {\n            let offerObj = getPathways[i];\n            earningArray.push(offerObj);\n          }\n        }\n      }\n    }\n\n    return earningArray;\n  } // getting and saving outlook data when next topic is choose\n\n\n  function getOutlookData(id) {\n    let outlookArray = [];\n\n    if (getPathways && getPathways.length) {\n      for (let i = 0; i < getPathways.length; i++) {\n        for (let j = 0; j < getPathways[i].DataFields.length; j++) {\n          if (getPathways[i].DataFields[j].id === id && getPathways[i].DataFields[j].is_check_topic === true && getPathways[i].DataFields[j].page_id.includes(activePageId.id)) {\n            let offerObj = getPathways[i];\n            outlookArray.push(offerObj);\n          }\n        }\n      }\n    }\n\n    return outlookArray;\n  } // console.log(\"getDataFields\",getDataFields)\n  // saving active Topic List\n\n\n  function getSelectedTopicList() {\n    let filterData;\n\n    if (getDataFields) {\n      filterData = getDataFields && getDataFields.filter(item => item.is_check_topic === true && item.page_id.includes(activePageId.id));\n\n      if (filterData.length) {\n        getUpdatedOfferData(filterData[0].id);\n        setSelectedTopicId(filterData);\n      }\n    }\n  }\n\n  const handleCurrentItem = (current, total) => {// const index = current - 1;\n    // setTimeout(() => {\n    //   if (onCurrentChange !== current) {\n    //     setOnCurrentChange(current);\n    //   }\n    //   if (onCurrentChange !== current) {\n    //     setCurrentTopic(topics[index]);\n    //   }\n    // }, 50);\n    // return null;\n  };\n\n  const handleCurrentItemOutlook = (current, total) => {// const index = current - 1;\n    // setTimeout(() => {\n    //   if (onCurrentChange !== current) {\n    //     setOnCurrentChange(current);\n    //   }\n    //   if (onCurrentChange !== current) {\n    //     setCurrentTopic(outlook[index]);\n    //   }\n    // }, 50);\n    // return null;\n  }; // let filterData = topics && topics.filter(item => item.is_check_topic === true);\n\n\n  const renderArrowBtns = (onClickHandler, hasPrevOrNext, icon, style = {\n    right: 15\n  }) => {\n    if (!icon) {\n      return null;\n    }\n\n    return hasPrevOrNext && /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: onClickHandler,\n      className: \"custom-control-arrow flex justify-center\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  const hasNoTopics = offer => {\n    const _offer$DataFields = offer.DataFields,\n          DataFields = _offer$DataFields === void 0 ? [] : _offer$DataFields;\n\n    for (let k = 0; k < DataFields.length; k++) {\n      if (DataFields[k].type === 'topic') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const hasNoTopicsOutlook = pathway => {\n    const _pathway$DataFields = pathway.DataFields,\n          DataFields = _pathway$DataFields === void 0 ? [] : _pathway$DataFields;\n\n    for (let k = 0; k < DataFields.length; k++) {\n      if (DataFields[k].type === 'provider') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const renderOffers = () => {\n    let currentOffers = [];\n    let offerId = null;\n\n    let _offers = _compact(currentTopic.Offers);\n\n    for (let i = 0; i < _offers.length; i++) {\n      offerId = _offers[i].id;\n      currentOffers.push(offerStore.entities[offerId]);\n    }\n\n    if (currentTopic.name === 'Others') {\n      currentOffers = Object.values(offerStore.entities).filter(hasNoTopics);\n    }\n\n    return selectedOfferData.length ? selectedOfferData.map((offer, index) => {\n      // console.log('selectedOfferData', selectedOfferData)\n      let p = null;\n\n      if (offer && offer.provider_id && offer.Provider) {\n        p = offer.Provider;\n      }\n\n      return offer.DataFields.length ? offer.DataFields.map((value, id) => {\n        if (value.is_check_topic === true && value.id === activeTopicId) {\n          // console.log('offer.DataFields',value)\n          return /*#__PURE__*/React.createElement(Link, {\n            to: `/home/offer/${offer.id}`,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(InfoCard, {\n            key: `renderOffers-${index}`,\n            className: \"mx-auto mb-4 w-full\",\n            data: offer,\n            provider: p,\n            groupedDataFields: groupedDataFields,\n            provider: offer.provider,\n            outlook: offer.outlook,\n            image: offer.rubric_attachment,\n            earnings: offer.earnings,\n            outEarvValue: true,\n            bannerImage: offer.banner_image,\n            mainImage: offer.main_image,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }\n          }));\n        }\n      }) : false;\n    }) : false;\n  };\n\n  const renderOffersOutlook = () => {\n    let currentOf = [];\n\n    let _offers = _compact(currentTopic.Offers);\n\n    for (let i = 0; i < _offers.length; i++) {\n      offerId = _offers[i].id;\n      currentOf.push(PathwayStore.entities);\n    }\n\n    if (currentTopic.name === 'Others') {\n      currentOf = Object.values(PathwayStore.entities);\n    } // currentOf = sortBy(currentOf, [{'outlook' : 'desc'}]);\n    // currentOf.sort((a, b) => parseFloat(b.outlook) - parseFloat(a.outlook));\n\n\n    selectedOutlookData.sort((a, b) => parseFloat(b.outlook) - parseFloat(a.outlook));\n    return selectedOutlookData.map((offer, index) => {\n      let p = null;\n      let outlook;\n      let earnings;\n      let image = [];\n\n      if (offer && offer.provider_id && offer.Provider) {\n        p = offer.Provider;\n        image = offer.rubric_attachment;\n        outlook = offer.outlook;\n        earnings = offer.earnings;\n      } // console.log('selectedOutlookData', selectedOutlookData)\n\n\n      if (offer && offer.DataFields) {\n        return offer.DataFields.length ? offer.DataFields.map((value, id) => {\n          // console.log('offer.DataFields', value.is_check_topic)\n          if (value.is_check_topic === true && value.id === activeTopicId) {\n            return /*#__PURE__*/React.createElement(Link, {\n              to: `/home/pathway/${offer.id}`,\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(InfoCard, {\n              key: index,\n              className: \"mx-auto mb-4 w-full\",\n              data: offer,\n              provider: offer.provider,\n              outlook: offer.outlook,\n              image: offer.rubric_attachment,\n              earnings: offer.earnings,\n              groupedDataFields: groupedDataFields,\n              outEarvValue: true,\n              bannerImage: offer.banner_image,\n              mainImage: offer.main_image,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }\n            }));\n          }\n        }) : false;\n      } else {\n        return false;\n      } // return offer && offer.DataFields ? :false\n\n    });\n  };\n\n  const renderOffersEarning = () => {\n    let currentOffers = [];\n    let offerId = null;\n\n    let _offers = _compact(currentTopic.Offers);\n\n    for (let i = 0; i < _offers.length; i++) {\n      offerId = _offers[i].id;\n      currentOffers.push(PathwayStore.entities);\n    }\n\n    if (currentTopic.name === 'Others') {\n      currentOffers = Object.values(PathwayStore.entities).filter(hasNoTopicsOutlook);\n    } // currentOffers = sortBy(currentOffers, [{'earnings' : 'desc'}]);\n    // currentOffers.sort((a, b) => parseFloat(b.earnings) - parseFloat(a.earnings));\n\n\n    selectedEarningData.sort((a, b) => parseFloat(b.earnings) - parseFloat(a.earnings));\n    return selectedEarningData.map((offer, index) => {\n      // console.log('selectedEarningData', selectedEarningData)\n      // let p = null;\n      // let outlook = null\n      // let earnings = null\n      // let image = []\n      // let mainImage = []\n      if (offer && offer.provider_id && offer.Provider) {\n        p = offer.Provider;\n        outlook = offer.outlook;\n        earnings = offer.earnings;\n        image = offer.rubric_attachment;\n        mainImage = offer.main_image;\n      }\n\n      if (offer && offer.DataFields) {\n        return offer.DataFields.length ? offer.DataFields.map((value, id) => {\n          if (value.is_check_topic === true && value.id === activeTopicId) {\n            return /*#__PURE__*/React.createElement(Link, {\n              to: `/home/pathway/${offer.id}`,\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(InfoCard, {\n              key: index,\n              className: \"mx-auto mb-4 w-full\",\n              data: offer,\n              provider: offer.provider,\n              outlook: offer.outlook,\n              image: offer.rubric_attachment,\n              earnings: offer.earnings,\n              groupedDataFields: groupedDataFields,\n              outEarvValue: true,\n              bannerImage: offer.banner_image,\n              mainImage: offer.main_image,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }\n            }));\n          }\n        }) : false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  useEffect(() => {\n    getSelectedTopicList();\n  }, [getDataFields, getPathways, getOffers, getProviders]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width-95\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-auto w-full homepage_boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'TOP OUTLOOKS',\n    align: \"right\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"custom-carousel mb-2 cursor-grab\",\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: 90,\n    showArrows: true,\n    showIndicators: false,\n    swipeable: true,\n    emulateTouch: true,\n    onChange: handleChange,\n    showStatus: true,\n    statusFormatter: handleCurrentItemOutlook,\n    showThumbs: false,\n    renderArrowNext: (...rest) => {\n      return renderArrowBtns(...rest, faArrowRight);\n    },\n    renderArrowPrev: (...rest) => {\n      return renderArrowBtns(...rest, faArrowLeft, {\n        left: 15\n      });\n    },\n    swipeScrollTolerance: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mx-auto text-white text-lg w-auto flex justify-center items-center\",\n    style: {\n      backgroundColor: 'rgb(7, 25, 80)',\n      height: 50\n    } // key={index}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, \"Outlooks\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }, currentTopic && renderOffersOutlook())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-auto w-full homepage_boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'OFFERS BY TOPICS',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"custom-carousel mb-2 cursor-grab\",\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: 90,\n    showArrows: true,\n    showIndicators: false,\n    showStatus: true,\n    statusFormatter: handleCurrentItem,\n    onChange: handleChange,\n    showThumbs: false,\n    renderArrowNext: (...rest) => {\n      return renderArrowBtns(...rest, faArrowRight);\n    },\n    renderArrowPrev: (...rest) => {\n      return renderArrowBtns(...rest, faArrowLeft, {\n        left: 15\n      });\n    },\n    swipeScrollTolerance: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  }, selectedTopicId.length ? selectedTopicId.map((topic, index) => {\n    if (topic.page_id.includes(activePageId.id)) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"mx-auto text-white text-lg w-auto flex justify-center items-center\",\n        style: {\n          backgroundColor: 'rgb(7, 25, 80)',\n          height: 50\n        },\n        key: index // onClick={ha}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }\n      }, topic.name);\n    }\n  }) : /*#__PURE__*/React.createElement(Card, {\n    className: \"mx-auto text-white text-lg w-auto flex justify-center items-center\",\n    style: {\n      backgroundColor: 'rgb(7, 25, 80)',\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, \"No Data Availble\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }, currentTopic && renderOffers())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-auto w-full homepage_boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'TOP EARNING',\n    align: \"Left\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"custom-carousel mb-2 cursor-grab\",\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: 90,\n    showArrows: true,\n    showIndicators: false,\n    swipeable: true,\n    emulateTouch: true,\n    onChange: handleChange,\n    showStatus: true,\n    statusFormatter: handleCurrentItemOutlook,\n    showThumbs: false,\n    renderArrowNext: (...rest) => {\n      return renderArrowBtns(...rest, faArrowRight);\n    },\n    renderArrowPrev: (...rest) => {\n      return renderArrowBtns(...rest, faArrowLeft, {\n        left: 15\n      });\n    },\n    swipeScrollTolerance: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mx-auto text-white text-lg w-auto flex justify-center items-center\",\n    style: {\n      backgroundColor: 'rgb(7, 25, 80)',\n      height: 50\n    } // key={index}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, \"Earning\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"width-95\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, currentTopic && renderOffersEarning())));\n};\n\n__signature__(_default, \"useState{[currentTopic, setCurrentTopic](null)}\\nuseGlobalStore{{ datafield, offer: offerStore, pathway: PathwayStore }}\\nuseState{[selectedOfferData, setSelectedOfferData]([])}\\nuseState{[selectedOutlookData, setSelectedOutlookData]([])}\\nuseState{[selectedEarningData, setSelectedEarningData]([])}\\nuseState{[selectedTopicId,setSelectedTopicId]([])}\\nuseState{[activeTopicId,setActiveTopicId]('')}\\nuseEffect{}\", () => [useGlobalStore]);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/TopicCarouselContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/student/TopicCarouselContainer.js"],"names":["React","useState","useEffect","Link","Card","Button","useGlobalStore","Carousel","FontAwesomeIcon","faArrowRight","faArrowLeft","InfoCard","TitleDivider","_","props","getDataFields","getPathways","getOffers","getProviders","activePageId","currentTopic","setCurrentTopic","datafield","offerStore","offer","PathwayStore","pathway","selectedOfferData","setSelectedOfferData","selectedOutlookData","setSelectedOutlookData","selectedEarningData","setSelectedEarningData","selectedTopicId","setSelectedTopicId","activeTopicId","setActiveTopicId","topics","Object","values","entities","filter","d","type","outlook","push","name","groupedDataFields","handleChange","e","length","id","getUpdatedOfferData","offerData","getOfferData","earningData","getEarningData","outlookData","getOutlookData","offerArray","i","j","DataFields","is_check_topic","page_id","includes","offerObj","earningArray","outlookArray","getSelectedTopicList","filterData","item","handleCurrentItem","current","total","handleCurrentItemOutlook","renderArrowBtns","onClickHandler","hasPrevOrNext","icon","style","right","hasNoTopics","k","hasNoTopicsOutlook","renderOffers","currentOffers","offerId","_offers","Offers","map","index","p","provider_id","Provider","value","provider","rubric_attachment","earnings","banner_image","main_image","renderOffersOutlook","currentOf","sort","a","b","parseFloat","image","renderOffersEarning","mainImage","middleSpan","rest","left","backgroundColor","height","topic"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Button } from 'antd';\r\nimport {\r\n  compact, groupBy, property\r\n} from 'lodash';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { InfoCard } from 'components/student';\r\nimport { TitleDivider } from 'components/shared';\r\nimport 'assets/scss/responsive-carousel-override.scss';\r\nimport * as _ from 'underscore';\r\n\r\n\r\nexport default function (props) {\r\n  const { getDataFields, getPathways, getOffers, getProviders,activePageId } = props;\r\n  const [currentTopic, setCurrentTopic] = useState(null);\r\n  const { datafield, offer: offerStore, pathway: PathwayStore } = useGlobalStore();\r\n\r\n  const [selectedOfferData, setSelectedOfferData] = useState([]);\r\n  const [selectedOutlookData, setSelectedOutlookData] = useState([]);\r\n  const [selectedEarningData, setSelectedEarningData] = useState([]);\r\n  const [selectedTopicId,setSelectedTopicId]=useState([]);\r\n  const [activeTopicId,setActiveTopicId]=useState('')\r\n\r\n  const topics = compact(\r\n    Object.values(datafield.entities).filter((d) => d.type === 'topic')\r\n  );\r\n  const outlook = compact(\r\n    Object.values(datafield.entities).filter((d) => d.type === 'provider')\r\n  );\r\n\r\n  topics.push({ name: 'Others' });\r\n  outlook.push({ name: 'Others' });\r\n\r\n  const groupedDataFields = groupBy(datafield.entities, property('type'));\r\n\r\n  const handleChange = (e) => {\r\n    if (selectedTopicId.length) {\r\n      let { id } = selectedTopicId[e];\r\n      getUpdatedOfferData(id)\r\n    }\r\n  };\r\n\r\n// saving selected data when topic is change\r\n  function getUpdatedOfferData(id) {\r\n    let offerData = getOfferData(id),\r\n      earningData = getEarningData(id),\r\n      outlookData = getOutlookData(id);\r\n      setSelectedOfferData(offerData);\r\n      setSelectedEarningData(earningData);\r\n      setSelectedOutlookData(outlookData);\r\n      setActiveTopicId(id);\r\n      setCurrentTopic(id);\r\n  }\r\n\r\n// getting and saving offerdata when next topic is choose\r\n  function getOfferData(id) {\r\n    let offerArray = [];\r\n    if (getOffers && getOffers.length) {\r\n      for (let i = 0; i < getOffers.length; i++) {\r\n        for (let j = 0; j < getOffers[i].DataFields.length; j++) {\r\n          if (getOffers[i].DataFields[j].id === id && getOffers[i].DataFields[j].is_check_topic === true && getOffers[i].DataFields[j].page_id.includes(activePageId.id)) {\r\n            let offerObj = getOffers[i]\r\n            offerArray.push(offerObj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return offerArray\r\n  }\r\n\r\n// getting and saving earning data when next topic is choose\r\n  function getEarningData(id) {\r\n    let earningArray = [];\r\n    \r\n    if (getPathways && getPathways.length) {\r\n      for (let i = 0; i < getPathways.length; i++) {\r\n        for (let j = 0; j < getPathways[i].DataFields.length; j++) {\r\n          if (getPathways[i].DataFields[j].id === id && getPathways[i].DataFields[j].is_check_topic === true&& getPathways[i].DataFields[j].page_id.includes(activePageId.id)) {\r\n            let offerObj = getPathways[i]\r\n            earningArray.push(offerObj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return earningArray\r\n  }\r\n\r\n// getting and saving outlook data when next topic is choose\r\n  function getOutlookData(id) {\r\n    let outlookArray=[];\r\n    if(getPathways && getPathways.length){\r\n      for(let i=0;i<getPathways.length;i++){\r\n        for(let j=0;j<getPathways[i].DataFields.length;j++){\r\n          if(getPathways[i].DataFields[j].id === id &&getPathways[i].DataFields[j].is_check_topic === true && getPathways[i].DataFields[j].page_id.includes(activePageId.id)){\r\n            let offerObj=getPathways[i]\r\n            outlookArray.push(offerObj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return outlookArray\r\n  }\r\n\r\n    \r\n// console.log(\"getDataFields\",getDataFields)\r\n\r\n// saving active Topic List\r\n  function getSelectedTopicList(){\r\n    let filterData;\r\n    if(getDataFields){\r\n      filterData=getDataFields && getDataFields.filter(item => item.is_check_topic === true && item.page_id.includes(activePageId.id));\r\n      if(filterData.length){\r\n        getUpdatedOfferData(filterData[0].id)\r\n        setSelectedTopicId(filterData)\r\n      }\r\n   \r\n    }\r\n  }\r\n\r\n  const handleCurrentItem = (current, total) => {\r\n    // const index = current - 1;\r\n    // setTimeout(() => {\r\n    //   if (onCurrentChange !== current) {\r\n    //     setOnCurrentChange(current);\r\n    //   }\r\n    //   if (onCurrentChange !== current) {\r\n    //     setCurrentTopic(topics[index]);\r\n    //   }\r\n    // }, 50);\r\n    // return null;\r\n  };\r\n\r\n  const handleCurrentItemOutlook = (current, total) => {\r\n    // const index = current - 1;\r\n    // setTimeout(() => {\r\n    //   if (onCurrentChange !== current) {\r\n    //     setOnCurrentChange(current);\r\n    //   }\r\n    //   if (onCurrentChange !== current) {\r\n    //     setCurrentTopic(outlook[index]);\r\n    //   }\r\n    // }, 50);\r\n    // return null;\r\n  };\r\n  // let filterData = topics && topics.filter(item => item.is_check_topic === true);\r\n\r\n  const renderArrowBtns = (\r\n    onClickHandler,\r\n    hasPrevOrNext,\r\n    icon,\r\n    style = { right: 15 }\r\n  ) => {\r\n    if (!icon) {\r\n      return null;\r\n    }\r\n    return (\r\n      hasPrevOrNext && (\r\n        <Button\r\n          type=\"link\"\r\n          onClick={onClickHandler}\r\n          className=\"custom-control-arrow flex justify-center\"\r\n          style={style}>\r\n          <FontAwesomeIcon icon={icon} />\r\n        </Button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const hasNoTopics = (offer) => {\r\n    const { DataFields = [] } = offer;\r\n    for (let k = 0; k < DataFields.length; k++) {\r\n      if (DataFields[k].type === 'topic') {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const hasNoTopicsOutlook = (pathway) => {\r\n    const { DataFields = [] } = pathway;\r\n    for (let k = 0; k < DataFields.length; k++) {\r\n      if (DataFields[k].type === 'provider') {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const renderOffers = () => {\r\n    let currentOffers = [];\r\n    let offerId = null;\r\n    let _offers = compact(currentTopic.Offers);\r\n    for (let i = 0; i < _offers.length; i++) {\r\n      offerId = _offers[i].id;\r\n      currentOffers.push(offerStore.entities[offerId]);\r\n    }\r\n    if (currentTopic.name === 'Others') {\r\n      currentOffers = Object.values(offerStore.entities).filter(hasNoTopics);\r\n    }\r\n    return selectedOfferData.length? selectedOfferData.map((offer, index) => {\r\n      // console.log('selectedOfferData', selectedOfferData)\r\n\r\n      let p = null;\r\n      if (offer && offer.provider_id && offer.Provider) {\r\n        p = offer.Provider;\r\n      }\r\n      return offer.DataFields.length ? offer.DataFields.map((value, id) => {\r\n        if (value.is_check_topic === true && value.id === activeTopicId) {\r\n          // console.log('offer.DataFields',value)\r\n          return (\r\n            <Link to={`/home/offer/${offer.id}`} key={index}>\r\n              <InfoCard\r\n                key={`renderOffers-${index}`}\r\n                className=\"mx-auto mb-4 w-full\"\r\n                data={offer}\r\n                provider={p}\r\n                groupedDataFields={groupedDataFields}\r\n                provider={offer.provider}\r\n                outlook={offer.outlook}\r\n                image={offer.rubric_attachment}\r\n                earnings={offer.earnings}\r\n                outEarvValue={true}\r\n                bannerImage={offer.banner_image}\r\n                mainImage={offer.main_image}\r\n              />\r\n            </Link>\r\n          );\r\n        }\r\n      }) : false\r\n    }):false;\r\n  };\r\n\r\n  const renderOffersOutlook = () => {\r\n    let currentOf = [];\r\n    let _offers = compact(currentTopic.Offers);\r\n    for (let i = 0; i < _offers.length; i++) {\r\n      offerId = _offers[i].id;\r\n      currentOf.push(PathwayStore.entities);\r\n    }\r\n    if (currentTopic.name === 'Others') {\r\n      currentOf = Object.values(PathwayStore.entities)\r\n    }\r\n    // currentOf = sortBy(currentOf, [{'outlook' : 'desc'}]);\r\n    // currentOf.sort((a, b) => parseFloat(b.outlook) - parseFloat(a.outlook));\r\n    selectedOutlookData.sort((a, b) => parseFloat(b.outlook) - parseFloat(a.outlook));\r\n    return selectedOutlookData.map((offer, index) => {\r\n      let p = null;\r\n      let outlook\r\n      let earnings\r\n      let image = []\r\n      if (offer && offer.provider_id && offer.Provider) {\r\n        p = offer.Provider;\r\n        image = offer.rubric_attachment\r\n        outlook = offer.outlook\r\n        earnings = offer.earnings\r\n      }\r\n      // console.log('selectedOutlookData', selectedOutlookData)\r\n      if (offer && offer.DataFields) {\r\n        return offer.DataFields.length ? offer.DataFields.map((value, id) => {\r\n          // console.log('offer.DataFields', value.is_check_topic)\r\n          if (value.is_check_topic === true && value.id === activeTopicId) {\r\n            return (\r\n              <Link to={`/home/pathway/${offer.id}`} key={index} >\r\n                <InfoCard\r\n                  key={index}\r\n                  className=\"mx-auto mb-4 w-full\"\r\n                  data={offer}\r\n                  provider={offer.provider}\r\n                  outlook={offer.outlook}\r\n                  image={offer.rubric_attachment}\r\n                  earnings={offer.earnings}\r\n                  groupedDataFields={groupedDataFields}\r\n                  outEarvValue={true}\r\n                  bannerImage={offer.banner_image}\r\n                  mainImage={offer.main_image}\r\n                />\r\n              </Link>\r\n            );\r\n          }\r\n        }) : false\r\n      } else {\r\n        return false\r\n      }\r\n      // return offer && offer.DataFields ? :false\r\n    });\r\n  };\r\n\r\n  const renderOffersEarning = () => {\r\n    let currentOffers = [];\r\n    let offerId = null;\r\n    let _offers = compact(currentTopic.Offers);\r\n    for (let i = 0; i < _offers.length; i++) {\r\n      offerId = _offers[i].id;\r\n      currentOffers.push(PathwayStore.entities);\r\n    }\r\n    if (currentTopic.name === 'Others') {\r\n      currentOffers = Object.values(PathwayStore.entities).filter(hasNoTopicsOutlook);\r\n    }\r\n    // currentOffers = sortBy(currentOffers, [{'earnings' : 'desc'}]);\r\n    // currentOffers.sort((a, b) => parseFloat(b.earnings) - parseFloat(a.earnings));\r\n    selectedEarningData.sort((a, b) => parseFloat(b.earnings) - parseFloat(a.earnings));\r\n    return selectedEarningData.map((offer, index) => {\r\n      // console.log('selectedEarningData', selectedEarningData)\r\n\r\n      // let p = null;\r\n      // let outlook = null\r\n      // let earnings = null\r\n      // let image = []\r\n      // let mainImage = []\r\n      if (offer && offer.provider_id && offer.Provider) {\r\n        p = offer.Provider;\r\n        outlook = offer.outlook\r\n        earnings = offer.earnings\r\n        image = offer.rubric_attachment\r\n        mainImage = offer.main_image\r\n      }\r\n      if (offer && offer.DataFields) {\r\n        return offer.DataFields.length ? offer.DataFields.map((value, id) => {\r\n          if (value.is_check_topic === true && value.id === activeTopicId) {\r\n            return (\r\n              <Link to={`/home/pathway/${offer.id}`} key={index}>\r\n                <InfoCard\r\n                  key={index}\r\n                  className=\"mx-auto mb-4 w-full\"\r\n                  data={offer}\r\n                  provider={offer.provider}\r\n                  outlook={offer.outlook}\r\n                  image={offer.rubric_attachment}\r\n                  earnings={offer.earnings}\r\n                  groupedDataFields={groupedDataFields}\r\n                  outEarvValue={true}\r\n                  bannerImage={offer.banner_image}\r\n                  mainImage={offer.main_image}\r\n                />\r\n              </Link>\r\n            );\r\n          }\r\n        }) : false\r\n      } else {\r\n        return false\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    getSelectedTopicList()\r\n  },[getDataFields,getPathways, getOffers, getProviders])\r\n\r\n  return (\r\n    <div className=\"width-95\">\r\n      <div className=\"h-auto w-full homepage_boxes\">\r\n        <TitleDivider\r\n          title={'TOP OUTLOOKS'}\r\n          align=\"right\"\r\n          classNames={{ middleSpan: 'text-base' }}\r\n        />\r\n        <Carousel\r\n          className=\"custom-carousel mb-2 cursor-grab\"\r\n          centerMode\r\n          infiniteLoop\r\n          centerSlidePercentage={90}\r\n          showArrows={true}\r\n          showIndicators={false}\r\n          swipeable={true}\r\n          emulateTouch={true}\r\n          onChange={handleChange}\r\n          showStatus={true}\r\n          statusFormatter={handleCurrentItemOutlook}\r\n          showThumbs={false}\r\n          renderArrowNext={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowRight);\r\n          }}\r\n          renderArrowPrev={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowLeft, { left: 15 });\r\n          }}\r\n          swipeScrollTolerance={1}\r\n        >\r\n          <Card\r\n            className=\"mx-auto text-white text-lg w-auto flex justify-center items-center\"\r\n            style={{\r\n              backgroundColor: 'rgb(7, 25, 80)',\r\n              height: 50,\r\n            }}\r\n          // key={index}\r\n          >\r\n            {\"Outlooks\"}\r\n          </Card>\r\n        </Carousel>\r\n        <main>{currentTopic && renderOffersOutlook()}</main>\r\n      </div>\r\n      <div className=\"h-auto w-full homepage_boxes\">\r\n        <TitleDivider\r\n          title={'OFFERS BY TOPICS'}\r\n          align=\"center\"\r\n          classNames={{ middleSpan: 'text-base' }}\r\n        />\r\n        <Carousel\r\n          className=\"custom-carousel mb-2 cursor-grab\"\r\n          centerMode\r\n          infiniteLoop\r\n          centerSlidePercentage={90}\r\n          showArrows={true}\r\n          showIndicators={false}\r\n          showStatus={true}\r\n          statusFormatter={handleCurrentItem}\r\n          onChange={handleChange}\r\n          showThumbs={false}\r\n          renderArrowNext={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowRight);\r\n          }}\r\n          renderArrowPrev={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowLeft, { left: 15 });\r\n          }}\r\n          swipeScrollTolerance={1}\r\n        >\r\n          {selectedTopicId.length? selectedTopicId.map((topic, index) => {\r\n            if (topic.page_id.includes(activePageId.id)) {\r\n              return (\r\n                <Card\r\n                  className=\"mx-auto text-white text-lg w-auto flex justify-center items-center\"\r\n                  style={{\r\n                    backgroundColor: 'rgb(7, 25, 80)',\r\n                    height: 50,\r\n                  }}\r\n                  key={index}\r\n                // onClick={ha}\r\n                >\r\n                  {topic.name}\r\n                </Card>\r\n              );\r\n            }\r\n          }): <Card\r\n          className=\"mx-auto text-white text-lg w-auto flex justify-center items-center\"\r\n          style={{\r\n            backgroundColor: 'rgb(7, 25, 80)',\r\n            height: 50,\r\n          }}\r\n        >\r\n        No Data Availble\r\n        </Card>}\r\n        </Carousel>\r\n        <main>{currentTopic && renderOffers()}</main>\r\n      </div>\r\n      <div className=\"h-auto w-full homepage_boxes\">\r\n        <TitleDivider\r\n          title={'TOP EARNING'}\r\n          align=\"Left\"\r\n          classNames={{ middleSpan: 'text-base' }}\r\n        />\r\n        <Carousel\r\n          className=\"custom-carousel mb-2 cursor-grab\"\r\n          centerMode\r\n          infiniteLoop\r\n          centerSlidePercentage={90}\r\n          showArrows={true}\r\n          showIndicators={false}\r\n          swipeable={true}\r\n          emulateTouch={true}\r\n          onChange={handleChange}\r\n          showStatus={true}\r\n          statusFormatter={handleCurrentItemOutlook}\r\n          showThumbs={false}\r\n          renderArrowNext={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowRight);\r\n          }}\r\n          renderArrowPrev={(...rest) => {\r\n            return renderArrowBtns(...rest, faArrowLeft, { left: 15 });\r\n          }}\r\n          swipeScrollTolerance={1}\r\n        >\r\n          <Card\r\n            className=\"mx-auto text-white text-lg w-auto flex justify-center items-center\"\r\n            style={{\r\n              backgroundColor: 'rgb(7, 25, 80)',\r\n              height: 50,\r\n            }}\r\n          // key={index}\r\n          >\r\n            {\"Earning\"}\r\n          </Card>\r\n        </Carousel>\r\n        <main  className=\"width-95\">{currentTopic && renderOffersEarning()}</main>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _isNil from \"lodash/isNil\";\nimport _matchesProperty from \"lodash/matchesProperty\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nimport { Table, Tag, Button } from 'antd';\nimport Pdf from \"react-to-pdf\";\nimport 'assets/scss/antd-overrides.scss';\n\nconst axios = require('axios').default;\n\nconst ref = React.createRef();\nconst Column = Table.Column;\n\nfunction ProvidersTable({\n  data = [],\n  loading,\n  handleUpdateModal\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfValues = _useState2[0],\n        setPdfValues = _useState2[1];\n\n  const getPdfData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n      let user_id = token.id;\n      let user_role = token.role;\n      let pdfData = yield axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`);\n      return pdfData;\n    });\n\n    return function getPdfData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getPdfData().then(resp => {\n      console.log(\"resp\", resp);\n\n      if (resp.status == 200) {\n        setPdfValues(resp.data.data);\n      }\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }, []);\n\n  const handleLink = pdf_link => {\n    console.log(\"==========\", pdf_link);\n    window.open(\"https://www.geeksforgeeks.org\", \"_blank\");\n  };\n\n  console.log(\"pdfValues\", pdfValues);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    loading: loading,\n    pagination: {\n      pageSize: 8\n    },\n    dataSource: data,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'data-title': 'ID'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: (text, record) => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Name'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Location\",\n    dataIndex: \"location\",\n    key: \"location\",\n    render: (text, record) => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Location'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Industry\",\n    dataIndex: \"industry\",\n    key: \"industry\",\n    render: (text, record) => {\n      let children = 'N/A';\n\n      if (text && text.length) {\n        children = text;\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Industry'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Topics\",\n    dataIndex: \"DataFields\",\n    key: \"DataFields\",\n    render: (datafields = [], record) => {\n      datafields = datafields.filter(d => d.type === 'topic');\n      let children = 'N/A';\n\n      if (datafields.length) {\n        children = /*#__PURE__*/React.createElement(React.Fragment, null, datafields.map((datafield, index) => {\n          if (datafield.type !== 'topic') {\n            return null;\n          }\n\n          return /*#__PURE__*/React.createElement(Tag, {\n            color: index % 2 ? 'blue' : 'orange',\n            key: index.toString(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }\n          }, datafield.name);\n        }) || null);\n      }\n\n      return {\n        children,\n        props: {\n          'data-title': 'Topics'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Type\",\n    dataIndex: \"DataFields\",\n    key: \"DataFields\",\n    render: (datafields = [], record) => {\n      const datafield = _find(datafields, _matchesProperty('type', 'provider'));\n\n      let children = 'N/A';\n\n      if (!_isNil(datafield)) {\n        children = datafield.name;\n      }\n\n      return {\n        children: children,\n        props: {\n          'data-title': 'Type'\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"\",\n    key: \"update\",\n    render: (text, record) => ({\n      children: /*#__PURE__*/React.createElement(Button, {\n        type: \"link\",\n        onClick: () => handleUpdateModal(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, \"Update\"),\n      props: {\n        'data-title': ''\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: pdfValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CollapsibleComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"additionalClassForHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"PDF LISTING\"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"additionalClassForContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    ref: pdfValues,\n    loading: loading,\n    pagination: {\n      pageSize: 8\n    },\n    dataSource: pdfValues,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Pdf Link\",\n    dataIndex: \"pdf_link\",\n    key: \"pdf_link\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'pdf_link': 'pdf_link'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"pdf_link\",\n    key: \"pdf_link\",\n    render: (text, record) => ({\n      children: /*#__PURE__*/React.createElement(\"a\", {\n        onClick: key => handleLink(key),\n        title: \"Pdf Link\",\n        dataIndex: \"pdf_link\",\n        key: \"pdfValues\",\n        render: (text, record) => ({\n          children: text,\n          props: {\n            'pdf_link': 'pdf_link'\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, \"click here\"),\n      props: {\n        'pdf_link': 'pdf_link'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n__signature__(ProvidersTable, \"useState{[pdfValues, setPdfValues]([])}\\nuseEffect{}\");\n\nconst _default = ProvidersTable;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(ref, \"ref\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(ProvidersTable, \"ProvidersTable\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js"],"names":["React","useState","useEffect","CollapsibleComponent","CollapsibleHead","CollapsibleContent","Table","Tag","Button","Pdf","axios","require","default","ref","createRef","Column","ProvidersTable","data","loading","handleUpdateModal","pdfValues","setPdfValues","getPdfData","token","JSON","parse","localStorage","getItem","user_id","id","user_role","role","pdfData","get","then","resp","console","log","status","catch","error","handleLink","pdf_link","window","open","pageSize","text","record","children","props","length","datafields","filter","d","type","map","datafield","index","toString","name","key"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,oBADF,EAEEC,eAFF,EAGEC,kBAHF,QAIO,6BAJP;AAKA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAAmC,MAAnC;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,iCAAP;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,GAAG,GAAGb,KAAK,CAACc,SAAN,EAAZ;MACQC,M,GAAWT,K,CAAXS,M;;AAER,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAxB,EAAmE;AAAA,oBAC/BlB,QAAQ,CAAC,EAAD,CADuB;AAAA;AAAA,QAC1DmB,SAD0D;AAAA,QAC/CC,YAD+C;;AAGjE,QAAMC,UAAU;AAAA,iCAAG,aAAY;AAC7B,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAZ;AACA,UAAIC,OAAO,GAAGL,KAAK,CAACM,EAApB;AACA,UAAIC,SAAS,GAAGP,KAAK,CAACQ,IAAtB;AACA,UAAIC,OAAO,SAAStB,KAAK,CAACuB,GAAN,CAAW,mDAAkDL,OAAQ,IAAGE,SAAU,EAAlF,CAApB;AACA,aAAOE,OAAP;AACD,KANe;;AAAA,oBAAVV,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,UAAU,GAAGY,IAAb,CAAkBC,IAAI,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,UAAIA,IAAI,CAACG,MAAL,IAAe,GAAnB,EAAwB;AACtBjB,QAAAA,YAAY,CAACc,IAAI,CAAClB,IAAL,CAAUA,IAAX,CAAZ;AACD;AACF,KALD,EAKGsB,KALH,CAKSC,KAAK,IAAI;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,UAAU,GAAGC,QAAD,IAAc;AAC9BN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBK,QAAzB;AACAC,IAAAA,MAAM,CAACC,IAAP,CACE,+BADF,EACmC,QADnC;AAED,GAJD;;AAKAR,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,SAAzB;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,UAAU,EAAE;AAAE2B,MAAAA,QAAQ,EAAE;AAAZ,KAFd;AAGE,IAAA,UAAU,EAAE5B,IAHd;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,SAAS,EAAC,+BALZ;AAME,IAAA,YAAY,EAAE,MAAM,UANtB;AAOE,IAAA,MAAM,EAAC,IAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,IAFR;AAGE,IAAA,SAAS,EAAC,IAHZ;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,MAAM,EAAE,CAAC6B,IAAD,EAAOC,MAAP,MAAmB;AACzBC,MAAAA,QAAQ,EAAEF,IADe;AAEzBG,MAAAA,KAAK,EAAE;AACL,sBAAc;AADT;AAFkB,KAAnB,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAqBE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,GAAG,EAAC,MAJN;AAKE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAIC,QAAQ,GAAG,KAAf;;AACA,UAAIF,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvBF,QAAAA,QAAQ,GAAGF,IAAX;AACD;;AACD,aAAO;AACLE,QAAAA,QADK;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eAuCE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,GAAG,EAAC,UAJN;AAKE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAIC,QAAQ,GAAG,KAAf;;AACA,UAAIF,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvBF,QAAAA,QAAQ,GAAGF,IAAX;AACD;;AACD,aAAO;AACLE,QAAAA,QADK;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,eAyDE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,GAAG,EAAC,UAJN;AAKE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,MAAP,KAAkB;AACxB,UAAIC,QAAQ,GAAG,KAAf;;AACA,UAAIF,IAAI,IAAIA,IAAI,CAACI,MAAjB,EAAyB;AACvBF,QAAAA,QAAQ,GAAGF,IAAX;AACD;;AACD,aAAO;AACLE,QAAAA,QADK;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,eA2EE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,GAAG,EAAC,YAJN;AAKE,IAAA,MAAM,EAAE,CAACE,UAAU,GAAG,EAAd,EAAkBJ,MAAlB,KAA6B;AACnCI,MAAAA,UAAU,GAAGA,UAAU,CAACC,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,OAApC,CAAb;AACA,UAAIN,QAAQ,GAAG,KAAf;;AAEA,UAAIG,UAAU,CAACD,MAAf,EAAuB;AACrBF,QAAAA,QAAQ,gBACN,0CACGG,UAAU,CAACI,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC,cAAID,SAAS,CAACF,IAAV,KAAmB,OAAvB,EAAgC;AAC9B,mBAAO,IAAP;AACD;;AACD,8BACE,oBAAC,GAAD;AACE,YAAA,KAAK,EAAEG,KAAK,GAAG,CAAR,GAAY,MAAZ,GAAqB,QAD9B;AAEE,YAAA,GAAG,EAAEA,KAAK,CAACC,QAAN,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGF,SAAS,CAACG,IAJb,CADF;AAQD,SAZA,KAYK,IAbR,CADF;AAiBD;;AAED,aAAO;AACLX,QAAAA,QADK;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EF,eAgHE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,GAAG,EAAC,YAJN;AAKE,IAAA,MAAM,EAAE,CAACE,UAAU,GAAG,EAAd,EAAkBJ,MAAlB,KAA6B;AACnC,YAAMS,SAAS,GAAG,MAChBL,UADgB,EAEhB,iBAAgB,MAAhB,EAAwB,UAAxB,CAFgB,CAAlB;;AAIA,UAAIH,QAAQ,GAAG,KAAf;;AACA,UAAI,CAAC,OAAMQ,SAAN,CAAL,EAAuB;AACrBR,QAAAA,QAAQ,GAAGQ,SAAS,CAACG,IAArB;AACD;;AACD,aAAO;AACLX,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,KAAK,EAAE;AACL,wBAAc;AADT;AAFF,OAAP;AAMD,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhHF,eAsIE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,EAFR;AAGE,IAAA,GAAG,EAAC,QAHN;AAIE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,MAAP,MAAmB;AACzBC,MAAAA,QAAQ,eACN,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAM7B,iBAAiB,CAAC4B,MAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFuB;AAMzBE,MAAAA,KAAK,EAAE;AACL,sBAAc;AADT;AANkB,KAAnB,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtIF,CADF,CADF,eAyJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAE7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,2BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,SADP;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,UAAU,EAAE;AAAE2B,MAAAA,QAAQ,EAAE;AAAZ,KAHd;AAIE,IAAA,UAAU,EAAEzB,SAJd;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,SAAS,EAAC,+BANZ;AAOE,IAAA,YAAY,EAAE,MAAM,UAPtB;AAQE,IAAA,MAAM,EAAC,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,SAAS,EAAC,UAHZ;AAIE,IAAA,GAAG,EAAC,UAJN;AAKE,IAAA,MAAM,EAAE,CAAC0B,IAAD,EAAOC,MAAP,MAAmB;AACzBC,MAAAA,QAAQ,EAAEF,IADe;AAEzBG,MAAAA,KAAK,EAAE;AACL,oBAAY;AADP;AAFkB,KAAnB,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAsBE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,GAAG,EAAC,UAHN;AAIE,IAAA,MAAM,EAAE,CAACH,IAAD,EAAOC,MAAP,MAAmB;AACzBC,MAAAA,QAAQ,eACN;AACE,QAAA,OAAO,EAAGY,GAAD,IAASnB,UAAU,CAACmB,GAAD,CAD9B;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,GAAG,EAAC,WAJN;AAKE,QAAA,MAAM,EAAE,CAACd,IAAD,EAAOC,MAAP,MAAmB;AACzBC,UAAAA,QAAQ,EAAEF,IADe;AAEzBG,UAAAA,KAAK,EAAE;AACL,wBAAY;AADP;AAFkB,SAAnB,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFuB;AAezBA,MAAAA,KAAK,EAAE;AACL,oBAAY;AADP;AAfkB,KAAnB,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF,CAJF,CAFF,CAzJF,CADF;AAqND;;cAjPQjC,c;;iBAmPMA,c;AAAf;;;;;;;;;;0BAvPMN,K;0BACAG,G;0BACEE,M;0BAECC,c","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent\r\n} from \"react-collapsible-component\";\r\nimport { Table, Tag, Button } from 'antd';\r\nimport { find, matchesProperty, isNil } from 'lodash';\r\nimport Pdf from \"react-to-pdf\";\r\nimport 'assets/scss/antd-overrides.scss';\r\nconst axios = require('axios').default;\r\nconst ref = React.createRef();\r\nconst { Column } = Table;\r\n\r\nfunction ProvidersTable({ data = [], loading, handleUpdateModal }) {\r\n  const [pdfValues, setPdfValues] = useState([])\r\n\r\n  const getPdfData = async () => {\r\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\r\n    let user_id = token.id\r\n    let user_role = token.role\r\n    let pdfData = await axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`)\r\n    return pdfData\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPdfData().then(resp => {\r\n      console.log(\"resp\", resp)\r\n      if (resp.status == 200) {\r\n        setPdfValues(resp.data.data)\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error\", error)\r\n    })\r\n  }, [])\r\n\r\n  const handleLink =(pdf_link) => {\r\n    console.log(\"==========\",pdf_link)\r\n    window.open( \r\n      \"https://www.geeksforgeeks.org\", \"_blank\");\r\n  }\r\n  console.log(\"pdfValues\", pdfValues)\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table\r\n          loading={loading}\r\n          pagination={{ pageSize: 8 }}\r\n          dataSource={data}\r\n          bordered\r\n          className=\"ant-table-wrapper--responsive\"\r\n          rowClassName={() => 'antd-row'}\r\n          rowKey=\"id\"\r\n        >\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"ID\"\r\n            dataIndex=\"id\"\r\n            key=\"id\"\r\n            render={(text, record) => ({\r\n              children: text,\r\n              props: {\r\n                'data-title': 'ID',\r\n              },\r\n            })}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Name\"\r\n            dataIndex=\"name\"\r\n            key=\"name\"\r\n            render={(text, record) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Name',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n            render={(text, record) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Location',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Industry\"\r\n            dataIndex=\"industry\"\r\n            key=\"industry\"\r\n            render={(text, record) => {\r\n              let children = 'N/A';\r\n              if (text && text.length) {\r\n                children = text;\r\n              }\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Industry',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Topics\"\r\n            dataIndex=\"DataFields\"\r\n            key=\"DataFields\"\r\n            render={(datafields = [], record) => {\r\n              datafields = datafields.filter((d) => d.type === 'topic');\r\n              let children = 'N/A';\r\n\r\n              if (datafields.length) {\r\n                children = (\r\n                  <>\r\n                    {datafields.map((datafield, index) => {\r\n                      if (datafield.type !== 'topic') {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <Tag\r\n                          color={index % 2 ? 'blue' : 'orange'}\r\n                          key={index.toString()}\r\n                        >\r\n                          {datafield.name}\r\n                        </Tag>\r\n                      );\r\n                    }) || null}\r\n                  </>\r\n                );\r\n              }\r\n\r\n              return {\r\n                children,\r\n                props: {\r\n                  'data-title': 'Topics',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"Type\"\r\n            dataIndex=\"DataFields\"\r\n            key=\"DataFields\"\r\n            render={(datafields = [], record) => {\r\n              const datafield = find(\r\n                datafields,\r\n                matchesProperty('type', 'provider')\r\n              );\r\n              let children = 'N/A';\r\n              if (!isNil(datafield)) {\r\n                children = datafield.name;\r\n              }\r\n              return {\r\n                children: children,\r\n                props: {\r\n                  'data-title': 'Type',\r\n                },\r\n              };\r\n            }}\r\n          />\r\n          <Column\r\n            className=\"antd-col\"\r\n            title=\"\"\r\n            key=\"update\"\r\n            render={(text, record) => ({\r\n              children: (\r\n                <Button type=\"link\" onClick={() => handleUpdateModal(record)}>\r\n                  Update\r\n                </Button>\r\n              ),\r\n              props: {\r\n                'data-title': '',\r\n              },\r\n            })}\r\n          />\r\n        </Table>\r\n      </div>\r\n      <div>\r\n        <Button ref={pdfValues} />\r\n        <CollapsibleComponent>\r\n          <CollapsibleHead className=\"additionalClassForHead\">\r\n            PDF LISTING\r\n                    </CollapsibleHead>\r\n          <CollapsibleContent className=\"additionalClassForContent\">\r\n            <Table\r\n              ref={pdfValues}\r\n              loading={loading}\r\n              pagination={{ pageSize: 8 }}\r\n              dataSource={pdfValues}\r\n              bordered\r\n              className=\"ant-table-wrapper--responsive\"\r\n              rowClassName={() => 'antd-row'}\r\n              rowKey=\"id\"\r\n            >\r\n              <Column\r\n                className=\"antd-col\"\r\n                title=\"Pdf Link\"\r\n                dataIndex=\"pdf_link\"\r\n                key=\"pdf_link\"\r\n                render={(text, record) => ({\r\n                  children: text,\r\n                  props: {\r\n                    'pdf_link': 'pdf_link',\r\n                  },\r\n                })}\r\n              />\r\n              <Column\r\n                className=\"antd-col\"\r\n                title=\"pdf_link\"\r\n                key=\"pdf_link\"\r\n                render={(text, record) => ({\r\n                  children: (\r\n                    <a\r\n                      onClick={(key) => handleLink(key)}\r\n                      title=\"Pdf Link\"\r\n                      dataIndex=\"pdf_link\"\r\n                      key=\"pdfValues\"\r\n                      render={(text, record) => ({\r\n                        children: text,\r\n                        props: {\r\n                          'pdf_link': 'pdf_link',\r\n                        },\r\n                      })}\r\n                     >click here</a>\r\n                  ),\r\n                  props: {\r\n                    'pdf_link': 'pdf_link',\r\n                  },\r\n                })}\r\n              />\r\n            </Table>\r\n          </CollapsibleContent>\r\n        </CollapsibleComponent>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProvidersTable;\r\n"]},"metadata":{},"sourceType":"module"}
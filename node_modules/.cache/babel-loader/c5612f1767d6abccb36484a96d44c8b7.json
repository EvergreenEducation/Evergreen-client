{"ast":null,"code":"var getTimeStamp = require('@uppy/utils/lib/getTimeStamp'); // Swallow all logs, except errors.\n// default if logger is not set or debug: false\n\n\nvar justErrorsLogger = {\n  debug: function debug() {},\n  warn: function warn() {},\n  error: function error() {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_console = console).error.apply(_console, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n}; // Print logs to console with namespace + timestamp,\n// set by logger: Uppy.debugLogger or debug: true\n\nvar debugLogger = {\n  debug: function debug() {\n    // IE 10 doesn’t support console.debug\n    var debug = console.debug || console.log;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    debug.call.apply(debug, [console, \"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  warn: function warn() {\n    var _console2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (_console2 = console).warn.apply(_console2, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  error: function error() {\n    var _console3;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return (_console3 = console).error.apply(_console3, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n};\nmodule.exports = {\n  justErrorsLogger: justErrorsLogger,\n  debugLogger: debugLogger\n};","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/@uppy/core/lib/loggers.js"],"names":["getTimeStamp","require","justErrorsLogger","debug","warn","error","_console","_len","arguments","length","args","Array","_key","console","apply","concat","debugLogger","log","_len2","_key2","call","_console2","_len3","_key3","_console3","_len4","_key4","module","exports"],"mappings":"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","sourcesContent":["var getTimeStamp = require('@uppy/utils/lib/getTimeStamp'); // Swallow all logs, except errors.\n// default if logger is not set or debug: false\n\n\nvar justErrorsLogger = {\n  debug: function debug() {},\n  warn: function warn() {},\n  error: function error() {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_console = console).error.apply(_console, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n}; // Print logs to console with namespace + timestamp,\n// set by logger: Uppy.debugLogger or debug: true\n\nvar debugLogger = {\n  debug: function debug() {\n    // IE 10 doesn’t support console.debug\n    var debug = console.debug || console.log;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    debug.call.apply(debug, [console, \"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  warn: function warn() {\n    var _console2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (_console2 = console).warn.apply(_console2, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  error: function error() {\n    var _console3;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return (_console3 = console).error.apply(_console3, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n};\nmodule.exports = {\n  justErrorsLogger: justErrorsLogger,\n  debugLogger: debugLogger\n};"]},"metadata":{},"sourceType":"script"}
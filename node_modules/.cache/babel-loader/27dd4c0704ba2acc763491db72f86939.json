{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport AuthService from 'services/AuthService';\nimport { useParams, Redirect, useLocation } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axiosInstance from 'services/AxiosInstance';\nimport useAxios, { configure } from 'axios-hooks';\nimport RoleSelectionScreen from 'screens/RoleSelectionScreen/RoleSelectionScreen';\nimport EmailNotVerifiedScreen from 'screens/EmailNotVerifiedScreen';\nconfigure({\n  axios: axiosInstance\n});\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n__signature__(useQuery, \"useLocation{}\", () => [useLocation]);\n\nfunction UserAuth({\n  user_id\n}) {\n  const _useAxios = useAxios(`/users/${user_id}`),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        myProfile = _useAxios2$.data,\n        loading = _useAxios2$.loading,\n        error = _useAxios2$.error;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-full h-full flex justify-center items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  } else if (error) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/error/500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  } else {\n    if (!myProfile.role) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: 'role_selection',\n          state: {\n            user_id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      });\n    }\n\n    AuthService.setCurrentSession(_objectSpread({}, myProfile));\n\n    switch (myProfile.role) {\n      case 'student':\n        {\n          const offerId = reactLocalStorage.get('offer_id');\n\n          if (offerId) {\n            reactLocalStorage.remove('offer_id');\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: {\n                pathname: `/home/offer/${offerId}`\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 18\n              }\n            });\n          }\n\n          const pathwayId = reactLocalStorage.get('pathway_id');\n\n          if (pathwayId) {\n            reactLocalStorage.remove('pathway_id');\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: {\n                pathname: `/home/pathway/${pathwayId}`\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 18\n              }\n            });\n          }\n\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: {\n              pathname: `/home/student`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }\n          });\n        }\n\n      case 'provider':\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: `/dashboard/${myProfile.provider_id}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        });\n\n      case 'admin':\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/dashboard'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }\n        });\n    }\n  }\n}\n\n__signature__(UserAuth, \"useAxios{[{ data: myProfile, loading, error }]}\", () => [useAxios]);\n\nfunction Auth() {\n  const params = useParams();\n  const action = params.action;\n  const query = useQuery();\n  const user_id = query.get('user_id');\n\n  switch (action) {\n    case 'email_not_verified':\n      return /*#__PURE__*/React.createElement(EmailNotVerifiedScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      });\n\n    case 'role_selection':\n      return /*#__PURE__*/React.createElement(RoleSelectionScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      });\n\n    case 'logout':\n      AuthService.logout();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }\n      });\n\n    case 'user':\n      if (!user_id) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/error/500'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(UserAuth, {\n        user_id: user_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }\n      });\n  }\n}\n\n__signature__(Auth, \"useParams{params}\\nuseQuery{query}\", () => [useParams, useQuery]);\n\nconst _default = Auth;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useQuery, \"useQuery\", \"/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js\");\n  reactHotLoader.register(UserAuth, \"UserAuth\", \"/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js\");\n  reactHotLoader.register(Auth, \"Auth\", \"/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/screens/AuthScreen.js"],"names":["React","AuthService","useParams","Redirect","useLocation","Spin","reactLocalStorage","axiosInstance","useAxios","configure","RoleSelectionScreen","EmailNotVerifiedScreen","axios","useQuery","URLSearchParams","search","UserAuth","user_id","myProfile","data","loading","error","pathname","role","state","setCurrentSession","offerId","get","remove","pathwayId","provider_id","Auth","params","action","query","logout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AuthService from 'services/AuthService';\r\nimport { useParams, Redirect, useLocation } from 'react-router-dom';\r\nimport { Spin } from 'antd';\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport RoleSelectionScreen from 'screens/RoleSelectionScreen/RoleSelectionScreen';\r\nimport EmailNotVerifiedScreen from 'screens/EmailNotVerifiedScreen';\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction UserAuth({ user_id }) {\r\n  const [{ data: myProfile, loading, error }] = useAxios(`/users/${user_id}`);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"w-full h-full flex justify-center items-center\">\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    );\r\n  } else if (error) {\r\n    return <Redirect to={{ pathname: '/error/500' }} />;\r\n  } else {\r\n    if (!myProfile.role) {\r\n      return (\r\n        <Redirect to={{ pathname: 'role_selection', state: { user_id } }} />\r\n      );\r\n    }\r\n\r\n    AuthService.setCurrentSession({\r\n      ...myProfile,\r\n    });\r\n\r\n    switch (myProfile.role) {\r\n      case 'student': {\r\n        const offerId = reactLocalStorage.get('offer_id');\r\n        if (offerId) {\r\n          reactLocalStorage.remove('offer_id');\r\n          return <Redirect to={{ pathname: `/home/offer/${offerId}` }} />;\r\n        }\r\n        const pathwayId = reactLocalStorage.get('pathway_id');\r\n        if (pathwayId) {\r\n          reactLocalStorage.remove('pathway_id');\r\n          return <Redirect to={{ pathname: `/home/pathway/${pathwayId}` }} />;\r\n        }\r\n        return <Redirect to={{ pathname: `/home/student` }} />;\r\n      }\r\n      case 'provider':\r\n        return (\r\n          <Redirect to={{ pathname: `/dashboard/${myProfile.provider_id}` }} />\r\n        );\r\n      case 'admin':\r\n        return <Redirect to={{ pathname: '/dashboard' }} />;\r\n      default:\r\n        return <Redirect to={{ pathname: '/' }} />;\r\n    }\r\n  }\r\n}\r\n\r\nfunction Auth() {\r\n  const params = useParams();\r\n  const { action } = params;\r\n  const query = useQuery();\r\n  const user_id = query.get('user_id');\r\n\r\n  switch (action) {\r\n    case 'email_not_verified':\r\n      return <EmailNotVerifiedScreen />;\r\n    case 'role_selection':\r\n      return <RoleSelectionScreen />;\r\n    case 'logout':\r\n      AuthService.logout();\r\n      return <div />;\r\n    case 'user':\r\n      if (!user_id) {\r\n        return <Redirect to={{ pathname: '/error/500' }} />;\r\n      }\r\n      return <UserAuth user_id={user_id} />;\r\n    default:\r\n      return <Redirect to={{ pathname: '/' }} />;\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}
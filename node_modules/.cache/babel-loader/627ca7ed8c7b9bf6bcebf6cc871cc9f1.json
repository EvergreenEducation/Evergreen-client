{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useState } from 'react';\nimport CrudHelper from './CrudHelper';\nimport { createContainer } from 'unstated-next';\nconst initialState = {\n  idKey: 'id',\n  entities: {},\n  items: []\n};\n\nfunction useDataField() {\n  let _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return _objectSpread(_objectSpread({\n    entities: state.entities,\n    items: state.items\n  }, CrudHelper(state, setState)), {}, {\n    typeEqualsProvider: function typeEqualsProvider(datafield) {\n      return datafield.type === 'provider';\n    },\n    typeEqualsTopic: function typeEqualsTopic(datafield) {\n      return datafield.type === 'topic';\n    },\n    typeEqualsOfferCategory: function typeEqualsOfferCategory(datafield) {\n      return datafield.type === 'offer_category';\n    }\n  });\n}\n\n__signature__(useDataField, \"useState{[ state, setState ](initialState)}\");\n\nconst _default = createContainer(useDataField);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialState, \"initialState\", \"/home/devnineteen/Music/evergreen-frontend/src/store/DataField.js\");\n  reactHotLoader.register(useDataField, \"useDataField\", \"/home/devnineteen/Music/evergreen-frontend/src/store/DataField.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/store/DataField.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/store/DataField.js"],"names":["useState","CrudHelper","createContainer","initialState","idKey","entities","items","useDataField","state","setState","typeEqualsProvider","datafield","type","typeEqualsTopic","typeEqualsOfferCategory"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,IADa;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAArB;;AAMA,SAASC,YAAT,GAAwB;AAAA,kBACGP,QAAQ,CAACG,YAAD,CADX;AAAA;AAAA,MACjBK,KADiB;AAAA,MACVC,QADU;;AAGvB;AACCJ,IAAAA,QAAQ,EAAEG,KAAK,CAACH,QADjB;AAECC,IAAAA,KAAK,EAAEE,KAAK,CAACF;AAFd,KAGIL,UAAU,CAACO,KAAD,EAAQC,QAAR,CAHd;AAICC,IAAAA,kBAAkB,EAAE,4BAASC,SAAT,EAAoB;AACvC,aAAOA,SAAS,CAACC,IAAV,KAAmB,UAA1B;AACA,KANF;AAOCC,IAAAA,eAAe,EAAE,yBAASF,SAAT,EAAoB;AACpC,aAAOA,SAAS,CAACC,IAAV,KAAmB,OAA1B;AACA,KATF;AAUCE,IAAAA,uBAAuB,EAAE,iCAASH,SAAT,EAAoB;AAC5C,aAAOA,SAAS,CAACC,IAAV,KAAmB,gBAA1B;AACA;AAZF;AAcA;;cAjBQL,Y;;iBAmBML,eAAe,CAACK,YAAD,C;;AAA9B;;;;;;;;;;0BAzBMJ,Y;0BAMGI,Y","sourcesContent":["import { useState } from 'react';\r\nimport CrudHelper from './CrudHelper';\r\nimport { createContainer } from 'unstated-next';\r\n\r\nconst initialState = {\r\n\tidKey: 'id',\r\n\tentities: {},\r\n\titems: []\r\n}\r\n\r\nfunction useDataField() {\r\n\tlet [ state, setState ] = useState(initialState);\r\n\r\n\treturn { \r\n\t\tentities: state.entities,\r\n\t\titems: state.items,\r\n\t\t...CrudHelper(state, setState),\r\n\t\ttypeEqualsProvider: function(datafield) {\r\n\t\t\treturn datafield.type === 'provider';\r\n\t\t},\r\n\t\ttypeEqualsTopic: function(datafield) {\r\n\t\t\treturn datafield.type === 'topic';\r\n\t\t},\r\n\t\ttypeEqualsOfferCategory: function(datafield) {\r\n\t\t\treturn datafield.type === 'offer_category';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default createContainer(useDataField);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _property from \"lodash/property\";\nimport _groupBy from \"lodash/groupBy\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/ProviderInfoContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport { TitleDivider } from 'components/shared';\nimport { InfoCard, InfoLayout } from 'components/student';\nimport 'assets/scss/responsive-carousel-override.scss';\n\nconst _default = function _default(props) {\n  const params = props.match.params;\n\n  const _useGlobalStore = useGlobalStore(),\n        providerStore = _useGlobalStore.provider,\n        datafield = _useGlobalStore.datafield,\n        pathwayStore = _useGlobalStore.pathway;\n\n  const providerId = Number(params.id);\n  const provider = providerStore.entities[providerId];\n\n  const getPathway = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (_pathwayId) {\n      const response = yield axiosInstance.get(`/pathways/${_pathwayId}?scope=with_details`);\n\n      if (!pathwayStore.entities[_pathwayId]) {\n        pathwayStore.addOne(response.data);\n      }\n    });\n\n    return function getPathway(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getProvider = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_providerId) {\n      const _yield$axiosInstance$ = yield axiosInstance.get(`/providers/${_providerId}?scope=with_details`),\n            data = _yield$axiosInstance$.data;\n\n      if (!providerStore.entities[_providerId]) {\n        providerStore.addOne(data);\n      }\n    });\n\n    return function getProvider(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getProvider(providerId);\n  }, []);\n\n  const groupedDataFields = _groupBy(datafield.entities, _property('type'));\n\n  let Offers = [];\n\n  if (provider && provider.Offers) {\n    Offers = provider.Offers;\n  }\n\n  let Pathways = [];\n\n  if (provider && provider.Pathways) {\n    Pathways = provider.Pathways;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoLayout, {\n    title: provider && provider.name ? provider.name : '---',\n    data: provider,\n    groupedDataFields: groupedDataFields,\n    type: \"provider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      maxWidth: 896\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, Offers.length ? /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'OFFERS',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }) : null, Offers.length && Offers.map((o, index) => {\n    let p = null;\n\n    if (o && o.provider_id) {\n      p = providerStore.entities[o.provider_id];\n    }\n\n    return /*#__PURE__*/React.createElement(Link, {\n      to: o && o.id ? `/home/offer/${o.id}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfoCard, {\n      className: \"mb-4\",\n      key: `${o.name}_${index}`,\n      data: o,\n      provider: p,\n      groupedDataFields: groupedDataFields,\n      actions: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }));\n  }) || null), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      maxWidth: 896\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, Pathways.length && /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'PATHWAYS',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }) || null, Pathways.length && Pathways.map((pathway, index) => {\n    if (!pathwayStore.entities[pathway.id]) {\n      getPathway(pathway.id);\n    }\n\n    let p = null;\n\n    if (pathway && pathway.provider_id) {\n      p = providerStore.entities[pathway.provider_id];\n\n      if (!p) {\n        getProvider(pathway.provider_id);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Link, {\n      to: pathway && pathway.id ? `/home/pathway/${pathway.id}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfoCard, {\n      className: \"mb-4\",\n      key: index,\n      data: pathway,\n      provider: p,\n      groupedDataFields: groupedDataFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }));\n  }) || null)));\n};\n\n__signature__(_default, \"useGlobalStore{{\\r\\n    provider: providerStore,\\r\\n    datafield,\\r\\n    pathway: pathwayStore,\\r\\n  }}\\nuseEffect{}\", () => [useGlobalStore]);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/ProviderInfoContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/student/ProviderInfoContainer.js"],"names":["React","useEffect","Link","useGlobalStore","axiosInstance","TitleDivider","InfoCard","InfoLayout","props","params","match","providerStore","provider","datafield","pathwayStore","pathway","providerId","Number","id","entities","getPathway","_pathwayId","response","get","addOne","data","getProvider","_providerId","groupedDataFields","Offers","Pathways","name","maxWidth","length","middleSpan","map","o","index","p","provider_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { groupBy, property } from 'lodash';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport { TitleDivider } from 'components/shared';\r\nimport { InfoCard, InfoLayout } from 'components/student';\r\nimport 'assets/scss/responsive-carousel-override.scss';\r\n\r\nexport default function (props) {\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n  const {\r\n    provider: providerStore,\r\n    datafield,\r\n    pathway: pathwayStore,\r\n  } = useGlobalStore();\r\n\r\n  const providerId = Number(params.id);\r\n\r\n  const provider = providerStore.entities[providerId];\r\n\r\n  const getPathway = async (_pathwayId) => {\r\n    const response = await axiosInstance.get(\r\n      `/pathways/${_pathwayId}?scope=with_details`\r\n    );\r\n    if (!pathwayStore.entities[_pathwayId]) {\r\n      pathwayStore.addOne(response.data);\r\n    }\r\n  };\r\n\r\n  const getProvider = async (_providerId) => {\r\n    const { data } = await axiosInstance.get(\r\n      `/providers/${_providerId}?scope=with_details`\r\n    );\r\n    if (!providerStore.entities[_providerId]) {\r\n      providerStore.addOne(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProvider(providerId);\r\n  }, []);\r\n\r\n  const groupedDataFields = groupBy(datafield.entities, property('type'));\r\n  let Offers = [];\r\n  if (provider && provider.Offers) {\r\n    Offers = provider.Offers;\r\n  }\r\n\r\n  let Pathways = [];\r\n  if (provider && provider.Pathways) {\r\n    Pathways = provider.Pathways;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <InfoLayout\r\n        title={provider && provider.name ? provider.name : '---'}\r\n        data={provider}\r\n        groupedDataFields={groupedDataFields}\r\n        type=\"provider\"\r\n      >\r\n        <section style={{ maxWidth: 896 }}>\r\n          {Offers.length ? (\r\n            <TitleDivider\r\n              title={'OFFERS'}\r\n              align=\"center\"\r\n              classNames={{ middleSpan: 'text-base' }}\r\n            />\r\n          ) : null}\r\n          {(Offers.length &&\r\n            Offers.map((o, index) => {\r\n              let p = null;\r\n              if (o && o.provider_id) {\r\n                p = providerStore.entities[o.provider_id];\r\n              }\r\n              return (\r\n                <Link to={o && o.id ? `/home/offer/${o.id}` : null}>\r\n                  <InfoCard\r\n                    className=\"mb-4\"\r\n                    key={`${o.name}_${index}`}\r\n                    data={o}\r\n                    provider={p}\r\n                    groupedDataFields={groupedDataFields}\r\n                    actions={[]}\r\n                  />\r\n                </Link>\r\n              );\r\n            })) ||\r\n            null}\r\n        </section>\r\n        <section style={{ maxWidth: 896 }}>\r\n          {(Pathways.length && (\r\n            <TitleDivider\r\n              title={'PATHWAYS'}\r\n              align=\"center\"\r\n              classNames={{ middleSpan: 'text-base' }}\r\n            />\r\n          )) ||\r\n            null}\r\n          {(Pathways.length &&\r\n            Pathways.map((pathway, index) => {\r\n              if (!pathwayStore.entities[pathway.id]) {\r\n                getPathway(pathway.id);\r\n              }\r\n              let p = null;\r\n              if (pathway && pathway.provider_id) {\r\n                p = providerStore.entities[pathway.provider_id];\r\n                if (!p) {\r\n                  getProvider(pathway.provider_id);\r\n                }\r\n              }\r\n              return (\r\n                <Link\r\n                  to={\r\n                    pathway && pathway.id ? `/home/pathway/${pathway.id}` : null\r\n                  }\r\n                >\r\n                  <InfoCard\r\n                    className=\"mb-4\"\r\n                    key={index}\r\n                    data={pathway}\r\n                    provider={p}\r\n                    groupedDataFields={groupedDataFields}\r\n                  />\r\n                </Link>\r\n              );\r\n            })) ||\r\n            null}\r\n        </section>\r\n      </InfoLayout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
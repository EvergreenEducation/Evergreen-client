{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport _property from \"lodash/property\";\nimport _groupBy from \"lodash/groupBy\";\nimport _last from \"lodash/last\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/student/OfferInfoContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport { TitleDivider } from 'components/shared';\nimport { InfoCard, InfoLayout } from 'components/student';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'assets/scss/responsive-carousel-override.scss';\nconst centerSlidePercentage = 90;\n\nconst _default = function _default(props) {\n  const session = props.session;\n\n  let _useParams = useParams(),\n      offerId = _useParams.id;\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        offerStore = _useGlobalStore.offer;\n\n  useEffect(() => {\n    const getOffer = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        const _yield$axiosInstance$ = yield axiosInstance.get(`/offers/${offerId}?scope=with_details`),\n              data = _yield$axiosInstance$.data;\n\n        if (!offerStore.entities[offerId]) {\n          offerStore.addOne(data);\n        }\n      });\n\n      return function getOffer() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getOffer();\n  }, []);\n  let offer = offerStore.entities[offerId];\n\n  if (!offer) {\n    return null;\n  }\n\n  const groupedDataFields = _groupBy(Object.values(datafield.entities), _property('type'));\n\n  let imageSrc = null;\n  let provider = offer.Provider;\n  let alt = '';\n\n  if (offer && offer.Files && offer.Files.length) {\n    const _last2 = _last(offer.Files),\n          file_link = _last2.file_link,\n          location = _last2.location;\n\n    imageSrc = file_link;\n    alt = location;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoLayout, {\n    data: offer,\n    src: imageSrc,\n    alt: alt,\n    session: session,\n    groupedDataFields: groupedDataFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      maxWidth: 896\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, offer && offer.RelatedOffers && offer.RelatedOffers.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'RELATED OFFERS',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"custom-carousel mb-2 cursor-grab\",\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: offer.RelatedOffers.length === 1 ? 100 : centerSlidePercentage,\n    showArrows: true,\n    showIndicators: false,\n    swipeable: true,\n    emulateTouch: true,\n    showThumbs: false,\n    showStatus: false,\n    swipeScrollTolerance: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, offer.RelatedOffers.map((o, index) => {\n    return /*#__PURE__*/React.createElement(Link, {\n      key: _uniqueId('related_card_'),\n      to: o && o.id ? `/home/offer/${o.id}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InfoCard, {\n      data: o,\n      provider: provider,\n      groupedDataFields: groupedDataFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }));\n  }))) || null), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      maxWidth: 896\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, offer && offer.PrerequisiteOffers && offer.PrerequisiteOffers.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleDivider, {\n    title: 'PREREQUISITES',\n    align: \"center\",\n    classNames: {\n      middleSpan: 'text-base'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    className: \"custom-carousel mb-4 cursor-grab\",\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: offer.PrerequisiteOffers.length === 1 ? 100 : centerSlidePercentage,\n    showArrows: true,\n    showIndicators: false,\n    swipeable: true,\n    emulateTouch: true,\n    showThumbs: false,\n    showStatus: false,\n    swipeScrollTolerance: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, offer.PrerequisiteOffers.map((o, index) => {\n    return /*#__PURE__*/React.createElement(Link, {\n      key: _uniqueId('prereq_card_'),\n      to: o && o.id ? `/home/offer/${o.id}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(InfoCard, {\n      data: o,\n      provider: provider,\n      groupedDataFields: groupedDataFields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }));\n  }))) || null)));\n};\n\n__signature__(_default, \"useParams{{ id: offerId }}\\nuseGlobalStore{{ datafield, offer: offerStore }}\\nuseEffect{}\", () => [useParams, useGlobalStore]);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(centerSlidePercentage, \"centerSlidePercentage\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/OfferInfoContainer.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/OfferInfoContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/student/OfferInfoContainer.js"],"names":["React","useEffect","Link","useParams","useGlobalStore","axiosInstance","TitleDivider","InfoCard","InfoLayout","Carousel","centerSlidePercentage","props","session","offerId","id","datafield","offerStore","offer","getOffer","get","data","entities","addOne","groupedDataFields","Object","values","imageSrc","provider","Provider","alt","Files","length","file_link","location","maxWidth","RelatedOffers","middleSpan","map","o","index","PrerequisiteOffers"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { last, groupBy, property, uniqueId } from 'lodash';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport { TitleDivider } from 'components/shared';\r\nimport { InfoCard, InfoLayout } from 'components/student';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'assets/scss/responsive-carousel-override.scss';\r\n\r\nconst centerSlidePercentage = 90;\r\n\r\nexport default function (props) {\r\n  const { session } = props;\r\n  let { id: offerId } = useParams();\r\n  const { datafield, offer: offerStore } = useGlobalStore();\r\n\r\n  useEffect(() => {\r\n    const getOffer = async () => {\r\n      const { data } = await axiosInstance.get(\r\n        `/offers/${offerId}?scope=with_details`\r\n      );\r\n      if (!offerStore.entities[offerId]) {\r\n        offerStore.addOne(data);\r\n      }\r\n    };\r\n    getOffer();\r\n  }, []);\r\n\r\n  let offer = offerStore.entities[offerId];\r\n\r\n  if (!offer) {\r\n    return null;\r\n  }\r\n\r\n  const groupedDataFields = groupBy(\r\n    Object.values(datafield.entities),\r\n    property('type')\r\n  );\r\n\r\n  let imageSrc = null;\r\n  let provider = offer.Provider;\r\n  let alt = '';\r\n\r\n  if (offer && offer.Files && offer.Files.length) {\r\n    const { file_link, location } = last(offer.Files);\r\n    imageSrc = file_link;\r\n    alt = location;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <InfoLayout\r\n        data={offer}\r\n        src={imageSrc}\r\n        alt={alt}\r\n        session={session}\r\n        groupedDataFields={groupedDataFields}\r\n      >\r\n        <section style={{ maxWidth: 896 }}>\r\n          {(offer && offer.RelatedOffers && offer.RelatedOffers.length && (\r\n            <>\r\n              <TitleDivider\r\n                title={'RELATED OFFERS'}\r\n                align=\"center\"\r\n                classNames={{ middleSpan: 'text-base' }}\r\n              />\r\n              <Carousel\r\n                className=\"custom-carousel mb-2 cursor-grab\"\r\n                centerMode\r\n                infiniteLoop\r\n                centerSlidePercentage={\r\n                  offer.RelatedOffers.length === 1 ? 100 : centerSlidePercentage\r\n                }\r\n                showArrows={true}\r\n                showIndicators={false}\r\n                swipeable={true}\r\n                emulateTouch={true}\r\n                showThumbs={false}\r\n                showStatus={false}\r\n                swipeScrollTolerance={10}\r\n              >\r\n                {offer.RelatedOffers.map((o, index) => {\r\n                  return (\r\n                    <Link\r\n                      key={uniqueId('related_card_')}\r\n                      to={o && o.id ? `/home/offer/${o.id}` : null}\r\n                    >\r\n                      <InfoCard\r\n                        data={o}\r\n                        provider={provider}\r\n                        groupedDataFields={groupedDataFields}\r\n                      />\r\n                    </Link>\r\n                  );\r\n                })}\r\n              </Carousel>\r\n            </>\r\n          )) ||\r\n            null}\r\n        </section>\r\n        <section style={{ maxWidth: 896 }}>\r\n          {(offer &&\r\n            offer.PrerequisiteOffers &&\r\n            offer.PrerequisiteOffers.length && (\r\n              <>\r\n                <TitleDivider\r\n                  title={'PREREQUISITES'}\r\n                  align=\"center\"\r\n                  classNames={{ middleSpan: 'text-base' }}\r\n                />\r\n                <Carousel\r\n                  className=\"custom-carousel mb-4 cursor-grab\"\r\n                  centerMode\r\n                  infiniteLoop\r\n                  centerSlidePercentage={\r\n                    offer.PrerequisiteOffers.length === 1\r\n                      ? 100\r\n                      : centerSlidePercentage\r\n                  }\r\n                  showArrows={true}\r\n                  showIndicators={false}\r\n                  swipeable={true}\r\n                  emulateTouch={true}\r\n                  showThumbs={false}\r\n                  showStatus={false}\r\n                  swipeScrollTolerance={10}\r\n                >\r\n                  {offer.PrerequisiteOffers.map((o, index) => {\r\n                    return (\r\n                      <Link\r\n                        key={uniqueId('prereq_card_')}\r\n                        to={o && o.id ? `/home/offer/${o.id}` : null}\r\n                      >\r\n                        <InfoCard\r\n                          data={o}\r\n                          provider={provider}\r\n                          groupedDataFields={groupedDataFields}\r\n                        />\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </Carousel>\r\n              </>\r\n            )) ||\r\n            null}\r\n        </section>\r\n      </InfoLayout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
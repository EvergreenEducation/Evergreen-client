{"ast":null,"code":"/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nmodule.exports = /*#__PURE__*/function () {\n  function EventTracker(emitter) {\n    this._events = [];\n    this._emitter = emitter;\n  }\n\n  var _proto = EventTracker.prototype;\n\n  _proto.on = function on(event, fn) {\n    this._events.push([event, fn]);\n\n    return this._emitter.on(event, fn);\n  };\n\n  _proto.remove = function remove() {\n    var _this = this;\n\n    this._events.forEach(function (_ref) {\n      var event = _ref[0],\n          fn = _ref[1];\n\n      _this._emitter.off(event, fn);\n    });\n  };\n\n  return EventTracker;\n}();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/@uppy/utils/lib/EventTracker.js"],"names":["module","exports","EventTracker","emitter","_events","_emitter","_proto","prototype","on","event","fn","push","remove","_this","forEach","_ref","off"],"mappings":"AAAA;;;;AAIAA,MAAM,CAACC,OAAP,GAAiB,aAAa,YAAY;AACxC,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgBF,OAAhB;AACD;;AAED,MAAIG,MAAM,GAAGJ,YAAY,CAACK,SAA1B;;AAEAD,EAAAA,MAAM,CAACE,EAAP,GAAY,SAASA,EAAT,CAAYC,KAAZ,EAAmBC,EAAnB,EAAuB;AACjC,SAAKN,OAAL,CAAaO,IAAb,CAAkB,CAACF,KAAD,EAAQC,EAAR,CAAlB;;AAEA,WAAO,KAAKL,QAAL,CAAcG,EAAd,CAAiBC,KAAjB,EAAwBC,EAAxB,CAAP;AACD,GAJD;;AAMAJ,EAAAA,MAAM,CAACM,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,SAAKT,OAAL,CAAaU,OAAb,CAAqB,UAAUC,IAAV,EAAgB;AACnC,UAAIN,KAAK,GAAGM,IAAI,CAAC,CAAD,CAAhB;AAAA,UACIL,EAAE,GAAGK,IAAI,CAAC,CAAD,CADb;;AAGAF,MAAAA,KAAK,CAACR,QAAN,CAAeW,GAAf,CAAmBP,KAAnB,EAA0BC,EAA1B;AACD,KALD;AAMD,GATD;;AAWA,SAAOR,YAAP;AACD,CA1B6B,EAA9B","sourcesContent":["/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nmodule.exports = /*#__PURE__*/function () {\n  function EventTracker(emitter) {\n    this._events = [];\n    this._emitter = emitter;\n  }\n\n  var _proto = EventTracker.prototype;\n\n  _proto.on = function on(event, fn) {\n    this._events.push([event, fn]);\n\n    return this._emitter.on(event, fn);\n  };\n\n  _proto.remove = function remove() {\n    var _this = this;\n\n    this._events.forEach(function (_ref) {\n      var event = _ref[0],\n          fn = _ref[1];\n\n      _this._emitter.off(event, fn);\n    });\n  };\n\n  return EventTracker;\n}();"]},"metadata":{},"sourceType":"script"}
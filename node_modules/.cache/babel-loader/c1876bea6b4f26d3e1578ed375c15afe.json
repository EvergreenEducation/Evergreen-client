{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\n\nconst axios = require('axios').default;\n\nfunction PdfUploadFunction(props) {\n  const _useState = useState({\n    files: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputFile = _useState2[0],\n        setInputFile = _useState2[1];\n\n  const onChangeUpload = e => {\n    let emailvalue = _objectSpread(_objectSpread({}, inputFile), {}, {\n      files: e.target.files[0]\n    });\n\n    setInputFile(emailvalue);\n  };\n\n  const handleButton = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield pdfFileData(inputFile).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resp) {\n          console.log(\"resp\", handleButton); // if (resp.status === 200) {\n          //   let pdfItem = resp.data.original\n          // }\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(error => {\n        console.log(error, \"erorrr\");\n      });\n    });\n\n    return function handleButton() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const pdfFileData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (inputFile) {\n      let fileData = inputFile.files;\n      var bodyFormData = new FormData();\n      yield bodyFormData.append('files', fileData);\n      let pdfData = yield axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return pdfData;\n    });\n\n    return function pdfFileData(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"h-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-center\",\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Rubic Attachment\"), /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    customRequest: () => {},\n    className: \"custom-ant-upload\",\n    name: \"files\",\n    listType: \"picture-card\",\n    showUploadList: false,\n    onChange: onChangeUpload,\n    beforeUpload: beforeUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"text-black text-6xl\",\n    icon: faCloudUploadAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(PdfUploadFunction, \"useState{[inputFile, setInputFile]({\\n    files: []\\n  })}\");\n\nconst _default = PdfUploadFunction;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n  reactHotLoader.register(PdfUploadFunction, \"PdfUploadFunction\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/PdfUploadFunction.js"],"names":["React","useEffect","useState","Layout","Row","Col","Input","Form","Upload","message","Button","FontAwesomeIcon","faCloudUploadAlt","axios","require","default","PdfUploadFunction","props","files","inputFile","setInputFile","onChangeUpload","e","emailvalue","target","handleButton","pdfFileData","then","resp","console","log","catch","error","fileData","bodyFormData","FormData","append","pdfData","post","headers","beforeUpload","imageUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\nconst axios = require('axios').default;\n\nfunction PdfUploadFunction(props) {\n  const [inputFile, setInputFile] = useState({\n    files: []\n  })\n  const onChangeUpload = (e) => {\n    let emailvalue = { ...inputFile, files: e.target.files[0] }\n    setInputFile(emailvalue)\n  }\n  const handleButton = async () => {\n    await pdfFileData(inputFile).then(async resp => {\n      console.log(\"resp\",handleButton)\n      // if (resp.status === 200) {\n      //   let pdfItem = resp.data.original\n      // }\n    }).catch(error => {\n      console.log(error,\"erorrr\")\n    })\n  }\n  const pdfFileData = async (inputFile) => {\n    let fileData = inputFile.files\n    var bodyFormData = new FormData();\n    await bodyFormData.append('files', fileData);\n    let pdfData = await axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    return pdfData\n  }\n\n  return (\n    <Layout className=\"h-auto mb-6\">\n      <Row className=\"justify-center\" gutter={8}>\n        <Col>\n          <span className=\"text-gray-700\">Rubic Attachment</span>\n          <Form.Item className=\"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\">\n            <Upload\n              customRequest={() => {}}\n              className=\"custom-ant-upload\"\n              name=\"files\"\n              listType=\"picture-card\"\n              showUploadList={false}\n              onChange={onChangeUpload}\n              beforeUpload={beforeUpload}\n            >\n                <img src={imageUrl} alt=\"upload\" />\n                <div>\n                  <FontAwesomeIcon\n                    className=\"text-black text-6xl\"\n                    icon={faCloudUploadAlt}\n                  />\n                </div>\n            </Upload>\n            <Button onClick={() => handleButton()}></Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n\nexport default PdfUploadFunction;\n"]},"metadata":{},"sourceType":"module"}
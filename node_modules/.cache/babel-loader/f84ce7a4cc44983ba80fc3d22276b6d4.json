{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nimport { Table, Tag, Button } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\n\nconst axios = require('axios').default;\n\nconst ref = React.createRef();\nconst Column = Table.Column;\n\nfunction pdfList({\n  data = [],\n  loading,\n  handleUpdateModal\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfValues = _useState2[0],\n        setPdfValues = _useState2[1];\n\n  const getPdfData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n      let user_id = token.id;\n      let user_role = token.role;\n      let pdfData = yield axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`);\n      return pdfData;\n    });\n\n    return function getPdfData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getPdfData().then(resp => {\n      console.log(\"resp\", resp);\n\n      if (resp.status == 200) {\n        setPdfValues(resp.data.data);\n      }\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }, []);\n\n  const handleLink = text => {\n    window.open(`${text.pdf_link}`, \"_blank\");\n  }; // console.log(\"pdfValues\", pdfValues)\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: pdfValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CollapsibleComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"additionalClassForHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"PDF LISTING\"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"additionalClassForContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    ref: pdfValues,\n    loading: loading,\n    pagination: {\n      pageSize: 8\n    },\n    dataSource: pdfValues,\n    bordered: true,\n    className: \"ant-table-wrapper--responsive\",\n    rowClassName: () => 'antd-row',\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\",\n    title: \"Pdf Listing\",\n    dataIndex: \"pdf_link\",\n    key: \"pdf_link\",\n    render: (text, record) => ({\n      children: text,\n      props: {\n        'pdf_link': 'pdf_link'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    className: \"antd-col\" // title=\"pdf_link\"\n    ,\n    key: \"pdf_link\",\n    render: (text, record, index) => ({\n      children: /*#__PURE__*/React.createElement(Button, {\n        onClick: () => handleLink(text),\n        title: \"PDF Listing\",\n        dataIndex: \"pdf_link\",\n        key: \"pdfValues\",\n        render: (text, record) => ({\n          children: text,\n          props: {\n            'pdf_link': 'pdf_link'\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"click here\"),\n      props: {\n        'pdf_link': 'pdf_link'\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n__signature__(pdfList, \"useState{[pdfValues, setPdfValues]([])}\\nuseEffect{}\");\n\nconst _default = pdfList;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\");\n  reactHotLoader.register(ref, \"ref\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\");\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\");\n  reactHotLoader.register(pdfList, \"pdfList\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pdfList/pdfList.js"],"names":["React","useState","useEffect","CollapsibleComponent","CollapsibleHead","CollapsibleContent","Table","Tag","Button","axios","require","default","ref","createRef","Column","pdfList","data","loading","handleUpdateModal","pdfValues","setPdfValues","getPdfData","token","JSON","parse","localStorage","getItem","user_id","id","user_role","role","pdfData","get","then","resp","console","log","status","catch","error","handleLink","text","window","open","pdf_link","pageSize","record","children","props","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  CollapsibleComponent,\n  CollapsibleHead,\n  CollapsibleContent\n} from \"react-collapsible-component\";\nimport { Table, Tag, Button } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nconst axios = require('axios').default;\nconst ref = React.createRef();\nconst { Column } = Table;\n\nfunction pdfList({ data = [], loading, handleUpdateModal }) {\n  const [pdfValues, setPdfValues] = useState([])\n\n  const getPdfData = async () => {\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\n    let user_id = token.id\n    let user_role = token.role\n    let pdfData = await axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`)\n    return pdfData\n  }\n\n  useEffect(() => {\n    getPdfData().then(resp => {\n      console.log(\"resp\", resp)\n      if (resp.status == 200) {\n        setPdfValues(resp.data.data)\n      }\n    }).catch(error => {\n      console.log(\"error\", error)\n    })\n  }, [])\n\n  const handleLink =(text) => {\n    window.open( \n      `${text.pdf_link}`, \"_blank\");\n  }\n  // console.log(\"pdfValues\", pdfValues)\n  return (\n    <>\n      <div>\n        <Button ref={pdfValues} />\n        <CollapsibleComponent>\n          <CollapsibleHead className=\"additionalClassForHead\">\n            PDF LISTING\n                    </CollapsibleHead>\n          <CollapsibleContent className=\"additionalClassForContent\">\n            <Table\n              ref={pdfValues}\n              loading={loading}\n              pagination={{ pageSize: 8 }}\n              dataSource={pdfValues}\n              bordered\n              className=\"ant-table-wrapper--responsive\"\n              rowClassName={() => 'antd-row'}\n              rowKey=\"id\"\n            >\n              <Column\n                className=\"antd-col\"\n                title=\"Pdf Listing\"\n                dataIndex=\"pdf_link\"\n                key=\"pdf_link\"\n                render={(text, record) => ({\n                  children: text,\n                  props: {\n                    'pdf_link': 'pdf_link',\n                  },\n                })}\n              />\n              <Column\n                className=\"antd-col\"\n                // title=\"pdf_link\"\n                key=\"pdf_link\"\n                render={(text, record,index) => ({\n                  children: (\n                    <Button\n                      onClick={() => handleLink(text)}\n                      title=\"PDF Listing\"\n                      dataIndex=\"pdf_link\"\n                      key=\"pdfValues\"\n                      render={(text, record) => ({\n                        children: text,\n                        props: {\n                          'pdf_link': 'pdf_link',\n                        },\n                      })}\n                     >click here</Button>\n                  ),\n                  props: {\n                    'pdf_link': 'pdf_link',\n                  },\n                })}\n              />\n            </Table>\n          </CollapsibleContent>\n        </CollapsibleComponent>\n      </div>\n    </>\n  );\n}\n\nexport default pdfList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderSimpleUpdateContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport ProviderSimpleUpdateModal from 'components/provider/ProviderSimpleUpdateModal';\nimport DataFieldStore from 'store/DataField';\nimport ProviderStore from 'store/Provider';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\nconfigure({\n  axios: axiosInstance\n});\nexport default function ProviderSimpleUpdateContainer({\n  provider_id,\n  visible,\n  onCancel,\n  getProviderInfo\n}) {\n  const datafieldStore = DataFieldStore.useContainer();\n  const providerStore = ProviderStore.useContainer();\n\n  const _useAxios = useAxios(`/providers/${provider_id}?scope=with_details`),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        data = _useAxios2[0].data;\n\n  useEffect(() => {\n    if (data) {\n      providerStore.updateOne(data);\n    }\n  }, [data, provider_id, providerStore.entities[provider_id]]);\n  return /*#__PURE__*/React.createElement(ProviderSimpleUpdateModal, {\n    datafields: Object.values(datafieldStore.entities),\n    provider: providerStore.entities[provider_id],\n    visible: visible,\n    onCancel: onCancel,\n    getProviderInfo: getProviderInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  });\n}\n\n__signature__(ProviderSimpleUpdateContainer, \"useContainer{datafieldStore}\\nuseContainer{providerStore}\\nuseAxios{[{ data }]}\\nuseEffect{}\", () => [useAxios]);\n\n;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ProviderSimpleUpdateContainer, \"ProviderSimpleUpdateContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderSimpleUpdateContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderSimpleUpdateContainer.js"],"names":["React","useEffect","ProviderSimpleUpdateModal","DataFieldStore","ProviderStore","useAxios","configure","axiosInstance","axios","ProviderSimpleUpdateContainer","provider_id","visible","onCancel","getProviderInfo","datafieldStore","useContainer","providerStore","data","updateOne","entities","Object","values"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,yBAAP,MAAsC,+CAAtC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEAD,SAAS,CAAC;AACNE,EAAAA,KAAK,EAAED;AADD,CAAD,CAAT;AAIA,eAAe,SAASE,6BAAT,CAAuC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,QAAxB;AAAiCC,EAAAA;AAAjC,CAAvC,EAA2F;AAEtG,QAAMC,cAAc,GAAGX,cAAc,CAACY,YAAf,EAAvB;AACA,QAAMC,aAAa,GAAGZ,aAAa,CAACW,YAAd,EAAtB;;AAHsG,oBAInFV,QAAQ,CAAE,cAAaK,WAAY,qBAA3B,CAJ2E;AAAA;AAAA,QAI7FO,IAJ6F,iBAI7FA,IAJ6F;;AAMtGhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,IAAJ,EAAU;AACND,MAAAA,aAAa,CAACE,SAAd,CAAwBD,IAAxB;AACH;AACJ,GAJQ,EAIN,CAACA,IAAD,EAAOP,WAAP,EAAoBM,aAAa,CAACG,QAAd,CAAuBT,WAAvB,CAApB,CAJM,CAAT;AAMA,sBACI,oBAAC,yBAAD;AACI,IAAA,UAAU,EAAEU,MAAM,CAACC,MAAP,CAAcP,cAAc,CAACK,QAA7B,CADhB;AAEI,IAAA,QAAQ,EAAEH,aAAa,CAACG,QAAd,CAAuBT,WAAvB,CAFd;AAGI,IAAA,OAAO,EAAEC,OAHb;AAII,IAAA,QAAQ,EAAEC,QAJd;AAKI,IAAA,eAAe,EAAEC,eALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH;;cArBuBJ,6B,yGAIDJ,Q;;AAiBtB;;;;;;;;;;0BArBuBI,6B","sourcesContent":["import React, { useEffect } from 'react';\nimport ProviderSimpleUpdateModal from 'components/provider/ProviderSimpleUpdateModal';\nimport DataFieldStore from 'store/DataField';\nimport ProviderStore from 'store/Provider';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\n\nconfigure({\n    axios: axiosInstance,\n})\n\nexport default function ProviderSimpleUpdateContainer({ provider_id, visible, onCancel,getProviderInfo }) {\n    \n    const datafieldStore = DataFieldStore.useContainer();\n    const providerStore = ProviderStore.useContainer();\n    const [{ data }] = useAxios(`/providers/${provider_id}?scope=with_details`);\n    \n    useEffect(() => {\n        if (data) {\n            providerStore.updateOne(data);\n        }\n    }, [data, provider_id, providerStore.entities[provider_id]]);\n\n    return (\n        <ProviderSimpleUpdateModal\n            datafields={Object.values(datafieldStore.entities)}\n            provider={providerStore.entities[provider_id]}\n            visible={visible}\n            onCancel={onCancel}\n            getProviderInfo={getProviderInfo}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Table, Tag, Button } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nimport { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\nconst Column = Table.Column;\n\nfunction ProvidersTable({\n  data = [],\n  loading,\n  handleUpdateModal\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CollapsibleHead, {\n    className: \"additionalClassForHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Head title 1\"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    className: \"additionalClassForContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\", \" \")), /*#__PURE__*/React.createElement(CollapsibleHead, {\n    isExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Head title 2\"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    isExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")), /*#__PURE__*/React.createElement(CollapsibleHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Head title 3\"), /*#__PURE__*/React.createElement(CollapsibleContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\", \" \")))));\n}\n\nconst _default = ProvidersTable;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(ProvidersTable, \"ProvidersTable\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/provider/ProvidersTable.js"],"names":["React","Table","Tag","Button","CollapsibleComponent","CollapsibleHead","CollapsibleContent","Column","ProvidersTable","data","loading","handleUpdateModal"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,QAAmC,MAAnC;AAEA,OAAO,iCAAP;AACA,SACEC,oBADF,EAEEC,eAFF,EAGEC,kBAHF,QAIO,6BAJP;MAKQC,M,GAAWN,K,CAAXM,M;;AAER,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAxB,EAAmE;AACjE,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAyJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACgB,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADhB,eAIgB,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,2BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0NAKO,GALP,CADJ,CAJhB,eAcgB,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdhB,eAiBgB,oBAAC,kBAAD;AAAoB,IAAA,UAAU,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qcADJ,CAjBhB,eA+BgB,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BhB,eAgCgB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gPAK6B,GAL7B,CADJ,CAhChB,CADA,CAzJA,CADF;AA+VD;;iBAEcH,c;AAAf;;;;;;;;;;0BApWQD,M;0BAECC,c","sourcesContent":["import React from 'react';\r\nimport { Table, Tag, Button } from 'antd';\r\nimport { find, matchesProperty, isNil } from 'lodash';\r\nimport 'assets/scss/antd-overrides.scss';\r\nimport {\r\n  CollapsibleComponent,\r\n  CollapsibleHead,\r\n  CollapsibleContent\r\n} from \"react-collapsible-component\";\r\nconst { Column } = Table;\r\n\r\nfunction ProvidersTable({ data = [], loading, handleUpdateModal }) {\r\n  return (\r\n    <>\r\n    <div>\r\n    {/* <Table\r\n      loading={loading}\r\n      pagination={{ pageSize: 8 }}\r\n      dataSource={data}\r\n      bordered\r\n      className=\"ant-table-wrapper--responsive\"\r\n      rowClassName={() => 'antd-row'}\r\n      rowKey=\"id\"\r\n    >\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"ID\"\r\n        dataIndex=\"id\"\r\n        key=\"id\"\r\n        render={(text, record) => ({\r\n          children: text,\r\n          props: {\r\n            'data-title': 'ID',\r\n          },\r\n        })}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Name\"\r\n        dataIndex=\"name\"\r\n        key=\"name\"\r\n        render={(text, record) => {\r\n          let children = 'N/A';\r\n          if (text && text.length) {\r\n            children = text;\r\n          }\r\n          return {\r\n            children,\r\n            props: {\r\n              'data-title': 'Name',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Location\"\r\n        dataIndex=\"location\"\r\n        key=\"location\"\r\n        render={(text, record) => {\r\n          let children = 'N/A';\r\n          if (text && text.length) {\r\n            children = text;\r\n          }\r\n          return {\r\n            children,\r\n            props: {\r\n              'data-title': 'Location',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Industry\"\r\n        dataIndex=\"industry\"\r\n        key=\"industry\"\r\n        render={(text, record) => {\r\n          let children = 'N/A';\r\n          if (text && text.length) {\r\n            children = text;\r\n          }\r\n          return {\r\n            children,\r\n            props: {\r\n              'data-title': 'Industry',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Topics\"\r\n        dataIndex=\"DataFields\"\r\n        key=\"DataFields\"\r\n        render={(datafields = [], record) => {\r\n          datafields = datafields.filter((d) => d.type === 'topic');\r\n          let children = 'N/A';\r\n\r\n          if (datafields.length) {\r\n            children = (\r\n              <>\r\n                {datafields.map((datafield, index) => {\r\n                  if (datafield.type !== 'topic') {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <Tag\r\n                      color={index % 2 ? 'blue' : 'orange'}\r\n                      key={index.toString()}\r\n                    >\r\n                      {datafield.name}\r\n                    </Tag>\r\n                  );\r\n                }) || null}\r\n              </>\r\n            );\r\n          }\r\n\r\n          return {\r\n            children,\r\n            props: {\r\n              'data-title': 'Topics',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"Type\"\r\n        dataIndex=\"DataFields\"\r\n        key=\"DataFields\"\r\n        render={(datafields = [], record) => {\r\n          const datafield = find(\r\n            datafields,\r\n            matchesProperty('type', 'provider')\r\n          );\r\n          let children = 'N/A';\r\n          if (!isNil(datafield)) {\r\n            children = datafield.name;\r\n          }\r\n          return {\r\n            children: children,\r\n            props: {\r\n              'data-title': 'Type',\r\n            },\r\n          };\r\n        }}\r\n      />\r\n      <Column\r\n        className=\"antd-col\"\r\n        title=\"\"\r\n        key=\"update\"\r\n        render={(text, record) => ({\r\n          children: (\r\n            <Button type=\"link\" onClick={() => handleUpdateModal(record)}>\r\n              Update\r\n            </Button>\r\n          ),\r\n          props: {\r\n            'data-title': '',\r\n          },\r\n        })}\r\n      />\r\n    </Table> */}\r\n    </div>\r\n    <div>\r\n    <CollapsibleComponent>\r\n                    <CollapsibleHead className=\"additionalClassForHead\">\r\n                        Head title 1\r\n                    </CollapsibleHead>\r\n                    <CollapsibleContent className=\"additionalClassForContent\">\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\r\n                            elit, sed do eiusmod tempor incididunt ut labore et\r\n                            dolore magna aliqua. Ut enim ad minim veniam, quis\r\n                            nostrud exercitation ullamco laboris nisi ut aliquip\r\n                            ex{\" \"}\r\n                        </p>\r\n                    </CollapsibleContent>\r\n \r\n                    <CollapsibleHead isExpanded={true}>\r\n                        Head title 2\r\n                    </CollapsibleHead>\r\n                    <CollapsibleContent isExpanded={true}>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\r\n                            elit, sed do eiusmod tempor incididunt ut labore et\r\n                            dolore magna aliqua. Ut enim ad minim veniam, quis\r\n                            nostrud exercitation ullamco laboris nisi ut aliquip\r\n                            ex ea commodo consequat. Duis aute irure dolor in\r\n                            reprehenderit in voluptate velit esse cillum dolore\r\n                            eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia\r\n                            deserunt mollit anim id est laborum.\r\n                        </p>\r\n                    </CollapsibleContent>\r\n \r\n                    <CollapsibleHead>Head title 3</CollapsibleHead>\r\n                    <CollapsibleContent>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\r\n                            elit, sed do eiusmod tempor incididunt ut labore et\r\n                            dolore magna aliqua. Ut enim ad minim veniam, quis\r\n                            nostrud exercitation ullamco laboris nisi ut aliquip\r\n                            ex ea commodo consequat.{\" \"}\r\n                        </p>\r\n                    </CollapsibleContent>\r\n                </CollapsibleComponent>\r\n\r\n    {/* <Table\r\n    loading={loading}\r\n    pagination={{ pageSize: 8 }}\r\n    dataSource={data}\r\n    bordered\r\n    className=\"ant-table-wrapper--responsive\"\r\n    rowClassName={() => 'antd-row'}\r\n    rowKey=\"id\"\r\n  >\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"ID\"\r\n      dataIndex=\"id\"\r\n      key=\"id\"\r\n      render={(text, record) => ({\r\n        children: text,\r\n        props: {\r\n          'data-title': 'ID',\r\n        },\r\n      })}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Name\"\r\n      dataIndex=\"name\"\r\n      key=\"name\"\r\n      render={(text, record) => {\r\n        let children = 'N/A';\r\n        if (text && text.length) {\r\n          children = text;\r\n        }\r\n        return {\r\n          children,\r\n          props: {\r\n            'data-title': 'Name',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Location\"\r\n      dataIndex=\"location\"\r\n      key=\"location\"\r\n      render={(text, record) => {\r\n        let children = 'N/A';\r\n        if (text && text.length) {\r\n          children = text;\r\n        }\r\n        return {\r\n          children,\r\n          props: {\r\n            'data-title': 'Location',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Industry\"\r\n      dataIndex=\"industry\"\r\n      key=\"industry\"\r\n      render={(text, record) => {\r\n        let children = 'N/A';\r\n        if (text && text.length) {\r\n          children = text;\r\n        }\r\n        return {\r\n          children,\r\n          props: {\r\n            'data-title': 'Industry',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Topics\"\r\n      dataIndex=\"DataFields\"\r\n      key=\"DataFields\"\r\n      render={(datafields = [], record) => {\r\n        datafields = datafields.filter((d) => d.type === 'topic');\r\n        let children = 'N/A';\r\n\r\n        if (datafields.length) {\r\n          children = (\r\n            <>\r\n              {datafields.map((datafield, index) => {\r\n                if (datafield.type !== 'topic') {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <Tag\r\n                    color={index % 2 ? 'blue' : 'orange'}\r\n                    key={index.toString()}\r\n                  >\r\n                    {datafield.name}\r\n                  </Tag>\r\n                );\r\n              }) || null}\r\n            </>\r\n          );\r\n        }\r\n\r\n        return {\r\n          children,\r\n          props: {\r\n            'data-title': 'Topics',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"Type\"\r\n      dataIndex=\"DataFields\"\r\n      key=\"DataFields\"\r\n      render={(datafields = [], record) => {\r\n        const datafield = find(\r\n          datafields,\r\n          matchesProperty('type', 'provider')\r\n        );\r\n        let children = 'N/A';\r\n        if (!isNil(datafield)) {\r\n          children = datafield.name;\r\n        }\r\n        return {\r\n          children: children,\r\n          props: {\r\n            'data-title': 'Type',\r\n          },\r\n        };\r\n      }}\r\n    />\r\n    <Column\r\n      className=\"antd-col\"\r\n      title=\"\"\r\n      key=\"update\"\r\n      render={(text, record) => ({\r\n        children: (\r\n          <Button type=\"link\" onClick={() => handleUpdateModal(record)}>\r\n            Update\r\n          </Button>\r\n        ),\r\n        props: {\r\n          'data-title': '',\r\n        },\r\n      })}\r\n    />\r\n  </Table> */}\r\n  </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ProvidersTable;\r\n"]},"metadata":{},"sourceType":"module"}
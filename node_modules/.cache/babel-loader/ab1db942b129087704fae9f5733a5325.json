{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _head from \"lodash/head\";\nimport _last from \"lodash/last\";\nimport _sortBy from \"lodash/sortBy\";\nimport _uniqBy from \"lodash/uniqBy\";\nimport _each from \"lodash/each\";\nimport _groupBy from \"lodash/groupBy\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/student/user-pathway/UserPathway/UserPathway.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Tag, Button, Input, Form } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faTimes, faEdit, faCheck, faCalendarAlt, faChartBar, faChartLine, faCompress, faExpand } from '@fortawesome/free-solid-svg-icons';\nimport dayjs from 'dayjs';\nimport { Carousel } from 'react-responsive-carousel';\nimport axiosInstance from 'services/AxiosInstance';\nimport useGlobalStore from 'store/GlobalStore';\nimport { LearnAndEarnIcons } from 'components/shared';\nimport { UserPathwayChart, ExpenseEarningChart } from 'components/student';\nimport './user-pathway.scss';\nimport 'assets/scss/antd-overrides.scss';\nconst TextArea = Input.TextArea;\n\nconst _default = function _default({\n  children,\n  pathway = {},\n  studentsPathways,\n  completedEnrollments,\n  enrollmentsByOfferId,\n  student\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchPathwayChartData = _useState2[0],\n        setFetchPathwayChartData = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pathwayChartData = _useState4[0],\n        setPathwayChartData = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        groupChartData = _useState6[0],\n        setGroupChartData = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentGroupChartData = _useState8[0],\n        setCurrentGroupChartData = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        toggleChartScale = _useState10[0],\n        setToggleChartScale = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        totalPay = _useState12[0],\n        setTotalPay = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        totalCredit = _useState14[0],\n        setTotalCredit = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        totalCost = _useState16[0],\n        setTotalCost = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        openNotes = _useState18[0],\n        setOpenNotes = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        switchChart = _useState20[0],\n        setSwitchChart = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        toggleFilterByGroup = _useState22[0],\n        setToggleFilterByGroup = _useState22[1];\n\n  const _useState23 = useState(),\n        _useState24 = _slicedToArray(_useState23, 2),\n        formRef = _useState24[0],\n        setFormRef = _useState24[1];\n\n  const pathwayId = pathway.id,\n        _pathway$DataFields = pathway.DataFields,\n        DataFields = _pathway$DataFields === void 0 ? [] : _pathway$DataFields,\n        Provider = pathway.Provider,\n        provider_id = pathway.provider_id,\n        name = pathway.name,\n        StudentsPathways = pathway.StudentsPathways,\n        GroupsOfOffers = pathway.GroupsOfOffers,\n        external_url = pathway.external_url;\n\n  const _useGlobalStore = useGlobalStore(),\n        pathwayStore = _useGlobalStore.pathway,\n        offerStore = _useGlobalStore.offer;\n\n  const student_id = studentsPathways.StudentPathway.student_id;\n\n  const _Form$useForm = Form.useForm(),\n        _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n        form = _Form$useForm2[0];\n\n  const topics = DataFields.filter(d => d.type === 'topic');\n  let pathwayOfferIds = [];\n\n  _each(pathway.GroupsOfOffers, offerGroup => {\n    if (offerGroup.offer_id) {\n      pathwayOfferIds.push(offerGroup.offer_id);\n    }\n  });\n\n  pathwayOfferIds = _uniqBy(pathwayOfferIds);\n  let latestDates = [];\n\n  _each(pathwayOfferIds, offerId => {\n    const enrollments = _sortBy(enrollmentsByOfferId[offerId], ['start_date']);\n\n    if (_last(enrollments)) {\n      latestDates.push(_last(enrollments).start_date);\n    }\n  });\n\n  latestDates = _sortBy(latestDates, ['start_date']);\n\n  let latestEnrollmentDate = _head(latestDates);\n\n  latestEnrollmentDate = dayjs(latestEnrollmentDate).format('MMM DD, YYYY');\n\n  const updatePathwayNotes = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (_studentId, _pathwayId) {\n      try {\n        const values = yield form.validateFields(['notes']);\n        const response = yield axiosInstance.put(`/students/${_studentId}/pathways/${pathwayId}?scope=with_details`, {\n          notes: values.notes\n        });\n        pathwayStore.updateOne(response.data);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    return function updatePathwayNotes(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let notes = null;\n\n  const _StudentsPathways = _find(StudentsPathways, function (item) {\n    return item.StudentPathway.student_id === student_id;\n  });\n\n  if (_StudentsPathways && _StudentsPathways.StudentPathway.notes) {\n    notes = _StudentsPathways.StudentPathway.notes;\n  }\n\n  const groups = _groupBy(GroupsOfOffers, 'group_name');\n\n  const groupNames = Object.keys(groups);\n  let _totalPay = 0;\n  let _totalCredit = 0;\n  let _totalCost = 0;\n  let creditEarned = 0;\n  const earningByGroup = {};\n  const costByGroup = {};\n\n  _each(Object.values(groups), function (_group, index) {\n    let totalPayOfGroup = 0;\n    let totalCostOfGroup = 0;\n\n    _each(_group, function (o) {\n      const offer = offerStore.entities[o.offer_id];\n\n      if (offer) {\n        if (completedEnrollments[offer.id]) {\n          creditEarned += offer.credit;\n        }\n\n        if (offer.pay) {\n          _totalPay += offer.pay;\n          totalPayOfGroup += offer.pay;\n        }\n\n        if (offer.credit) {\n          _totalCredit += offer.credit;\n        }\n\n        if (offer.cost) {\n          _totalCost += offer.cost;\n          totalCostOfGroup += offer.cost;\n        }\n      }\n    });\n\n    earningByGroup[groupNames[index]] = totalPayOfGroup;\n    costByGroup[groupNames[index]] = totalCostOfGroup;\n  });\n\n  const getChartData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (student_id, pathway_id, group_name) {\n      let sendingBody = {\n        student_id,\n        pathway_id\n      };\n\n      if (group_name) {\n        sendingBody = _objectSpread(_objectSpread({}, sendingBody), {}, {\n          group_name\n        });\n      }\n\n      const response = yield axiosInstance.post('/pathways/generate_userpathway_chart_data', sendingBody);\n      return response;\n    });\n\n    return function getChartData(_x3, _x4, _x5) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    if (formRef) {\n      form.setFieldsValue({\n        notes\n      });\n    }\n\n    if (_totalPay > 0) {\n      setTotalPay(_totalPay);\n    }\n\n    if (_totalCredit > 0) {\n      setTotalCredit(_totalCredit);\n    }\n\n    if (_totalCost > 0) {\n      setTotalCost(_totalCost);\n    }\n  }, [formRef, totalPay, totalCost, totalCredit, groupChartData, currentGroupChartData]);\n  useEffect(() => {\n    if (!fetchPathwayChartData) {\n      const generateChartData = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* () {\n          const _yield$getChartData = yield getChartData(student_id, pathwayId),\n                data = _yield$getChartData.data;\n\n          if (data) {\n            setPathwayChartData(data);\n          }\n\n          setFetchPathwayChartData(true);\n        });\n\n        return function generateChartData() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      generateChartData();\n    }\n  }, [fetchPathwayChartData]);\n\n  const handleCurrentItem = (current, total) => {\n    const groupName = groupNames[current - 1];\n\n    if (toggleFilterByGroup) {\n      if (!groupChartData[groupName]) {\n        const generateGroupChart = /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator(function* () {\n            const _yield$getChartData2 = yield getChartData(student_id, pathwayId, groupName),\n                  data = _yield$getChartData2.data;\n\n            setGroupChartData(_objectSpread(_objectSpread({}, groupChartData), {}, {\n              [groupName]: {\n                fetched: true,\n                data\n              }\n            }));\n\n            if (groupChartData[groupName] && groupChartData[groupName].data) {\n              setCurrentGroupChartData(groupChartData[groupName].data);\n            }\n          });\n\n          return function generateGroupChart() {\n            return _ref4.apply(this, arguments);\n          };\n        }();\n\n        generateGroupChart();\n      }\n    }\n\n    return null;\n  };\n\n  let chartWidth = 423;\n\n  if (pathwayChartData && pathwayChartData.labels) {\n    chartWidth = chartWidth + pathwayChartData.labels.length * 15;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoLayout mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"mx-auto relative bg-white pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `overflow-x-hidden ${!switchChart ? 'block' : 'hidden'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${toggleFilterByGroup ? 'chartWrapper' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `chartAreaWrapper ${!toggleChartScale ? 'chartAreaWrapper--scaleDown' : 'chartAreaWrapper--scaleUp'}`,\n    style: {\n      width: !toggleChartScale ? '100%' : `${chartWidth}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    className: `cursor-grab mb-4 ${toggleFilterByGroup ? 'block' : 'hidden'}`,\n    centerMode: true,\n    infiniteLoop: true,\n    centerSlidePercentage: 100,\n    showArrows: true,\n    showIndicators: false,\n    swipeable: toggleFilterByGroup && toggleChartScale ? false : true,\n    emulateTouch: true,\n    showStatus: true,\n    showThumbs: false,\n    swipeScrollTolerance: 1,\n    statusFormatter: handleCurrentItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, groupNames.map((group_name, index) => {\n    let data = {};\n\n    if (groupChartData[group_name] && groupChartData[group_name].data) {\n      data = groupChartData[group_name].data;\n    }\n\n    return /*#__PURE__*/React.createElement(UserPathwayChart, {\n      groups: groups,\n      groupName: group_name,\n      key: index,\n      student: student,\n      pathway: pathway,\n      data: data,\n      redraw: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    });\n  }) || 'N/A'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${toggleFilterByGroup ? '' : 'chartWrapper'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `chartAreaWrapper ${!toggleChartScale ? 'chartAreaWrapper--scaleDown' : 'chartAreaWrapper--scaleUp'}`,\n    style: {\n      width: !toggleChartScale ? '100%' : `${chartWidth}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UserPathwayChart, {\n    className: `mb-2 ${!toggleFilterByGroup ? 'block' : 'hidden'}`,\n    groups: groups,\n    student: student,\n    pathway: pathway,\n    data: pathwayChartData,\n    redraw: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(ExpenseEarningChart, {\n    className: `${!switchChart ? 'hidden' : 'block'}`,\n    pathway: pathway,\n    earningByGroup: earningByGroup,\n    costByGroup: costByGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex bg-white justify-end px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }\n  }, !switchChart && /*#__PURE__*/React.createElement(Button, {\n    className: \"flex justify-center items-center\",\n    type: toggleChartScale ? 'primary' : 'default',\n    size: \"small\",\n    onClick: () => setToggleChartScale(!toggleChartScale),\n    icon: toggleChartScale ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCompress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }), !switchChart && /*#__PURE__*/React.createElement(Button, {\n    className: \"flex justify-center items-center mx-2\",\n    type: toggleFilterByGroup ? 'primary' : 'default',\n    size: \"small\",\n    onClick: () => setToggleFilterByGroup(!toggleFilterByGroup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, \"Filter by group\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"rounded flex justify-center items-center\",\n    style: {\n      paddingRight: '1rem',\n      paddingLeft: '1rem'\n    },\n    type: \"primary\",\n    size: \"small\",\n    onClick: () => setSwitchChart(!switchChart),\n    icon: !switchChart ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChartBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChartLine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"block text-white text-center text-lg text-white w-full bottom-0 p-3 mt-2\",\n    style: {\n      background: 'rgba(0, 0, 0, 0.75)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, name || '---')), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"bg-white px-2 pb-4\",\n    style: {\n      borderBottomLeftRadius: '1rem',\n      borderBottomRightRadius: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, Provider && Provider.name ? /*#__PURE__*/React.createElement(Link, {\n    className: provider_id ? '' : 'pointer-events-none',\n    to: `/home/provider/${provider_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, Provider.name) : null), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"flex flex-row-reverse items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, Provider && Provider.location && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"block ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, Provider.location), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMapMarkerAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LearnAndEarnIcons, {\n    learnAndEarn: pathway.learn_and_earn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"flex flex-col items-right text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, \"TOPICS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row-reverse flex-wrap items-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, topics.map((t, index) => {\n    if (t.type !== 'topic') {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, {\n      className: \"mr-0 ml-1 mb-1\",\n      color: index % 2 ? 'blue' : 'orange',\n      key: index.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    }, t.name);\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-2 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, \"Credit :\", ' ', totalCredit > 0 ? `${creditEarned.toLocaleString()}` : '---', \"/\", totalCredit > 0 ? `${totalCredit.toLocaleString()}` : '---'), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    className: \"flex flex-row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, \"Pay :\", ' ', totalPay > 0 ? `$${totalPay.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  })}` : '---')), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-1 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"flex flex-row items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCalendarAlt,\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, latestEnrollmentDate || '---')), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"flex flex-row items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, external_url ? /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"rounded w-1/2 mx-auto mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: external_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 15\n    }\n  }, \"View Website\")) : null), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"block my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, \"Notes:\"), !openNotes && /*#__PURE__*/React.createElement(Button, {\n    className: \"pl-2 rounded\",\n    type: \"primary\",\n    size: \"small\",\n    shape: \"circle\",\n    onClick: () => setOpenNotes(true),\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"relative\",\n      style: {\n        left: 1\n      },\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }), openNotes && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"px-2 rounded mr-1\",\n    type: \"primary\",\n    size: \"small\",\n    shape: \"circle\",\n    onClick: () => updatePathwayNotes(student_id, pathwayId),\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"px-2 rounded\",\n    type: \"default\",\n    size: \"small\",\n    danger: true,\n    shape: \"circle\",\n    onClick: () => setOpenNotes(false),\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }))), openNotes && /*#__PURE__*/React.createElement(Form, {\n    ref: setFormRef,\n    form: form,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    className: \"rounded shadow-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 17\n    }\n  }))), !openNotes && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 26\n    }\n  }, notes))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }\n  }, children));\n};\n\n__signature__(_default, \"useState{[fetchPathwayChartData, setFetchPathwayChartData](false)}\\nuseState{[pathwayChartData, setPathwayChartData]({})}\\nuseState{[groupChartData, setGroupChartData]({})}\\nuseState{[currentGroupChartData, setCurrentGroupChartData]({})}\\nuseState{[toggleChartScale, setToggleChartScale](true)}\\nuseState{[totalPay, setTotalPay](0)}\\nuseState{[totalCredit, setTotalCredit](0)}\\nuseState{[totalCost, setTotalCost](0)}\\nuseState{[openNotes, setOpenNotes](false)}\\nuseState{[switchChart, setSwitchChart](false)}\\nuseState{[toggleFilterByGroup, setToggleFilterByGroup](false)}\\nuseState{[formRef, setFormRef]}\\nuseGlobalStore{{ pathway: pathwayStore, offer: offerStore }}\\nuseForm{[form]}\\nuseEffect{}\\nuseEffect{}\", () => [useGlobalStore]);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TextArea, \"TextArea\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/user-pathway/UserPathway/UserPathway.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/user-pathway/UserPathway/UserPathway.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/student/user-pathway/UserPathway/UserPathway.js"],"names":["React","useState","useEffect","Link","Row","Col","Tag","Button","Input","Form","FontAwesomeIcon","faMapMarkerAlt","faTimes","faEdit","faCheck","faCalendarAlt","faChartBar","faChartLine","faCompress","faExpand","dayjs","Carousel","axiosInstance","useGlobalStore","LearnAndEarnIcons","UserPathwayChart","ExpenseEarningChart","TextArea","children","pathway","studentsPathways","completedEnrollments","enrollmentsByOfferId","student","fetchPathwayChartData","setFetchPathwayChartData","pathwayChartData","setPathwayChartData","groupChartData","setGroupChartData","currentGroupChartData","setCurrentGroupChartData","toggleChartScale","setToggleChartScale","totalPay","setTotalPay","totalCredit","setTotalCredit","totalCost","setTotalCost","openNotes","setOpenNotes","switchChart","setSwitchChart","toggleFilterByGroup","setToggleFilterByGroup","formRef","setFormRef","pathwayId","id","DataFields","Provider","provider_id","name","StudentsPathways","GroupsOfOffers","external_url","pathwayStore","offerStore","offer","student_id","StudentPathway","useForm","form","topics","filter","d","type","pathwayOfferIds","offerGroup","offer_id","push","latestDates","offerId","enrollments","start_date","latestEnrollmentDate","format","updatePathwayNotes","_studentId","_pathwayId","values","validateFields","response","put","notes","updateOne","data","err","console","error","_StudentsPathways","item","groups","groupNames","Object","keys","_totalPay","_totalCredit","_totalCost","creditEarned","earningByGroup","costByGroup","_group","index","totalPayOfGroup","totalCostOfGroup","o","entities","credit","pay","cost","getChartData","pathway_id","group_name","sendingBody","post","setFieldsValue","generateChartData","handleCurrentItem","current","total","groupName","generateGroupChart","fetched","chartWidth","labels","length","width","map","paddingRight","paddingLeft","background","borderBottomLeftRadius","borderBottomRightRadius","location","learn_and_earn","t","toString","toLocaleString","undefined","maximumFractionDigits","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Tag, Button, Input, Form } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faMapMarkerAlt,\r\n  faTimes,\r\n  faEdit,\r\n  faCheck,\r\n  faCalendarAlt,\r\n  faChartBar,\r\n  faChartLine,\r\n  faCompress,\r\n  faExpand,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport dayjs from 'dayjs';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { find, groupBy, each, uniqBy, sortBy, last, head } from 'lodash';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport { LearnAndEarnIcons } from 'components/shared';\r\nimport { UserPathwayChart, ExpenseEarningChart } from 'components/student';\r\nimport './user-pathway.scss';\r\nimport 'assets/scss/antd-overrides.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function ({\r\n  children,\r\n  pathway = {},\r\n  studentsPathways,\r\n  completedEnrollments,\r\n  enrollmentsByOfferId,\r\n  student,\r\n}) {\r\n  const [fetchPathwayChartData, setFetchPathwayChartData] = useState(false);\r\n  const [pathwayChartData, setPathwayChartData] = useState({});\r\n  const [groupChartData, setGroupChartData] = useState({});\r\n  const [currentGroupChartData, setCurrentGroupChartData] = useState({});\r\n  const [toggleChartScale, setToggleChartScale] = useState(true);\r\n\r\n  const [totalPay, setTotalPay] = useState(0);\r\n  const [totalCredit, setTotalCredit] = useState(0);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n\r\n  const [openNotes, setOpenNotes] = useState(false);\r\n\r\n  const [switchChart, setSwitchChart] = useState(false);\r\n  const [toggleFilterByGroup, setToggleFilterByGroup] = useState(false);\r\n\r\n  const [formRef, setFormRef] = useState();\r\n  const {\r\n    id: pathwayId,\r\n    DataFields = [],\r\n    Provider,\r\n    provider_id,\r\n    name,\r\n    StudentsPathways,\r\n    GroupsOfOffers,\r\n    external_url,\r\n  } = pathway;\r\n\r\n  const { pathway: pathwayStore, offer: offerStore } = useGlobalStore();\r\n\r\n  const { student_id } = studentsPathways.StudentPathway;\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const topics = DataFields.filter((d) => d.type === 'topic');\r\n\r\n  let pathwayOfferIds = [];\r\n\r\n  each(pathway.GroupsOfOffers, (offerGroup) => {\r\n    if (offerGroup.offer_id) {\r\n      pathwayOfferIds.push(offerGroup.offer_id);\r\n    }\r\n  });\r\n\r\n  pathwayOfferIds = uniqBy(pathwayOfferIds);\r\n\r\n  let latestDates = [];\r\n\r\n  each(pathwayOfferIds, (offerId) => {\r\n    const enrollments = sortBy(enrollmentsByOfferId[offerId], ['start_date']);\r\n    if (last(enrollments)) {\r\n      latestDates.push(last(enrollments).start_date);\r\n    }\r\n  });\r\n\r\n  latestDates = sortBy(latestDates, ['start_date']);\r\n\r\n  let latestEnrollmentDate = head(latestDates);\r\n  latestEnrollmentDate = dayjs(latestEnrollmentDate).format('MMM DD, YYYY');\r\n\r\n  const updatePathwayNotes = async (_studentId, _pathwayId) => {\r\n    try {\r\n      const values = await form.validateFields(['notes']);\r\n      const response = await axiosInstance.put(\r\n        `/students/${_studentId}/pathways/${pathwayId}?scope=with_details`,\r\n        { notes: values.notes }\r\n      );\r\n      pathwayStore.updateOne(response.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  let notes = null;\r\n\r\n  const _StudentsPathways = find(StudentsPathways, function (item) {\r\n    return item.StudentPathway.student_id === student_id;\r\n  });\r\n\r\n  if (_StudentsPathways && _StudentsPathways.StudentPathway.notes) {\r\n    notes = _StudentsPathways.StudentPathway.notes;\r\n  }\r\n\r\n  const groups = groupBy(GroupsOfOffers, 'group_name');\r\n  const groupNames = Object.keys(groups);\r\n\r\n  let _totalPay = 0;\r\n  let _totalCredit = 0;\r\n  let _totalCost = 0;\r\n  let creditEarned = 0;\r\n\r\n  const earningByGroup = {};\r\n  const costByGroup = {};\r\n\r\n  each(Object.values(groups), function (_group, index) {\r\n    let totalPayOfGroup = 0;\r\n    let totalCostOfGroup = 0;\r\n\r\n    each(_group, function (o) {\r\n      const offer = offerStore.entities[o.offer_id];\r\n\r\n      if (offer) {\r\n        if (completedEnrollments[offer.id]) {\r\n          creditEarned += offer.credit;\r\n        }\r\n        if (offer.pay) {\r\n          _totalPay += offer.pay;\r\n          totalPayOfGroup += offer.pay;\r\n        }\r\n        if (offer.credit) {\r\n          _totalCredit += offer.credit;\r\n        }\r\n        if (offer.cost) {\r\n          _totalCost += offer.cost;\r\n          totalCostOfGroup += offer.cost;\r\n        }\r\n      }\r\n    });\r\n\r\n    earningByGroup[groupNames[index]] = totalPayOfGroup;\r\n    costByGroup[groupNames[index]] = totalCostOfGroup;\r\n  });\r\n\r\n  const getChartData = async (student_id, pathway_id, group_name) => {\r\n    let sendingBody = {\r\n      student_id,\r\n      pathway_id,\r\n    };\r\n\r\n    if (group_name) {\r\n      sendingBody = {\r\n        ...sendingBody,\r\n        group_name,\r\n      };\r\n    }\r\n\r\n    const response = await axiosInstance.post(\r\n      '/pathways/generate_userpathway_chart_data',\r\n      sendingBody\r\n    );\r\n\r\n    return response;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formRef) {\r\n      form.setFieldsValue({\r\n        notes,\r\n      });\r\n    }\r\n    if (_totalPay > 0) {\r\n      setTotalPay(_totalPay);\r\n    }\r\n    if (_totalCredit > 0) {\r\n      setTotalCredit(_totalCredit);\r\n    }\r\n    if (_totalCost > 0) {\r\n      setTotalCost(_totalCost);\r\n    }\r\n  }, [\r\n    formRef,\r\n    totalPay,\r\n    totalCost,\r\n    totalCredit,\r\n    groupChartData,\r\n    currentGroupChartData,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!fetchPathwayChartData) {\r\n      const generateChartData = async () => {\r\n        const { data } = await getChartData(student_id, pathwayId);\r\n\r\n        if (data) {\r\n          setPathwayChartData(data);\r\n        }\r\n        setFetchPathwayChartData(true);\r\n      };\r\n      generateChartData();\r\n    }\r\n  }, [fetchPathwayChartData]);\r\n\r\n  const handleCurrentItem = (current, total) => {\r\n    const groupName = groupNames[current - 1];\r\n    if (toggleFilterByGroup) {\r\n      if (!groupChartData[groupName]) {\r\n        const generateGroupChart = async () => {\r\n          const { data } = await getChartData(student_id, pathwayId, groupName);\r\n          setGroupChartData({\r\n            ...groupChartData,\r\n            [groupName]: {\r\n              fetched: true,\r\n              data,\r\n            },\r\n          });\r\n          if (groupChartData[groupName] && groupChartData[groupName].data) {\r\n            setCurrentGroupChartData(groupChartData[groupName].data);\r\n          }\r\n        };\r\n\r\n        generateGroupChart();\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  let chartWidth = 423;\r\n  if (pathwayChartData && pathwayChartData.labels) {\r\n    chartWidth = chartWidth + pathwayChartData.labels.length * 15;\r\n  }\r\n  return (\r\n    <div className=\"infoLayout mb-3\">\r\n      <header className=\"mx-auto relative bg-white pt-2\">\r\n        {\r\n          <>\r\n            <div\r\n              className={`overflow-x-hidden ${\r\n                !switchChart ? 'block' : 'hidden'\r\n              }`}\r\n            >\r\n              <div className={`${toggleFilterByGroup ? 'chartWrapper' : ''}`}>\r\n                <div\r\n                  className={`chartAreaWrapper ${\r\n                    !toggleChartScale\r\n                      ? 'chartAreaWrapper--scaleDown'\r\n                      : 'chartAreaWrapper--scaleUp'\r\n                  }`}\r\n                  style={{\r\n                    width: !toggleChartScale ? '100%' : `${chartWidth}px`,\r\n                  }}\r\n                >\r\n                  <Carousel\r\n                    className={`cursor-grab mb-4 ${\r\n                      toggleFilterByGroup ? 'block' : 'hidden'\r\n                    }`}\r\n                    centerMode\r\n                    infiniteLoop\r\n                    centerSlidePercentage={100}\r\n                    showArrows={true}\r\n                    showIndicators={false}\r\n                    swipeable={\r\n                      toggleFilterByGroup && toggleChartScale ? false : true\r\n                    }\r\n                    emulateTouch={true}\r\n                    showStatus={true}\r\n                    showThumbs={false}\r\n                    swipeScrollTolerance={1}\r\n                    statusFormatter={handleCurrentItem}\r\n                  >\r\n                    {groupNames.map((group_name, index) => {\r\n                      let data = {};\r\n                      if (\r\n                        groupChartData[group_name] &&\r\n                        groupChartData[group_name].data\r\n                      ) {\r\n                        data = groupChartData[group_name].data;\r\n                      }\r\n                      return (\r\n                        <UserPathwayChart\r\n                          groups={groups}\r\n                          groupName={group_name}\r\n                          key={index}\r\n                          student={student}\r\n                          pathway={pathway}\r\n                          data={data}\r\n                          redraw={true}\r\n                        />\r\n                      );\r\n                    }) || 'N/A'}\r\n                  </Carousel>\r\n                </div>\r\n              </div>\r\n              <div className={`${toggleFilterByGroup ? '' : 'chartWrapper'}`}>\r\n                <div\r\n                  className={`chartAreaWrapper ${\r\n                    !toggleChartScale\r\n                      ? 'chartAreaWrapper--scaleDown'\r\n                      : 'chartAreaWrapper--scaleUp'\r\n                  }`}\r\n                  style={{\r\n                    width: !toggleChartScale ? '100%' : `${chartWidth}px`,\r\n                  }}\r\n                >\r\n                  <UserPathwayChart\r\n                    className={`mb-2 ${\r\n                      !toggleFilterByGroup ? 'block' : 'hidden'\r\n                    }`}\r\n                    groups={groups}\r\n                    student={student}\r\n                    pathway={pathway}\r\n                    data={pathwayChartData}\r\n                    redraw={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ExpenseEarningChart\r\n              className={`${!switchChart ? 'hidden' : 'block'}`}\r\n              pathway={pathway}\r\n              earningByGroup={earningByGroup}\r\n              costByGroup={costByGroup}\r\n            />\r\n          </>\r\n        }\r\n        <div className=\"flex bg-white justify-end px-2\">\r\n          {!switchChart && (\r\n            <Button\r\n              className=\"flex justify-center items-center\"\r\n              type={toggleChartScale ? 'primary' : 'default'}\r\n              size=\"small\"\r\n              onClick={() => setToggleChartScale(!toggleChartScale)}\r\n              icon={\r\n                toggleChartScale ? (\r\n                  <FontAwesomeIcon icon={faCompress} />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faExpand} />\r\n                )\r\n              }\r\n            />\r\n          )}\r\n          {!switchChart && (\r\n            <Button\r\n              className=\"flex justify-center items-center mx-2\"\r\n              type={toggleFilterByGroup ? 'primary' : 'default'}\r\n              size=\"small\"\r\n              onClick={() => setToggleFilterByGroup(!toggleFilterByGroup)}\r\n            >\r\n              Filter by group\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"rounded flex justify-center items-center\"\r\n            style={{ paddingRight: '1rem', paddingLeft: '1rem' }}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => setSwitchChart(!switchChart)}\r\n            icon={\r\n              !switchChart ? (\r\n                <FontAwesomeIcon icon={faChartBar} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faChartLine} />\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n        <span\r\n          className=\"block text-white text-center text-lg text-white w-full bottom-0 p-3 mt-2\"\r\n          style={{\r\n            background: 'rgba(0, 0, 0, 0.75)',\r\n          }}\r\n        >\r\n          {name || '---'}\r\n        </span>\r\n      </header>\r\n      <section\r\n        className=\"bg-white px-2 pb-4\"\r\n        style={{\r\n          borderBottomLeftRadius: '1rem',\r\n          borderBottomRightRadius: '1rem',\r\n        }}\r\n      >\r\n        <Row className=\"py-2\">\r\n          <Col span={12}>\r\n            {Provider && Provider.name ? (\r\n              <Link\r\n                className={provider_id ? '' : 'pointer-events-none'}\r\n                to={`/home/provider/${provider_id}`}\r\n              >\r\n                {Provider.name}\r\n              </Link>\r\n            ) : null}\r\n          </Col>\r\n          <Col span={12} className=\"flex flex-row-reverse items-center\">\r\n            {Provider && Provider.location && (\r\n              <span className=\"block ml-1\">{Provider.location}</span>\r\n            )}\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"py-2\">\r\n          <Col span={12} className=\"flex items-center\">\r\n            <LearnAndEarnIcons learnAndEarn={pathway.learn_and_earn} />\r\n          </Col>\r\n          <Col span={12} className=\"flex flex-col items-right text-right\">\r\n            <span className=\"text-gray-600\">TOPICS</span>\r\n            <div className=\"flex flex-row-reverse flex-wrap items-right\">\r\n              {topics.map((t, index) => {\r\n                if (t.type !== 'topic') {\r\n                  return null;\r\n                }\r\n                return (\r\n                  <Tag\r\n                    className=\"mr-0 ml-1 mb-1\"\r\n                    color={index % 2 ? 'blue' : 'orange'}\r\n                    key={index.toString()}\r\n                  >\r\n                    {t.name}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"mt-2 mb-1\">\r\n          <Col span={8}>\r\n            {/* Cost :{' '}\r\n            {totalCost > 0\r\n              ? `$${totalCost.toLocaleString(undefined, {\r\n                  maximumFractionDigits: 2,\r\n                })}`\r\n              : '---'} */}\r\n          </Col>\r\n          <Col span={8} className=\"flex justify-center\">\r\n            Credit :{' '}\r\n            {totalCredit > 0 ? `${creditEarned.toLocaleString()}` : '---'}/\r\n            {totalCredit > 0 ? `${totalCredit.toLocaleString()}` : '---'}\r\n          </Col>\r\n          <Col span={8} className=\"flex flex-row-reverse\">\r\n            Pay :{' '}\r\n            {totalPay > 0\r\n              ? `$${totalPay.toLocaleString(undefined, {\r\n                  maximumFractionDigits: 2,\r\n                })}`\r\n              : '---'}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-1 mb-2\">\r\n          <Col span={12} className=\"flex flex-row items-center\">\r\n            <FontAwesomeIcon icon={faCalendarAlt} className=\"mr-1\" />\r\n            <span>{latestEnrollmentDate || '---'}</span>\r\n          </Col>\r\n          <Col span={12} className=\"flex flex-row items-center\"></Col>\r\n        </Row>\r\n        <Row>\r\n          {external_url ? (\r\n            <Button type=\"primary\" className=\"rounded w-1/2 mx-auto mb-2\">\r\n              <a href={external_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                View Website\r\n              </a>\r\n            </Button>\r\n          ) : null}\r\n        </Row>\r\n        <hr />\r\n        <Col span={24} className=\"mt-2\">\r\n          <Row className=\"justify-between items-center\">\r\n            <span className=\"block my-auto\">Notes:</span>\r\n            {!openNotes && (\r\n              <Button\r\n                className=\"pl-2 rounded\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                shape=\"circle\"\r\n                onClick={() => setOpenNotes(true)}\r\n                icon={\r\n                  <FontAwesomeIcon\r\n                    className=\"relative\"\r\n                    style={{ left: 1 }}\r\n                    icon={faEdit}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n            {openNotes && (\r\n              <div>\r\n                <Button\r\n                  className=\"px-2 rounded mr-1\"\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  shape=\"circle\"\r\n                  onClick={() => updatePathwayNotes(student_id, pathwayId)}\r\n                  icon={<FontAwesomeIcon icon={faCheck} />}\r\n                />\r\n                <Button\r\n                  className=\"px-2 rounded\"\r\n                  type=\"default\"\r\n                  size=\"small\"\r\n                  danger\r\n                  shape=\"circle\"\r\n                  onClick={() => setOpenNotes(false)}\r\n                  icon={<FontAwesomeIcon icon={faTimes} />}\r\n                />\r\n              </div>\r\n            )}\r\n          </Row>\r\n          {openNotes && (\r\n            <Form ref={setFormRef} form={form} className=\"mt-2\">\r\n              <Form.Item name=\"notes\">\r\n                <TextArea className=\"rounded shadow-inner\" />\r\n              </Form.Item>\r\n            </Form>\r\n          )}\r\n          {!openNotes && <p>{notes}</p>}\r\n        </Col>\r\n      </section>\r\n      <section>{children}</section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
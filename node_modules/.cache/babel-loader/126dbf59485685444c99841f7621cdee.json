{"ast":null,"code":"var trimImport = function (str) {\n  return str.replace(/['\"]/g, '');\n};\n\nexport var importMatch = function (functionString) {\n  var markMatches = functionString.match(/`imported_(.*?)_component`/g) || [];\n  return markMatches.map(function (match) {\n    return match && trimImport((match.match(/`imported_(.*?)_component`/i) || [])[1]);\n  });\n};\n/**\n * the intention of this function is to \"clear some (minification) noise from the function\n * basically from file to file different \"short\" names could be used\n * @param fn\n */\n\nexport var getFunctionSignature = function (fn) {\n  return String(fn) // quotes\n  .replace(/([\"'])/g, '`') // comments\n  .replace(/\\/\\*([^\\*]*)\\*\\//gi, '') // webpack specific\n  .replace(/Promise.resolve\\([^)]*\\)/, '-we()').replace(/\\w+.e\\([^)]*\\)/, '-we()').replace(/\\w+.\\w.bind\\(/, '-wbind(').replace(/\\w+.bind\\(/, '-wbind(') // prefix imported\n  .replace(/([A-z0-9_]+)\\(`imported_/g, '$(`imported_');\n};","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/react-imported-component/dist/es2015/utils/signatures.js"],"names":["trimImport","str","replace","importMatch","functionString","markMatches","match","map","getFunctionSignature","fn","String"],"mappings":"AAAA,IAAIA,UAAU,GAAG,UAAUC,GAAV,EAAe;AAAE,SAAOA,GAAG,CAACC,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAP;AAAkC,CAApE;;AACA,OAAO,IAAIC,WAAW,GAAG,UAAUC,cAAV,EAA0B;AAC/C,MAAIC,WAAW,GAAGD,cAAc,CAACE,KAAf,CAAqB,6BAArB,KAAuD,EAAzE;AACA,SAAOD,WAAW,CAACE,GAAZ,CAAgB,UAAUD,KAAV,EAAiB;AAAE,WAAOA,KAAK,IAAIN,UAAU,CAAC,CAACM,KAAK,CAACA,KAAN,CAAY,6BAAZ,KAA8C,EAA/C,EAAmD,CAAnD,CAAD,CAA1B;AAAoF,GAAvH,CAAP;AACH,CAHM;AAIP;;;;;;AAKA,OAAO,IAAIE,oBAAoB,GAAG,UAAUC,EAAV,EAAc;AAC5C,SAAOC,MAAM,CAACD,EAAD,CAAN,CACH;AADG,GAEFP,OAFE,CAEM,SAFN,EAEiB,GAFjB,EAGH;AAHG,GAIFA,OAJE,CAIM,oBAJN,EAI4B,EAJ5B,EAKH;AALG,GAMFA,OANE,CAMM,0BANN,EAMkC,OANlC,EAOFA,OAPE,CAOM,gBAPN,EAOwB,OAPxB,EAQFA,OARE,CAQM,eARN,EAQuB,SARvB,EASFA,OATE,CASM,YATN,EASoB,SATpB,EAUH;AAVG,GAWFA,OAXE,CAWM,2BAXN,EAWmC,cAXnC,CAAP;AAYH,CAbM","sourcesContent":["var trimImport = function (str) { return str.replace(/['\"]/g, ''); };\nexport var importMatch = function (functionString) {\n    var markMatches = functionString.match(/`imported_(.*?)_component`/g) || [];\n    return markMatches.map(function (match) { return match && trimImport((match.match(/`imported_(.*?)_component`/i) || [])[1]); });\n};\n/**\n * the intention of this function is to \"clear some (minification) noise from the function\n * basically from file to file different \"short\" names could be used\n * @param fn\n */\nexport var getFunctionSignature = function (fn) {\n    return String(fn)\n        // quotes\n        .replace(/([\"'])/g, '`')\n        // comments\n        .replace(/\\/\\*([^\\*]*)\\*\\//gi, '')\n        // webpack specific\n        .replace(/Promise.resolve\\([^)]*\\)/, '-we()')\n        .replace(/\\w+.e\\([^)]*\\)/, '-we()')\n        .replace(/\\w+.\\w.bind\\(/, '-wbind(')\n        .replace(/\\w+.bind\\(/, '-wbind(')\n        // prefix imported\n        .replace(/([A-z0-9_]+)\\(`imported_/g, '$(`imported_');\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/enrollment/EnrollmentContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Layout, Tooltip, Button, Col, Form } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\nimport useGlobalStore from 'store/GlobalStore';\nimport { EnrollmentTable } from 'components/enrollment';\nimport { LogOutTopbar, SearchHeader } from 'components/shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\nimport matchSorter from 'match-sorter';\nimport { useForm } from 'antd/lib/form/util';\nconst ProviderUpdateContainer = imported(() => importedWrapper(\"imported_-1k7m31u_component\", import('components/provider/ProviderUpdateContainer')));\nconfigure({\n  axios: axiosInstance\n});\nconst Content = Layout.Content;\nexport default function EnrollmentContainer({\n  role,\n  openProviderUpdateModal\n}) {\n  let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n  let providerId = token.id;\n  console.log(\"inyial\", role);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activateCreditAssignment = _useState4[0],\n        setActivateCreditAssignment = _useState4[1];\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const _useForm = useForm(),\n        _useForm2 = _slicedToArray(_useForm, 1),\n        form = _useForm2[0];\n\n  const _useGlobalStore = useGlobalStore(),\n        enrollmentStore = _useGlobalStore.enrollment,\n        studentStore = _useGlobalStore.student;\n\n  const query = new URLSearchParams(location.search);\n  const offer = Number(query.get('offer'));\n\n  const getEnrollmentsUrl = () => {\n    const url = '/enrollments';\n\n    if (role === 'provider') {\n      return `${url}?provider_id=${providerId}`;\n    }\n\n    return url;\n  };\n\n  const _useAxios = useAxios(getEnrollmentsUrl()),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        enrollmentBody = _useAxios2$.data,\n        loadingEnrollments = _useAxios2$.loading,\n        enrollmentError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/users?role=student'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        getStudents = _useAxios4$.data,\n        loadingStudents = _useAxios4$.loading;\n\n  if (enrollmentError) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (enrollmentBody) {\n      enrollmentStore.addMany(enrollmentBody);\n    }\n\n    if (getStudents) {\n      studentStore.addMany(getStudents);\n    }\n  }, [loadingEnrollments, loadingStudents]);\n\n  const updateEnrollmentCredit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (enrollmentId, credit) {\n      let status = 'Completed';\n\n      if (typeof credit === 'string') {\n        if (credit === 'D' || credit === 'D-' || credit === 'F') {\n          status = 'Failed';\n        }\n      }\n\n      if (typeof credit === 'number') {\n        if (credit <= 1.0) {\n          status = 'Failed';\n        }\n\n        credit = credit.toString();\n      }\n\n      return axiosInstance.put(`/enrollments/${enrollmentId}`, {\n        credit,\n        status\n      });\n    });\n\n    return function updateEnrollmentCredit(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const submit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      for (let i = 0; i < dataSource.length; i++) {\n        if (!dataSource[i]) {\n          break;\n        }\n\n        const enrollment = dataSource[i];\n        const credit = enrollment.credit;\n        const value = form.getFieldValue(`enrollment_${enrollment.id}`);\n\n        if ((value || value === 0) && credit !== value) {\n          try {\n            const _yield$updateEnrollme = yield updateEnrollmentCredit(enrollment.id, value),\n                  data = _yield$updateEnrollme.data;\n\n            enrollmentStore.updateOne(data);\n          } catch (err) {\n            console.error(err);\n          }\n        }\n      }\n    });\n\n    return function submit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const handleCreditAssignment = () => {\n    if (activateCreditAssignment) {\n      submit();\n    }\n\n    setActivateCreditAssignment(!activateCreditAssignment);\n  };\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    const results = matchSorter(data, searchString, {\n      keys\n    });\n    return results;\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  let dataSource = handleDataAfterSearch(Object.values(enrollmentStore.entities), ['Offer.name']);\n\n  if (role === 'provider') {\n    dataSource = dataSource.filter(enrollment => enrollment.provider_id === providerId);\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogOutTopbar, {\n    renderNextToLogOut: role === 'provider' && /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Update my information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"rounded mr-2 px-4\",\n      type: \"primary\",\n      size: \"small\",\n      onClick: () => openProviderUpdateModal(),\n      onMouseEnter: () => ProviderUpdateContainer.preload(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"text-white relative\",\n      style: {\n        left: 2\n      },\n      icon: faUserEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"ENROLLMENTS\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"rounded text-xs flex items-center ml-2\",\n    type: \"primary\",\n    size: \"small\",\n    onClick: () => handleCreditAssignment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, activateCreditAssignment ? 'LOCK CREDIT' : 'ASSIGN CREDIT')))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EnrollmentTable, {\n    students: Object.values(studentStore.entities) || [],\n    dataSource: dataSource,\n    activateCreditAssignment: activateCreditAssignment,\n    offer: offer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(EnrollmentContainer, \"useState{[searchString, setSearchString]('')}\\nuseState{[activateCreditAssignment, setActivateCreditAssignment](false)}\\nuseHistory{history}\\nuseLocation{location}\\nuseForm{[form]}\\nuseGlobalStore{{\\n    enrollment: enrollmentStore,\\n    student: studentStore,\\n  }}\\nuseAxios{[\\n    {\\n      data: enrollmentBody,\\n      loading: loadingEnrollments,\\n      error: enrollmentError,\\n    },\\n  ]}\\nuseAxios{[{ data: getStudents, loading: loadingStudents }]}\\nuseEffect{}\", () => [useHistory, useLocation, useForm, useGlobalStore, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ProviderUpdateContainer, \"ProviderUpdateContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/enrollment/EnrollmentContainer.js\");\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Music/evergreen-frontend/src/components/enrollment/EnrollmentContainer.js\");\n  reactHotLoader.register(EnrollmentContainer, \"EnrollmentContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/enrollment/EnrollmentContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/enrollment/EnrollmentContainer.js"],"names":["React","useEffect","useState","Card","Layout","Tooltip","Button","Col","Form","useLocation","useHistory","useAxios","configure","axiosInstance","useGlobalStore","EnrollmentTable","LogOutTopbar","SearchHeader","FontAwesomeIcon","faUserEdit","matchSorter","useForm","ProviderUpdateContainer","imported","axios","Content","EnrollmentContainer","role","openProviderUpdateModal","token","JSON","parse","localStorage","getItem","providerId","id","console","log","searchString","setSearchString","activateCreditAssignment","setActivateCreditAssignment","history","location","form","enrollmentStore","enrollment","studentStore","student","query","URLSearchParams","search","offer","Number","get","getEnrollmentsUrl","url","enrollmentBody","data","loadingEnrollments","loading","enrollmentError","error","getStudents","loadingStudents","push","addMany","updateEnrollmentCredit","enrollmentId","credit","status","toString","put","submit","i","dataSource","length","value","getFieldValue","updateOne","err","handleCreditAssignment","handleDataAfterSearch","keys","results","handleDataSearch","searchVal","Object","values","entities","filter","provider_id","preload","left"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { imported } from 'react-imported-component/macro';\nimport { Card, Layout, Tooltip, Button, Col, Form } from 'antd';\nimport { useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport useAxios, { configure } from 'axios-hooks';\nimport axiosInstance from 'services/AxiosInstance';\nimport useGlobalStore from 'store/GlobalStore';\nimport { EnrollmentTable } from 'components/enrollment';\nimport { LogOutTopbar, SearchHeader } from 'components/shared';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\nimport matchSorter from 'match-sorter';\nimport { useForm } from 'antd/lib/form/util';\n\nconst ProviderUpdateContainer = imported(() =>\n  import('components/provider/ProviderUpdateContainer')\n);\n\nconfigure({\n  axios: axiosInstance,\n});\n\nconst { Content } = Layout;\n\nexport default function EnrollmentContainer({role,openProviderUpdateModal}) {\n  let token = JSON.parse(localStorage.getItem(\"currentSession\"))\n   let providerId = token.id\n  console.log(\"inyial\",role)\n  const [searchString, setSearchString] = useState('');\n  const [activateCreditAssignment, setActivateCreditAssignment] = useState(\n    false\n  );\n  const history = useHistory();\n  const location = useLocation();\n  const [form] = useForm();\n  const {\n    enrollment: enrollmentStore,\n    student: studentStore,\n  } = useGlobalStore();\n\n  const query = new URLSearchParams(location.search);\n  const offer = Number(query.get('offer'));\n\n  const getEnrollmentsUrl = () => {\n    const url = '/enrollments';\n\n    if (role === 'provider') {\n      return `${url}?provider_id=${providerId}`;\n    }\n\n    return url;\n  };\n\n  const [\n    {\n      data: enrollmentBody,\n      loading: loadingEnrollments,\n      error: enrollmentError,\n    },\n  ] = useAxios(getEnrollmentsUrl());\n\n  const [{ data: getStudents, loading: loadingStudents }] = useAxios(\n    '/users?role=student'\n  );\n\n  if (enrollmentError) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (enrollmentBody) {\n      enrollmentStore.addMany(enrollmentBody);\n    }\n    if (getStudents) {\n      studentStore.addMany(getStudents);\n    }\n  }, [loadingEnrollments, loadingStudents]);\n\n  const updateEnrollmentCredit = async (enrollmentId, credit) => {\n    let status = 'Completed';\n    if (typeof credit === 'string') {\n      if (credit === 'D' || credit === 'D-' || credit === 'F') {\n        status = 'Failed';\n      }\n    }\n    if (typeof credit === 'number') {\n      if (credit <= 1.0) {\n        status = 'Failed';\n      }\n      credit = credit.toString();\n    }\n\n    return axiosInstance.put(`/enrollments/${enrollmentId}`, {\n      credit,\n      status,\n    });\n  };\n\n  const submit = async () => {\n    for (let i = 0; i < dataSource.length; i++) {\n      if (!dataSource[i]) {\n        break;\n      }\n      const enrollment = dataSource[i];\n      const { credit } = enrollment;\n      const value = form.getFieldValue(`enrollment_${enrollment.id}`);\n      if ((value || value === 0) && credit !== value) {\n        try {\n          const { data } = await updateEnrollmentCredit(enrollment.id, value);\n          enrollmentStore.updateOne(data);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  };\n\n  const handleCreditAssignment = () => {\n    if (activateCreditAssignment) {\n      submit();\n    }\n\n    setActivateCreditAssignment(!activateCreditAssignment);\n  };\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    const results = matchSorter(data, searchString, { keys });\n    return results;\n  };\n\n  const handleDataSearch = (searchVal) => {\n    return setSearchString(searchVal);\n  };\n\n  let dataSource = handleDataAfterSearch(\n    Object.values(enrollmentStore.entities),\n    ['Offer.name']\n  );\n\n  if (role === 'provider') {\n    dataSource = dataSource.filter(\n      (enrollment) => enrollment.provider_id === providerId\n    );\n  }\n\n  return (\n    <Layout className=\"bg-transparent\">\n      <LogOutTopbar\n        renderNextToLogOut={\n          role === 'provider' && (\n            <Tooltip title=\"Update my information\">\n              <Button\n                className=\"rounded mr-2 px-4\"\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => openProviderUpdateModal()}\n                onMouseEnter={() => ProviderUpdateContainer.preload()}\n              >\n                <FontAwesomeIcon\n                  className=\"text-white relative\"\n                  style={{ left: 2 }}\n                  icon={faUserEdit}\n                />\n              </Button>\n            </Tooltip>\n          )\n        }\n      >\n        <Col span={14}>\n          <SearchHeader title=\"ENROLLMENTS\" onSearch={handleDataSearch}>\n            <Button\n              className=\"rounded text-xs flex items-center ml-2\"\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => handleCreditAssignment()}\n            >\n              {activateCreditAssignment ? 'LOCK CREDIT' : 'ASSIGN CREDIT'}\n            </Button>\n          </SearchHeader>\n        </Col>\n      </LogOutTopbar>\n      <Content className=\"p-6\">\n        <Card className=\"shadow-md rounded-md\">\n          <Form form={form}>\n            <EnrollmentTable\n              students={Object.values(studentStore.entities) || []}\n              dataSource={dataSource}\n              activateCreditAssignment={activateCreditAssignment}\n              offer={offer}\n            />\n          </Form>\n        </Card>\n      </Content>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react';\nimport { Layout, Col } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nimport { toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport AWS from \"aws-sdk\"; // import Avatar from 'antd/lib/avatar/avatar';\n\nconst axios = require('axios').default;\n\ntoast.configure();\n\nfunction ImageUploadFunction({\n  handleImageUrl\n}) {\n  const _useState = useState({\n    files: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputFile = _useState2[0],\n        setInputFile = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loader = _useState4[0],\n        setLoader = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        imageValue = _useState6[0],\n        setImageValue = _useState6[1];\n\n  const onChangeUpload = e => {\n    setLoader(true);\n\n    let emailvalue = _objectSpread(_objectSpread({}, inputFile), {}, {\n      files: e.target.files\n    });\n\n    setInputFile(emailvalue);\n\n    if (e.target.files.length) {\n      handleButton(e.target.files);\n    }\n  };\n\n  const handleButton = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (files) {\n      // console.log(files)\n      yield pdfFileData(files).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resp) {\n          if (resp.status === 200) {\n            console.log(resp.data.data, \"responssssssssssss\");\n            downloadImage(resp.data.data[0].original);\n            let pdfItem = resp.data.data;\n            handleImageUrl(pdfItem);\n            setImageValue(pdfItem);\n            setLoader(false); // notify(\"success\")\n          }\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(error => {\n        console.log(error, \"erorrr\");\n      });\n    });\n\n    return function handleButton(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const pdfFileData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (inputFile) {\n      let fileData = inputFile; // console.log(\"filesdataaaa\", fileData)\n\n      const data = new FormData();\n\n      var _iterator = _createForOfIteratorHelper(fileData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          const File = _step.value;\n          data.append('files', File);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      let pdfData = yield axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/upload_multiple_file`, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n      return pdfData;\n    });\n\n    return function pdfFileData(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // const notify = msg => {\n  //   if (msg == \"error\") {\n  //     toast.error(\"Please select the valid format\")\n  //   } else if (msg == \"success\") {\n  //     toast.success(\"File upload successfully\")\n  //   }\n  // }\n  // console.log(\"pdfData\", imageValue)\n\n\n  const s3 = new AWS.S3({\n    accessKeyId: \"AKIAX4HNWOQXQZVD6K7S\",\n    secretAccessKey: \"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\"\n  });\n\n  const downloadImage = filename => {\n    const s3 = new AWS.S3({\n      accessKeyId: \"AKIAX4HNWOQXQZVD6K7S\",\n      secretAccessKey: \"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\"\n    });\n    s3.getObject({\n      Bucket: \"evergreentest1\",\n      Key: filename\n    }, function (error, data) {\n      if (error != null) {\n        console.log(\"errrrr\", error);\n      } else {\n        console.log(\"dataaaaaaaaaaa\", data);\n      }\n    });\n  }; // let downloadImage = url => {\n  //   let urlArray = url.split(\"/\")\n  //   let bucket = urlArray[3]\n  //   let key = `${urlArray[4]}/${urlArray[5]}`\n  //   let s3 = new AWS.S3({ params: { Bucket: bucket }})\n  //   let params = {Bucket: bucket, Key: key}\n  //   s3.getObject(params, (err, data) => {\n  //     let blob=new Blob([data.Body], {type: data.ContentType});\n  //     let link=document.createElement('a');\n  //     link.href=window.URL.createObjectURL(blob);\n  //     link.download=url;\n  //     link.click();\n  //   })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"h-auto mb-6 opportunity_choose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    type: \"file\",\n    name: \"file\",\n    onChange: e => onChangeUpload(e, \"files\"),\n    accept: \"image/*,video/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Choose\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    \"data-js-label\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 49\n    }\n  }, inputFile !== null ? inputFile.files.name : \"Choose File\"))), loader ? /*#__PURE__*/React.createElement(Loader, {\n    type: \"Circles\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image_block_opportunity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, imageValue && imageValue.length > 0 ? imageValue.map((item, i) => {\n    console.log(\"oo\", item);\n\n    if (item.name.match(/(\\.jpg|\\.jpeg|\\.bmp|\\.gif|\\.png)$/i)) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: item.original,\n        alt: item.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"video\", {\n        loop: true,\n        autoplay: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"source\", {\n        src: item.original,\n        type: \"video/mp4\",\n        accept: \"video/*\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }));\n    }\n  }) : null)));\n}\n\n__signature__(ImageUploadFunction, \"useState{[inputFile, setInputFile]({\\n    files: []\\n  })}\\nuseState{[loader, setLoader]}\\nuseState{[imageValue, setImageValue]([])}\");\n\nconst _default = ImageUploadFunction;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n  reactHotLoader.register(ImageUploadFunction, \"ImageUploadFunction\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js"],"names":["React","useState","Layout","Col","toast","Loader","AWS","axios","require","default","configure","ImageUploadFunction","handleImageUrl","files","inputFile","setInputFile","loader","setLoader","imageValue","setImageValue","onChangeUpload","e","emailvalue","target","length","handleButton","pdfFileData","then","resp","status","console","log","data","downloadImage","original","pdfItem","catch","error","fileData","FormData","File","append","pdfData","post","process","env","REACT_APP_API_URL","headers","s3","S3","accessKeyId","secretAccessKey","filename","getObject","Bucket","Key","name","map","item","i","match"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react';\nimport { Layout,  Col } from 'antd';\nimport 'assets/scss/antd-overrides.scss';\nimport {  toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner'\nimport AWS from \"aws-sdk\";\n// import Avatar from 'antd/lib/avatar/avatar';\nconst axios = require('axios').default;\ntoast.configure()\n\nfunction ImageUploadFunction({ handleImageUrl }) {\n  const [inputFile, setInputFile] = useState({\n    files: []\n  })\n  const [loader, setLoader] = useState()\n  const [imageValue, setImageValue] = useState([])\n  const onChangeUpload = (e) => {\n    setLoader(true)\n    let emailvalue = { ...inputFile, files: e.target.files }\n    setInputFile(emailvalue)\n    if (e.target.files.length) {\n      handleButton(e.target.files)\n    }\n  }\n  const handleButton = async (files) => {\n    // console.log(files)\n    await pdfFileData(files).then(async resp => {\n      if (resp.status === 200) {\n        console.log(resp.data.data, \"responssssssssssss\")\n        downloadImage(resp.data.data[0].original)\n        let pdfItem = resp.data.data\n        handleImageUrl(pdfItem)\n        setImageValue(pdfItem)\n        setLoader(false)\n        // notify(\"success\")\n      }\n    }).catch(error => {\n      console.log(error, \"erorrr\")\n    })\n  }\n  const pdfFileData = async (inputFile) => {\n    let fileData = inputFile\n    // console.log(\"filesdataaaa\", fileData)\n    const data = new FormData();\n    for (const File of fileData) {\n      data.append('files', File);\n    }\n    let pdfData = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/upload_multiple_file`, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    })\n    return pdfData\n  }\n  // const notify = msg => {\n  //   if (msg == \"error\") {\n  //     toast.error(\"Please select the valid format\")\n  //   } else if (msg == \"success\") {\n  //     toast.success(\"File upload successfully\")\n  //   }\n  // }\n  // console.log(\"pdfData\", imageValue)\n  const s3 = new AWS.S3({\n    accessKeyId:\"AKIAX4HNWOQXQZVD6K7S\",\n    secretAccessKey: \"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\",\n  });\n\n  const downloadImage = (filename) => {\n    const s3 = new AWS.S3({\n      accessKeyId:\"AKIAX4HNWOQXQZVD6K7S\",\n      secretAccessKey: \"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\",\n    });\n   s3.getObject({ Bucket: \"evergreentest1\", Key: filename }, function (\n     error,\n     data\n   ) {\n     if (error != null) {\n       console.log(\"errrrr\",error)\n     } else {\n      console.log(\"dataaaaaaaaaaa\",data)\n     }\n   });\n   };\n\n  // let downloadImage = url => {\n  //   let urlArray = url.split(\"/\")\n  //   let bucket = urlArray[3]\n  //   let key = `${urlArray[4]}/${urlArray[5]}`\n  //   let s3 = new AWS.S3({ params: { Bucket: bucket }})\n  //   let params = {Bucket: bucket, Key: key}\n  //   s3.getObject(params, (err, data) => {\n  //     let blob=new Blob([data.Body], {type: data.ContentType});\n  //     let link=document.createElement('a');\n  //     link.href=window.URL.createObjectURL(blob);\n  //     link.download=url;\n  //     link.click();\n  //   })\n  // }\n  return (\n    <Layout className=\"h-auto mb-6 opportunity_choose\">\n      <Col span={7} className=\"flex justify-end items-center\">\n        <div className='file-input'>\n          <input multiple type='file' name=\"file\" onChange={(e) => onChangeUpload(e, \"files\")} accept=\"image/*,video/*\" />\n          <span className='button'>Choose</span>\n          <span className='label' data-js-label><label>{inputFile !== null ? inputFile.files.name : \"Choose File\"}</label></span>\n        </div>\n        {loader ? <Loader\n          type=\"Circles\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        /> : null}\n        <div className=\"image_block_opportunity\">\n          {imageValue && imageValue.length > 0 ? imageValue.map((item, i) => {\n            console.log(\"oo\", item)\n            if (item.name.match(/(\\.jpg|\\.jpeg|\\.bmp|\\.gif|\\.png)$/i)) {\n              return (\n                <img src={item.original} alt={item.name} />)\n            } else {\n              return (\n                <video loop autoplay>\n                  <source src={item.original} type=\"video/mp4\" accept=\"video/*\" />\n                </video>\n                )\n            }\n          }) : null}\n        </div>\n      </Col>\n    </Layout>\n  );\n}\n\nexport default ImageUploadFunction;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from 'services/AxiosInstance';\nimport useAxios, { configure } from 'axios-hooks';\nimport { Card, Layout, Col } from 'antd';\nimport { ProvidersTable } from 'components/provider';\nimport useGlobalStore from 'store/GlobalStore';\nimport { SearchHeader, LogOutTopbar, FaPlusCircleButton } from 'components/shared';\nimport matchSorter from 'match-sorter';\n\nconst axios = require('axios').default;\n\nconst ProviderUpdateModal = imported(() => importedWrapper(\"imported_-1lcpqs5_component\", import('components/provider/ProviderUpdateModal')));\nconst FormModal = imported(() => importedWrapper(\"imported_1ac18j9_component\", import('components/shared/FormModal')));\nconst ProviderCreationContainer = imported(() => importedWrapper(\"imported_a8bb7a_component\", import('components/provider/ProviderCreationContainer')));\nconfigure({\n  axios: axiosInstance\n});\nconst Content = Layout.Content;\nexport default function ProviderContainer(props) {\n  const history = props.history,\n        role = props.role; // console.log(\"sdsds\",props)\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const _useState3 = useState({\n    providerCreation: false,\n    providerUpdate: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modalStates = _useState4[0],\n        setModalStates = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedProvider = _useState6[0],\n        setSelectedProvider = _useState6[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        provider = _useGlobalStore.provider,\n        providerStore = _useGlobalStore.provider;\n\n  const _useAxios = useAxios('/providers?scope=with_details'),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        _useAxios2$$data = _useAxios2$.data,\n        data = _useAxios2$$data === void 0 ? [] : _useAxios2$$data,\n        loading = _useAxios2$.loading,\n        providerError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/datafields?type=provider&type=topic'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        datafieldsData = _useAxios4$.data,\n        loadingDataFields = _useAxios4$.loading,\n        datafieldError = _useAxios4$.error;\n\n  const getPdfData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (provider) {\n      let user_id = provider.id;\n      let pdfData = yield axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_provider`, {\n        user_id\n      });\n      return pdfData;\n    });\n\n    return function getPdfData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const openAndPopulateUpdateModal = provider => {\n    setSelectedProvider(provider);\n    setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      providerUpdate: true\n    }));\n  };\n\n  let DeletedValue = false;\n\n  const handleDeleteModal = provider => {\n    setSelectedProvider(provider);\n    DeletedValue = true;\n\n    if (DeletedValue) {\n      providerStore.removeOne(provider);\n      getPdfData(provider).then(resp => {// console.log(resp,\"ressssssssss\")\n      }).catch(error => {\n        console.log(\"error\", error);\n      });\n    } // setModalStates({ ...modalStates, providerUpdate: true });\n\n  };\n\n  if (providerError || datafieldError) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (data) {\n      provider.addMany(data);\n    }\n\n    if (datafieldsData) {\n      datafield.addMany(datafieldsData);\n    }\n  }, [data, datafieldsData]);\n  const entities = Object.values(provider.entities);\n  const dataFieldEntities = Object.values(datafield.entities);\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, {\n      keys\n    });\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  const showData = handleDataAfterSearch(entities);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogOutTopbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"PROVIDERS\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircleButton, {\n    onMouseEnter: () => {\n      FormModal.preload();\n      ProviderCreationContainer.preload();\n    },\n    onClick: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      providerCreation: true\n    })),\n    text: \"PROVIDER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProvidersTable, {\n    data: providerError ? [] : showData,\n    loading: loading && loadingDataFields,\n    datafields: datafieldError ? [] : dataFieldEntities,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    handleDeleteModal: handleDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProviderUpdateModal, {\n    role: role,\n    datafields: datafieldError ? [] : dataFieldEntities,\n    provider: selectedProvider,\n    visible: modalStates.providerUpdate,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      providerUpdate: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    role: role,\n    title: \"New Provider\",\n    visible: modalStates.providerCreation,\n    FormComponent: ProviderCreationContainer,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      providerCreation: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))));\n}\n\n__signature__(ProviderContainer, \"useState{[searchString, setSearchString]('')}\\nuseState{[modalStates, setModalStates]({\\n    providerCreation: false,\\n    providerUpdate: false,\\n  })}\\nuseState{[selectedProvider, setSelectedProvider]({})}\\nuseGlobalStore{{ datafield, provider,provider: providerStore }}\\nuseAxios{[{ data = [], loading, error: providerError }]}\\nuseAxios{[\\n    { data: datafieldsData, loading: loadingDataFields, error: datafieldError },\\n  ]}\\nuseEffect{}\", () => [useGlobalStore, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n  reactHotLoader.register(ProviderUpdateModal, \"ProviderUpdateModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n  reactHotLoader.register(FormModal, \"FormModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n  reactHotLoader.register(ProviderCreationContainer, \"ProviderCreationContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n  reactHotLoader.register(ProviderContainer, \"ProviderContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/provider/ProviderContainer.js"],"names":["React","useEffect","useState","axiosInstance","useAxios","configure","Card","Layout","Col","ProvidersTable","useGlobalStore","SearchHeader","LogOutTopbar","FaPlusCircleButton","matchSorter","axios","require","default","ProviderUpdateModal","imported","FormModal","ProviderCreationContainer","Content","ProviderContainer","props","history","role","searchString","setSearchString","providerCreation","providerUpdate","modalStates","setModalStates","selectedProvider","setSelectedProvider","datafield","provider","providerStore","data","loading","providerError","error","datafieldsData","loadingDataFields","datafieldError","getPdfData","user_id","id","pdfData","post","process","env","REACT_APP_API_URL","openAndPopulateUpdateModal","DeletedValue","handleDeleteModal","removeOne","then","resp","catch","console","log","push","addMany","entities","Object","values","dataFieldEntities","handleDataAfterSearch","keys","handleDataSearch","searchVal","showData","preload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axiosInstance from 'services/AxiosInstance';\nimport useAxios, { configure } from 'axios-hooks';\nimport { Card, Layout, Col } from 'antd';\nimport { imported } from 'react-imported-component/macro';\nimport { ProvidersTable } from 'components/provider';\nimport useGlobalStore from 'store/GlobalStore';\nimport {\n  SearchHeader,\n  LogOutTopbar,\n  FaPlusCircleButton,\n} from 'components/shared';\nimport matchSorter from 'match-sorter';\nconst axios = require('axios').default;\n\nconst ProviderUpdateModal = imported(() =>\n  import('components/provider/ProviderUpdateModal')\n);\n\nconst FormModal = imported(() => import('components/shared/FormModal'));\nconst ProviderCreationContainer = imported(() =>\n  import('components/provider/ProviderCreationContainer')\n);\n\nconfigure({\n  axios: axiosInstance,\n});\n\nconst { Content } = Layout;\n\nexport default function ProviderContainer(props) {\n  const { history, role } = props;\n  // console.log(\"sdsds\",props)\n  const [searchString, setSearchString] = useState('');\n  const [modalStates, setModalStates] = useState({\n    providerCreation: false,\n    providerUpdate: false,\n  });\n  const [selectedProvider, setSelectedProvider] = useState({});\n  const { datafield, provider,provider: providerStore } = useGlobalStore();\n\n  const [{ data = [], loading, error: providerError }] = useAxios(\n    '/providers?scope=with_details'\n  );\n\n  const [\n    { data: datafieldsData, loading: loadingDataFields, error: datafieldError },\n  ] = useAxios('/datafields?type=provider&type=topic');\n\n  const getPdfData = async (provider) => {\n    let user_id = provider.id\n    let pdfData = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_provider`, {\n      user_id\n    })\n    return pdfData\n  }\n\n  const openAndPopulateUpdateModal = (provider) => {\n    setSelectedProvider(provider);\n    setModalStates({ ...modalStates, providerUpdate: true });\n  };\n\n  let DeletedValue =false\n  const handleDeleteModal = (provider) => {\n    setSelectedProvider(provider);\n    DeletedValue =true\n    if(DeletedValue){\n      providerStore.removeOne(provider)\n      getPdfData(provider).then(resp => {\n        // console.log(resp,\"ressssssssss\")\n      }).catch(error => {\n        console.log(\"error\",error)\n      })\n    }\n    // setModalStates({ ...modalStates, providerUpdate: true });\n  };\n\n  if (providerError || datafieldError) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (data) {\n      provider.addMany(data);\n    }\n    if (datafieldsData) {\n      datafield.addMany(datafieldsData);\n    }\n  }, [data, datafieldsData]);\n\n  const entities = Object.values(provider.entities);\n  const dataFieldEntities = Object.values(datafield.entities);\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, { keys });\n  };\n\n  const handleDataSearch = (searchVal) => {\n    return setSearchString(searchVal);\n  };\n\n  const showData = handleDataAfterSearch(entities);\n\n  return (\n    <Layout className=\"bg-transparent\">\n      <LogOutTopbar>\n        <Col span={14}>\n          <SearchHeader title=\"PROVIDERS\" onSearch={handleDataSearch}>\n            <FaPlusCircleButton\n              onMouseEnter={() => {\n                FormModal.preload();\n                ProviderCreationContainer.preload();\n              }}\n              onClick={() =>\n                setModalStates({ ...modalStates, providerCreation: true })\n              }\n              text=\"PROVIDER\"\n            />\n          </SearchHeader>\n        </Col>\n      </LogOutTopbar>\n      <Content className=\"p-6\">\n        <Card className=\"shadow-md rounded-md\">\n          <ProvidersTable\n            data={providerError ? [] : showData}\n            loading={loading && loadingDataFields}\n            datafields={datafieldError ? [] : dataFieldEntities}\n            handleUpdateModal={openAndPopulateUpdateModal}\n            handleDeleteModal={handleDeleteModal}\n          />\n          <ProviderUpdateModal\n            role={role}\n            datafields={datafieldError ? [] : dataFieldEntities}\n            provider={selectedProvider}\n            visible={modalStates.providerUpdate}\n            onCancel={() =>\n              setModalStates({ ...modalStates, providerUpdate: false })\n            }\n          />\n          <FormModal\n            role={role}\n            title=\"New Provider\"\n            visible={modalStates.providerCreation}\n            FormComponent={ProviderCreationContainer}\n            onCancel={() =>\n              setModalStates({ ...modalStates, providerCreation: false })\n            }\n          />\n        </Card>\n      </Content>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
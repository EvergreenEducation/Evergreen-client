{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { getLoadable } from '../loadable/loadable';\nimport { isBackend } from '../utils/detectBackend';\nimport { asDefault } from '../utils/utils';\nimport { ImportedComponent } from './Component';\nimport { useLoadable } from './useImported';\n/**\n * creates a \"lazy\" component, like `React.lazy`\n * @see {@link useImported} or {@link useLazy}\n * @param {Function} loaderFunction - () => import('a'), or () => require('b')\n * @param {Object} [options]\n * @param {React.Component} [options.LoadingComponent]\n * @param {React.Component} [options.ErrorComponent]\n * @param {Function} [options.onError] - error handler. Will consume the real error.\n * @param {Function} [options.async = false] - enable React 16+ suspense.\n *\n * @example\n * const PageA = imported('./pageA', { async: true });\n */\n\nfunction loader(loaderFunction, baseOptions) {\n  if (baseOptions === void 0) {\n    baseOptions = {};\n  }\n\n  var loadable = getLoadable(loaderFunction);\n  var Imported = React.forwardRef(function ImportedComponentHOC(_a, ref) {\n    var _b = _a.importedProps,\n        importedProps = _b === void 0 ? {} : _b,\n        props = tslib_1.__rest(_a, [\"importedProps\"]);\n\n    var options = tslib_1.__assign({}, baseOptions, importedProps);\n\n    return React.createElement(ImportedComponent, {\n      loadable: loadable,\n      LoadingComponent: options.LoadingComponent,\n      ErrorComponent: options.ErrorComponent,\n      onError: options.onError,\n      render: options.render,\n      async: options.async,\n      forwardProps: props || {},\n      forwardRef: ref\n    });\n  });\n\n  Imported.preload = function () {\n    loadable.load().catch(function () {\n      return {};\n    });\n    return loadable.resolution;\n  };\n\n  Imported.done = loadable.resolution;\n  return Imported;\n}\n\nvar ReactLazy = React.lazy;\n/**\n * React.lazy \"as-is\" replacement\n */\n\nexport function lazy(importer) {\n  if (isBackend) {\n    return loader(importer);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // lazy is not hot-reloadable\n    if (module.hot) {\n      return loader(importer, {\n        async: true\n      });\n    }\n  }\n\n  var topLoadable = getLoadable(importer);\n  return function ImportedLazy(props) {\n    var loadable = useLoadable(topLoadable).loadable;\n    var Lazy = useMemo(function () {\n      return ReactLazy(function () {\n        return loadable.tryResolveSync(asDefault);\n      });\n    }, []);\n    return React.createElement(Lazy, tslib_1.__assign({}, props));\n  };\n}\nexport default loader;","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/react-imported-component/dist/es2015/ui/HOC.js"],"names":["tslib_1","React","useMemo","getLoadable","isBackend","asDefault","ImportedComponent","useLoadable","loader","loaderFunction","baseOptions","loadable","Imported","forwardRef","ImportedComponentHOC","_a","ref","_b","importedProps","props","__rest","options","__assign","createElement","LoadingComponent","ErrorComponent","onError","render","async","forwardProps","preload","load","catch","resolution","done","ReactLazy","lazy","importer","process","env","NODE_ENV","module","hot","topLoadable","ImportedLazy","Lazy","tryResolveSync"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { getLoadable } from '../loadable/loadable';\nimport { isBackend } from '../utils/detectBackend';\nimport { asDefault } from '../utils/utils';\nimport { ImportedComponent } from './Component';\nimport { useLoadable } from './useImported';\n/**\n * creates a \"lazy\" component, like `React.lazy`\n * @see {@link useImported} or {@link useLazy}\n * @param {Function} loaderFunction - () => import('a'), or () => require('b')\n * @param {Object} [options]\n * @param {React.Component} [options.LoadingComponent]\n * @param {React.Component} [options.ErrorComponent]\n * @param {Function} [options.onError] - error handler. Will consume the real error.\n * @param {Function} [options.async = false] - enable React 16+ suspense.\n *\n * @example\n * const PageA = imported('./pageA', { async: true });\n */\nfunction loader(loaderFunction, baseOptions) {\n    if (baseOptions === void 0) { baseOptions = {}; }\n    var loadable = getLoadable(loaderFunction);\n    var Imported = React.forwardRef(function ImportedComponentHOC(_a, ref) {\n        var _b = _a.importedProps, importedProps = _b === void 0 ? {} : _b, props = tslib_1.__rest(_a, [\"importedProps\"]);\n        var options = tslib_1.__assign({}, baseOptions, importedProps);\n        return (React.createElement(ImportedComponent, { loadable: loadable, LoadingComponent: options.LoadingComponent, ErrorComponent: options.ErrorComponent, onError: options.onError, render: options.render, async: options.async, forwardProps: props || {}, forwardRef: ref }));\n    });\n    Imported.preload = function () {\n        loadable.load().catch(function () { return ({}); });\n        return loadable.resolution;\n    };\n    Imported.done = loadable.resolution;\n    return Imported;\n}\nvar ReactLazy = React.lazy;\n/**\n * React.lazy \"as-is\" replacement\n */\nexport function lazy(importer) {\n    if (isBackend) {\n        return loader(importer);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        // lazy is not hot-reloadable\n        if (module.hot) {\n            return loader(importer, { async: true });\n        }\n    }\n    var topLoadable = getLoadable(importer);\n    return function ImportedLazy(props) {\n        var loadable = useLoadable(topLoadable).loadable;\n        var Lazy = useMemo(function () { return ReactLazy(function () { return loadable.tryResolveSync(asDefault); }); }, []);\n        return React.createElement(Lazy, tslib_1.__assign({}, props));\n    };\n}\nexport default loader;\n"]},"metadata":{},"sourceType":"module"}
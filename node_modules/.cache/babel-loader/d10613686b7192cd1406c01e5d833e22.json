{"ast":null,"code":"import _uniqBy from \"lodash/uniqBy\";\nimport _head from \"lodash/head\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport _indexOf from \"lodash/indexOf\";\nimport _map from \"lodash/map\";\nimport _each from \"lodash/each\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { Component } from 'react';\nimport { Form, Select, Table, Popconfirm, InputNumber, Row } from 'antd';\nimport OfferStore from 'store/Offer';\nimport MiniOfferTable from './MiniOfferTable';\nconst Option = Select.Option;\nconst Column = Table.Column;\n\nfunction getOfferOptions({\n  existingOffers = []\n}) {\n  const Store = OfferStore.useContainer();\n  const _Store$entities = Store.entities,\n        entities = _Store$entities === void 0 ? {} : _Store$entities;\n  const offers = Object.values(entities);\n  const allOptions = offers.map((offer, index) => /*#__PURE__*/React.createElement(Option, {\n    value: offer.id,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, offer.name));\n\n  const defaultValues = _uniqBy(_map(existingOffers, o => {\n    return o.offer_id;\n  }));\n\n  return {\n    allOptions,\n    defaultValues\n  };\n}\n\n__signature__(getOfferOptions, \"useContainer{Store}\");\n\nclass GroupTable extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.groupsData === nextProps.groupsData) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const _this$props = this.props,\n          groupsData = _this$props.groupsData,\n          offerStore = _this$props.offerStore,\n          onChangeAlsoValidate = _this$props.onChangeAlsoValidate,\n          pathway = _this$props.pathway,\n          updateGroupHandler = _this$props.updateGroupHandler,\n          removeGroupHandler = _this$props.removeGroupHandler;\n    return /*#__PURE__*/React.createElement(Table, {\n      dataSource: groupsData,\n      size: \"small\",\n      bordered: true,\n      className: \"ant-table-wrapper--responsive w-full mt-1\",\n      rowClassName: () => 'antd-row',\n      rowKey: record => {\n        return _uniqueId(record.group_name + '__');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      className: \"antd-col\",\n      title: \"Offer Group\",\n      dataIndex: \"group_name\",\n      key: \"group_name\",\n      render: (groupNameText, {\n        offers\n      }, index) => {\n        const firstOffer = _head(offers);\n\n        let totalCost = 0;\n        let totalPay = 0;\n        let totalCredit = 0;\n\n        _each(offers, function (o) {\n          if (offerStore && offerStore.entities[o.offer_id]) {\n            const offer = offerStore.entities[o.offer_id];\n            totalCost += offer.cost;\n            totalPay += offer.pay;\n            totalCredit += offer.credit;\n          }\n        });\n\n        let defaultVal = null;\n\n        if (pathway && pathway.group_sort_order) {\n          defaultVal = _indexOf(pathway.group_sort_order, groupNameText);\n        }\n\n        return {\n          children: /*#__PURE__*/React.createElement(\"ul\", {\n            key: groupNameText + '__' + index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            className: \"font-bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }\n          }, groupNameText), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }\n          }, \"Cost: $\", totalCost), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }\n          }, \"Pay: $\", totalPay), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }\n          }, \"Credit: \", totalCredit), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Row, {\n            className: \"items-center\",\n            style: {\n              width: 130\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }\n          }, \"Year:\", /*#__PURE__*/React.createElement(Form.Item, {\n            className: \"my-auto mx-1\",\n            name: groupNameText,\n            initialValue: defaultVal ? defaultVal + 1 : index + 1,\n            rules: [{\n              required: true,\n              message: 'Please set a year'\n            }],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(InputNumber, {\n            size: \"small\",\n            min: 1,\n            max: groupsData.length,\n            onChange: onChangeAlsoValidate,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }\n          })))), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Row, {\n            className: \"items-center flex-no-wrap\",\n            style: {\n              width: 130\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }\n          }, \"Semester:\", /*#__PURE__*/React.createElement(Form.Item, {\n            className: \"my-auto mx-1 w-full\",\n            name: `${groupNameText}_semester`,\n            initialValue: firstOffer && firstOffer.semester ? firstOffer.semester : 'fall',\n            rules: [{\n              required: true,\n              message: 'Please set a semester'\n            }],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Select, {\n            size: \"small\",\n            style: {\n              minWidth: '6rem'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Option, {\n            value: \"fall\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 27\n            }\n          }, \"Fall\"), /*#__PURE__*/React.createElement(Option, {\n            value: \"winter\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 27\n            }\n          }, \"Winter\"), /*#__PURE__*/React.createElement(Option, {\n            value: \"spring\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 27\n            }\n          }, \"Spring\"), /*#__PURE__*/React.createElement(Option, {\n            value: \"summer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 27\n            }\n          }, \"Summer\")))))),\n          props: {\n            'data-title': 'Offer Group'\n          }\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      className: \"antd-col\",\n      title: \"Offers\",\n      dataIndex: \"inputName\",\n      key: \"inputName\",\n      render: (inputName, record) => {\n        const _getOfferOptions = getOfferOptions({\n          existingOffers: record.offers\n        }),\n              defaultValues = _getOfferOptions.defaultValues,\n              allOptions = _getOfferOptions.allOptions;\n\n        return {\n          children: /*#__PURE__*/React.createElement(Form.Item, {\n            className: \"my-auto\",\n            name: inputName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(MiniOfferTable, {\n            groupOfOffers: record.offers,\n            offerStore: offerStore,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(Select, {\n            className: \"mt-1 w-full rounded custom-select-rounded-tr-none\",\n            showSearch: true,\n            mode: \"multiple\",\n            defaultValue: defaultValues,\n            onChange: value => updateGroupHandler(record.group_name, value),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }\n          }, allOptions)),\n          props: {\n            'data-title': 'Offers'\n          }\n        };\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      className: \"antd-col\",\n      title: \"Action\",\n      render: (text, record, index) => ({\n        children: /*#__PURE__*/React.createElement(Popconfirm, {\n          key: index,\n          className: \"text-red-500 cursor-pointer\",\n          title: \"Are you sure you want to delete this group?\",\n          onConfirm: () => removeGroupHandler(record.group_name),\n          okText: \"Yes\",\n          cancelText: \"No\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }\n        }, \"Remove\"),\n        props: {\n          'data-title': 'Action'\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nfunction GroupTableHOC(props) {\n  const offerStore = OfferStore.useContainer();\n  return /*#__PURE__*/React.createElement(GroupTable, Object.assign({}, props, {\n    offerStore: offerStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 10\n    }\n  }));\n}\n\n__signature__(GroupTableHOC, \"useContainer{offerStore}\");\n\nconst _default = GroupTableHOC;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Option, \"Option\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n  reactHotLoader.register(Column, \"Column\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n  reactHotLoader.register(getOfferOptions, \"getOfferOptions\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n  reactHotLoader.register(GroupTable, \"GroupTable\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n  reactHotLoader.register(GroupTableHOC, \"GroupTableHOC\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/pathway/OfferGroupTable/GroupTable.js"],"names":["React","Component","Form","Select","Table","Popconfirm","InputNumber","Row","OfferStore","MiniOfferTable","Option","Column","getOfferOptions","existingOffers","Store","useContainer","entities","offers","Object","values","allOptions","map","offer","index","id","name","defaultValues","o","offer_id","GroupTable","shouldComponentUpdate","nextProps","nextState","props","groupsData","render","offerStore","onChangeAlsoValidate","pathway","updateGroupHandler","removeGroupHandler","record","group_name","groupNameText","firstOffer","totalCost","totalPay","totalCredit","cost","pay","credit","defaultVal","group_sort_order","children","width","required","message","length","semester","minWidth","inputName","value","text","GroupTableHOC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Select, Table, Popconfirm, InputNumber, Row } from 'antd';\r\nimport { each, map, indexOf, uniqueId, head, uniqBy } from 'lodash';\r\nimport OfferStore from 'store/Offer';\r\nimport MiniOfferTable from './MiniOfferTable';\r\n\r\nconst { Option } = Select;\r\nconst { Column } = Table;\r\n\r\nfunction getOfferOptions({ existingOffers = [] }) {\r\n  const Store = OfferStore.useContainer();\r\n  const { entities = {} } = Store;\r\n  const offers = Object.values(entities);\r\n\r\n  const allOptions = offers.map((offer, index) => (\r\n    <Option value={offer.id} key={index}>\r\n      {offer.name}\r\n    </Option>\r\n  ));\r\n\r\n  const defaultValues = uniqBy(\r\n    map(existingOffers, (o) => {\r\n      return o.offer_id;\r\n    })\r\n  );\r\n\r\n  return { allOptions, defaultValues };\r\n}\r\n\r\nclass GroupTable extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.groupsData === nextProps.groupsData) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    const {\r\n      groupsData,\r\n      offerStore,\r\n      onChangeAlsoValidate,\r\n      pathway,\r\n      updateGroupHandler,\r\n      removeGroupHandler,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        dataSource={groupsData}\r\n        size=\"small\"\r\n        bordered\r\n        className=\"ant-table-wrapper--responsive w-full mt-1\"\r\n        rowClassName={() => 'antd-row'}\r\n        rowKey={(record) => {\r\n          return uniqueId(record.group_name + '__');\r\n        }}\r\n      >\r\n        <Column\r\n          className=\"antd-col\"\r\n          title=\"Offer Group\"\r\n          dataIndex=\"group_name\"\r\n          key=\"group_name\"\r\n          render={(groupNameText, { offers }, index) => {\r\n            const firstOffer = head(offers);\r\n            let totalCost = 0;\r\n            let totalPay = 0;\r\n            let totalCredit = 0;\r\n            each(offers, function (o) {\r\n              if (offerStore && offerStore.entities[o.offer_id]) {\r\n                const offer = offerStore.entities[o.offer_id];\r\n                totalCost += offer.cost;\r\n                totalPay += offer.pay;\r\n                totalCredit += offer.credit;\r\n              }\r\n            });\r\n            let defaultVal = null;\r\n            if (pathway && pathway.group_sort_order) {\r\n              defaultVal = indexOf(pathway.group_sort_order, groupNameText);\r\n            }\r\n            return {\r\n              children: (\r\n                <ul key={groupNameText + '__' + index}>\r\n                  <li className=\"font-bold\">{groupNameText}</li>\r\n                  <li>Cost: ${totalCost}</li>\r\n                  <li>Pay: ${totalPay}</li>\r\n                  <li>Credit: {totalCredit}</li>\r\n                  <li>\r\n                    <Row className=\"items-center\" style={{ width: 130 }}>\r\n                      Year:\r\n                      <Form.Item\r\n                        className=\"my-auto mx-1\"\r\n                        name={groupNameText}\r\n                        initialValue={defaultVal ? defaultVal + 1 : index + 1}\r\n                        rules={[\r\n                          { required: true, message: 'Please set a year' },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          size=\"small\"\r\n                          min={1}\r\n                          max={groupsData.length}\r\n                          onChange={onChangeAlsoValidate}\r\n                        />\r\n                      </Form.Item>\r\n                    </Row>\r\n                  </li>\r\n                  <li>\r\n                    <Row\r\n                      className=\"items-center flex-no-wrap\"\r\n                      style={{ width: 130 }}\r\n                    >\r\n                      Semester:\r\n                      <Form.Item\r\n                        className=\"my-auto mx-1 w-full\"\r\n                        name={`${groupNameText}_semester`}\r\n                        initialValue={\r\n                          firstOffer && firstOffer.semester\r\n                            ? firstOffer.semester\r\n                            : 'fall'\r\n                        }\r\n                        rules={[\r\n                          { required: true, message: 'Please set a semester' },\r\n                        ]}\r\n                      >\r\n                        <Select size=\"small\" style={{ minWidth: '6rem' }}>\r\n                          <Option value=\"fall\">Fall</Option>\r\n                          <Option value=\"winter\">Winter</Option>\r\n                          <Option value=\"spring\">Spring</Option>\r\n                          <Option value=\"summer\">Summer</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Row>\r\n                  </li>\r\n                </ul>\r\n              ),\r\n              props: {\r\n                'data-title': 'Offer Group',\r\n              },\r\n            };\r\n          }}\r\n        />\r\n        <Column\r\n          className=\"antd-col\"\r\n          title=\"Offers\"\r\n          dataIndex=\"inputName\"\r\n          key=\"inputName\"\r\n          render={(inputName, record) => {\r\n            const { defaultValues, allOptions } = getOfferOptions({\r\n              existingOffers: record.offers,\r\n            });\r\n            return {\r\n              children: (\r\n                <Form.Item className=\"my-auto\" name={inputName}>\r\n                  <MiniOfferTable\r\n                    groupOfOffers={record.offers}\r\n                    offerStore={offerStore}\r\n                  />\r\n                  <Select\r\n                    className=\"mt-1 w-full rounded custom-select-rounded-tr-none\"\r\n                    showSearch\r\n                    mode=\"multiple\"\r\n                    defaultValue={defaultValues}\r\n                    onChange={(value) =>\r\n                      updateGroupHandler(record.group_name, value)\r\n                    }\r\n                  >\r\n                    {allOptions}\r\n                  </Select>\r\n                </Form.Item>\r\n              ),\r\n              props: {\r\n                'data-title': 'Offers',\r\n              },\r\n            };\r\n          }}\r\n        />\r\n        <Column\r\n          className=\"antd-col\"\r\n          title=\"Action\"\r\n          render={(text, record, index) => ({\r\n            children: (\r\n              <Popconfirm\r\n                key={index}\r\n                className=\"text-red-500 cursor-pointer\"\r\n                title=\"Are you sure you want to delete this group?\"\r\n                onConfirm={() => removeGroupHandler(record.group_name)}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n              >\r\n                Remove\r\n              </Popconfirm>\r\n            ),\r\n            props: {\r\n              'data-title': 'Action',\r\n            },\r\n          })}\r\n        />\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nfunction GroupTableHOC(props) {\r\n  const offerStore = OfferStore.useContainer();\r\n  return <GroupTable {...props} offerStore={offerStore} />;\r\n}\r\n\r\nexport default GroupTableHOC;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _groupBy from \"lodash/groupBy\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/SearchResultContainer/SearchResultContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button, Empty } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faMapMarkerAlt, faTree } from '@fortawesome/free-solid-svg-icons';\nimport { LearnAndEarnIcons, TitleDivider } from 'components/shared';\n\nconst _default = function _default({\n  data = [],\n  toggeables,\n  setToggeables\n}) {\n  const group = _groupBy(data, 'entity_type');\n\n  const groupKeys = Object.keys(group);\n\n  if (!data.length) {\n    return /*#__PURE__*/React.createElement(Empty, {\n      className: \"m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, data && data.length && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }\n  }, \"Results\"), data && data.length && groupKeys.map(key => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, group[key] && group[key].length && /*#__PURE__*/React.createElement(TitleDivider, {\n      title: key + 's',\n      align: \"center\",\n      classNames: {\n        middleSpan: 'text-base capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }) || null, group[key] && group[key].length && group[key].map((d, index) => {\n      const link = `/home/${key}/${d.id}`;\n      let location = null;\n      let providerName = null;\n\n      if (d.location) {\n        location = d.location;\n      }\n\n      if ((key === 'offer' || key === 'pathway') && d.provider_id && d.Provider.location) {\n        location = d.Provider.location;\n      }\n\n      if (d.provider_id && d.Provider) {\n        providerName = d.Provider.name;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-white mb-2 rounded\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 22,\n        className: \"bordered border border-solid p-1 rounded-l\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm font-bold block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }, d.name || null), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-xs block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }\n      }, providerName ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"text-sm mr-1\",\n        icon: faTree,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }\n      }) : null, providerName || null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-xs mr-2 flex items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"text-sm mr-1\",\n        icon: faMapMarkerAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 31\n        }\n      }), location || '---'), /*#__PURE__*/React.createElement(LearnAndEarnIcons, {\n        learnAndEarn: d.learn_and_earn,\n        style: {\n          width: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"block h-full w-full\",\n        to: link,\n        onClick: () => {\n          setToggeables(_objectSpread(_objectSpread({}, toggeables), {}, {\n            search: false\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"h-full w-full shadow-none rounded-l-none\",\n        type: \"primary\",\n        style: {\n          borderTopRightRadius: '0.2rem',\n          borderBottomRightRadius: '0.2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"text-white text-base relative\",\n        style: {\n          right: 3\n        },\n        icon: faChevronRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 31\n        }\n      }))))));\n    }) || null);\n  }) || null);\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/SearchResultContainer/SearchResultContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/SearchResultContainer/SearchResultContainer.js"],"names":["React","Link","Row","Col","Button","Empty","FontAwesomeIcon","faChevronRight","faMapMarkerAlt","faTree","LearnAndEarnIcons","TitleDivider","data","toggeables","setToggeables","group","groupKeys","Object","keys","length","map","key","middleSpan","d","index","link","id","location","providerName","provider_id","Provider","name","learn_and_earn","width","search","borderTopRightRadius","borderBottomRightRadius","right"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,MAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,MAHF,QAIO,mCAJP;AAMA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,mBAAhD;;iBAEe,kBAAU;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAV,EAAoD;AACjE,QAAMC,KAAK,GAAG,SAAQH,IAAR,EAAc,aAAd,CAAd;;AACA,QAAMI,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAlB;;AAEA,MAAI,CAACH,IAAI,CAACO,MAAV,EAAkB;AAChB,wBAAO,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,IAAIA,IAAI,CAACO,MAAb,iBAAuB;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD1B,EAEIP,IAAI,IACJA,IAAI,CAACO,MADL,IAEAH,SAAS,CAACI,GAAV,CAAeC,GAAD,IAAS;AACrB,wBACE;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIN,KAAK,CAACM,GAAD,CAAL,IAAcN,KAAK,CAACM,GAAD,CAAL,CAAWF,MAAzB,iBACA,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEE,GAAG,GAAG,GADf;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,UAAU,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,IAOC,IARJ,EASIP,KAAK,CAACM,GAAD,CAAL,IACAN,KAAK,CAACM,GAAD,CAAL,CAAWF,MADX,IAEAJ,KAAK,CAACM,GAAD,CAAL,CAAWD,GAAX,CAAe,CAACG,CAAD,EAAIC,KAAJ,KAAc;AAC3B,YAAMC,IAAI,GAAI,SAAQJ,GAAI,IAAGE,CAAC,CAACG,EAAG,EAAlC;AAEA,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAIL,CAAC,CAACI,QAAN,EAAgB;AACdA,QAAAA,QAAQ,GAAGJ,CAAC,CAACI,QAAb;AACD;;AAED,UACE,CAACN,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,SAA5B,KACAE,CAAC,CAACM,WADF,IAEAN,CAAC,CAACO,QAAF,CAAWH,QAHb,EAIE;AACAA,QAAAA,QAAQ,GAAGJ,CAAC,CAACO,QAAF,CAAWH,QAAtB;AACD;;AAED,UAAIJ,CAAC,CAACM,WAAF,IAAiBN,CAAC,CAACO,QAAvB,EAAiC;AAC/BF,QAAAA,YAAY,GAAGL,CAAC,CAACO,QAAF,CAAWC,IAA1B;AACD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,GAAG,EAAEP,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,CAAC,CAACQ,IAAF,IAAU,IADb,CAJF,eAOE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,YAAY,gBACX,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEnB,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,GAKT,IANN,EAOGmB,YAAY,IAAI,IAPnB,CAPF,eAgBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEpB,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKGmB,QAAQ,IAAI,KALf,CADF,eAQE,oBAAC,iBAAD;AACE,QAAA,YAAY,EAAEJ,CAAC,CAACS,cADlB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAhBF,CADF,eA+BE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,EAAE,EAAER,IAFN;AAGE,QAAA,OAAO,EAAE,MAAM;AACbX,UAAAA,aAAa,iCACRD,UADQ;AAEXqB,YAAAA,MAAM,EAAE;AAFG,aAAb;AAID,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,0CADZ;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,oBAAoB,EAAE,QADjB;AAELC,UAAAA,uBAAuB,EAAE;AAFpB,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,+BADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,IAAI,EAAE9B,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAVF,CADF,CA/BF,CADF,CADF;AA+DD,KArFD,CAFD,IAwFC,IAjGJ,CADF;AAqGD,GAtGD,CAFD,IAyGC,IA3GJ,CADF;AA+GD,C;;AAvHD","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Empty } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronRight,\r\n  faMapMarkerAlt,\r\n  faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { groupBy } from 'lodash';\r\nimport { LearnAndEarnIcons, TitleDivider } from 'components/shared';\r\n\r\nexport default function ({ data = [], toggeables, setToggeables }) {\r\n  const group = groupBy(data, 'entity_type');\r\n  const groupKeys = Object.keys(group);\r\n\r\n  if (!data.length) {\r\n    return <Empty className=\"m-auto\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      {data && data.length && <p className=\"text-2xl text-center\">Results</p>}\r\n      {(data &&\r\n        data.length &&\r\n        groupKeys.map((key) => {\r\n          return (\r\n            <div key={key}>\r\n              {(group[key] && group[key].length && (\r\n                <TitleDivider\r\n                  title={key + 's'}\r\n                  align=\"center\"\r\n                  classNames={{ middleSpan: 'text-base capitalize' }}\r\n                />\r\n              )) ||\r\n                null}\r\n              {(group[key] &&\r\n                group[key].length &&\r\n                group[key].map((d, index) => {\r\n                  const link = `/home/${key}/${d.id}`;\r\n\r\n                  let location = null;\r\n                  let providerName = null;\r\n\r\n                  if (d.location) {\r\n                    location = d.location;\r\n                  }\r\n\r\n                  if (\r\n                    (key === 'offer' || key === 'pathway') &&\r\n                    d.provider_id &&\r\n                    d.Provider.location\r\n                  ) {\r\n                    location = d.Provider.location;\r\n                  }\r\n\r\n                  if (d.provider_id && d.Provider) {\r\n                    providerName = d.Provider.name;\r\n                  }\r\n\r\n                  return (\r\n                    <div className=\"bg-white mb-2 rounded\" key={index}>\r\n                      <Row>\r\n                        <Col\r\n                          span={22}\r\n                          className=\"bordered border border-solid p-1 rounded-l\"\r\n                        >\r\n                          <span className=\"text-sm font-bold block\">\r\n                            {d.name || null}\r\n                          </span>\r\n                          <span className=\"text-xs block\">\r\n                            {providerName ? (\r\n                              <FontAwesomeIcon\r\n                                className=\"text-sm mr-1\"\r\n                                icon={faTree}\r\n                              />\r\n                            ) : null}\r\n                            {providerName || null}\r\n                          </span>\r\n                          <div className=\"flex\">\r\n                            <span className=\"text-xs mr-2 flex items-center\">\r\n                              <FontAwesomeIcon\r\n                                className=\"text-sm mr-1\"\r\n                                icon={faMapMarkerAlt}\r\n                              />\r\n                              {location || '---'}\r\n                            </span>\r\n                            <LearnAndEarnIcons\r\n                              learnAndEarn={d.learn_and_earn}\r\n                              style={{ width: 50 }}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                        <Col span={2}>\r\n                          <Link\r\n                            className=\"block h-full w-full\"\r\n                            to={link}\r\n                            onClick={() => {\r\n                              setToggeables({\r\n                                ...toggeables,\r\n                                search: false,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              className=\"h-full w-full shadow-none rounded-l-none\"\r\n                              type=\"primary\"\r\n                              style={{\r\n                                borderTopRightRadius: '0.2rem',\r\n                                borderBottomRightRadius: '0.2rem',\r\n                              }}\r\n                            >\r\n                              <FontAwesomeIcon\r\n                                className=\"text-white text-base relative\"\r\n                                style={{ right: 3 }}\r\n                                icon={faChevronRight}\r\n                              />\r\n                            </Button>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                })) ||\r\n                null}\r\n            </div>\r\n          );\r\n        })) ||\r\n        null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { settings } from '../configuration/config';\nimport { isBackend } from '../utils/detectBackend';\nimport { getFunctionSignature, importMatch } from '../utils/signatures';\nimport { assingLoadableMark } from './marks';\nimport { getPreloaders } from './preloaders';\nvar pending = [];\nvar LOADABLE_WEAK_SIGNATURE = new WeakMap();\nvar LOADABLE_SIGNATURE = new Map();\n\nvar addPending = function (promise) {\n  return pending.push(promise);\n};\n\nvar removeFromPending = function (promise) {\n  return pending = pending.filter(function (a) {\n    return a !== promise;\n  });\n};\n\nvar toKnownSignature = function (signature, marks) {\n  return !settings.checkSignatures && marks.join('|') || signature;\n};\n\nexport function toLoadable(firstImportFunction, autoImport) {\n  if (autoImport === void 0) {\n    autoImport = true;\n  }\n\n  var importFunction = firstImportFunction;\n\n  var loadImportedComponent = function () {\n    return Promise.all([importFunction()].concat(getPreloaders())).then(function (_a) {\n      var result = _a[0];\n      return result;\n    });\n  };\n\n  var functionSignature = getFunctionSignature(importFunction);\n  var mark = importMatch(functionSignature);\n  var resolveResolution;\n  var resolution = new Promise(function (r) {\n    resolveResolution = r;\n  });\n  var loadable = {\n    // importFunction,\n    mark: mark,\n    resolution: resolution,\n    done: false,\n    ok: false,\n    error: null,\n    payload: undefined,\n    promise: undefined,\n    isLoading: function () {\n      return !!this.promise && !this.done;\n    },\n    reset: function () {\n      this.done = false;\n      this.ok = true;\n      this.payload = undefined;\n      this.promise = undefined;\n    },\n    replaceImportFunction: function (newImportFunction) {\n      importFunction = newImportFunction;\n    },\n\n    get importer() {\n      return importFunction;\n    },\n\n    then: function (cb, err) {\n      if (this.promise) {\n        return this.promise.then(cb, err);\n      }\n\n      if (err) {\n        err();\n      }\n\n      return Promise.reject();\n    },\n    loadIfNeeded: function () {\n      if (this.error) {\n        this.reset();\n      }\n\n      if (!this.promise) {\n        this.load();\n      }\n\n      return this.promise;\n    },\n    tryResolveSync: function (then) {\n      if (this.done) {\n        var result_1 = then(this.payload);\n        return {\n          then: function (cb) {\n            // synchronous thenable - https://github.com/facebook/react/pull/14626\n            cb(result_1);\n            return Promise.resolve(result_1);\n          }\n        };\n      }\n\n      return this.loadIfNeeded().then(then);\n    },\n    reload: function () {\n      if (this.promise) {\n        this.promise = undefined;\n        return this.load();\n      }\n\n      return Promise.resolve();\n    },\n    _probeChanges: function () {\n      var _this = this;\n\n      return Promise.resolve(importFunction()).then(function (payload) {\n        return payload !== _this.payload;\n      }).catch(function (err) {\n        throw err;\n      });\n    },\n    load: function () {\n      var _this = this;\n\n      if (!this.promise) {\n        var promise_1 = this.promise = loadImportedComponent().then(function (payload) {\n          _this.done = true;\n          _this.ok = true;\n          _this.payload = payload;\n          _this.error = null;\n          removeFromPending(promise_1);\n          resolveResolution(payload);\n          return payload;\n        }, function (err) {\n          _this.done = true;\n          _this.ok = false;\n          _this.error = err;\n          removeFromPending(promise_1);\n          throw err;\n        });\n        addPending(promise_1);\n      }\n\n      return this.promise;\n    }\n  };\n\n  if (mark && mark.length) {\n    LOADABLE_SIGNATURE.set(toKnownSignature(functionSignature, mark), loadable);\n    assingLoadableMark(mark, loadable);\n  } else {\n    if (process.env.NODE_ENV !== 'development') {\n      // tslint:disable-next-line:no-console\n      console.warn('react-imported-component: no mark found at', importFunction, 'Please check babel plugin or macro setup, as well as imported-component\\'s limitations. See https://github.com/theKashey/react-imported-component/issues/147');\n    }\n  } // trigger preload on the server side\n\n\n  if (isBackend && autoImport) {\n    loadable.load();\n  }\n\n  return loadable;\n}\nvar readyFlag = false;\nexport var isItReady = function () {\n  return readyFlag;\n};\n/**\n * waits for all necessary imports to be fulfilled\n */\n\nexport var done = function () {\n  if (pending.length) {\n    readyFlag = false;\n    return Promise.all(pending).then(function (a) {\n      return a[1];\n    }).then(done);\n  }\n\n  readyFlag = true;\n  return Promise.resolve();\n};\n/**\n * try to perform a render and loads all chunks required for it\n * @deprecated\n */\n\nexport var dryRender = function (renderFunction) {\n  renderFunction();\n  return Promise.resolve().then(done);\n};\nexport var markMeta = [];\n\nvar assignMetaData = function (mark, loadable, chunkName, fileName) {\n  markMeta.push({\n    mark: mark,\n    loadable: loadable,\n    chunkName: chunkName,\n    fileName: fileName\n  });\n};\n/**\n * to be used __only via CLI tools__\n */\n\n\nexport var assignImportedComponents = function (set) {\n  var countBefore = LOADABLE_SIGNATURE.size;\n  set.forEach(function (imported) {\n    var allowAutoLoad = !(imported[3] || !settings.fileFilter(imported[2]));\n    var loadable = toLoadable(imported[0], allowAutoLoad);\n    assignMetaData(loadable.mark, loadable, imported[1], imported[2]);\n  });\n\n  if (countBefore === LOADABLE_SIGNATURE.size) {\n    // tslint:disable-next-line:no-console\n    console.error('react-imported-component: no import-marks found, please check babel plugin');\n  }\n\n  done();\n  return set;\n};\nexport function executeLoadable(importFunction) {\n  if ('resolution' in importFunction) {\n    return importFunction.reload();\n  } else {\n    return importFunction();\n  }\n}\n/**\n * wraps an `import` function with a tracker\n * @internal\n * @param importFunction\n */\n\nexport function getLoadable(importFunction) {\n  if ('resolution' in importFunction) {\n    return importFunction;\n  }\n\n  if (LOADABLE_WEAK_SIGNATURE.has(importFunction)) {\n    return LOADABLE_WEAK_SIGNATURE.get(importFunction);\n  }\n\n  var rawSignature = getFunctionSignature(importFunction);\n  var ownMark = importMatch(String(rawSignature)); // read cache signature\n\n  var functionSignature = toKnownSignature(rawSignature, ownMark);\n\n  if (LOADABLE_SIGNATURE.has(functionSignature)) {\n    // tslint:disable-next-line:no-shadowed-variable\n    var loadable_1 = LOADABLE_SIGNATURE.get(functionSignature);\n    loadable_1.replaceImportFunction(importFunction);\n    return loadable_1;\n  }\n\n  if (ownMark) {\n    LOADABLE_SIGNATURE.forEach(function (_a) {\n      var mark = _a.mark,\n          importer = _a.importer;\n\n      if (mark[0] === ownMark[1] && mark.join('|') === ownMark.join('|')) {\n        // tslint:disable-next-line:no-console\n        console.warn('Another loadable found for an existing mark. That\\'s possible, but signatures must match (https://github.com/theKashey/react-imported-component/issues/192):', {\n          mark: mark,\n          knownImporter: importer,\n          currentImported: importFunction,\n          currentSignature: String(importFunction),\n          knownSignature: String(importer)\n        });\n      }\n    });\n  }\n\n  var loadable = toLoadable(importFunction);\n  LOADABLE_WEAK_SIGNATURE.set(importFunction, loadable);\n  return loadable;\n}\n/**\n * Reset `importers` weak cache\n * @internal\n */\n\nexport var clearImportedCache = function () {\n  return LOADABLE_SIGNATURE.clear();\n};","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/react-imported-component/dist/es2015/loadable/loadable.js"],"names":["settings","isBackend","getFunctionSignature","importMatch","assingLoadableMark","getPreloaders","pending","LOADABLE_WEAK_SIGNATURE","WeakMap","LOADABLE_SIGNATURE","Map","addPending","promise","push","removeFromPending","filter","a","toKnownSignature","signature","marks","checkSignatures","join","toLoadable","firstImportFunction","autoImport","importFunction","loadImportedComponent","Promise","all","concat","then","_a","result","functionSignature","mark","resolveResolution","resolution","r","loadable","done","ok","error","payload","undefined","isLoading","reset","replaceImportFunction","newImportFunction","importer","cb","err","reject","loadIfNeeded","load","tryResolveSync","result_1","resolve","reload","_probeChanges","_this","catch","promise_1","length","set","process","env","NODE_ENV","console","warn","readyFlag","isItReady","dryRender","renderFunction","markMeta","assignMetaData","chunkName","fileName","assignImportedComponents","countBefore","size","forEach","imported","allowAutoLoad","fileFilter","executeLoadable","getLoadable","has","get","rawSignature","ownMark","String","loadable_1","knownImporter","currentImported","currentSignature","knownSignature","clearImportedCache","clear"],"mappings":"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","sourcesContent":["import { settings } from '../configuration/config';\nimport { isBackend } from '../utils/detectBackend';\nimport { getFunctionSignature, importMatch } from '../utils/signatures';\nimport { assingLoadableMark } from './marks';\nimport { getPreloaders } from './preloaders';\nvar pending = [];\nvar LOADABLE_WEAK_SIGNATURE = new WeakMap();\nvar LOADABLE_SIGNATURE = new Map();\nvar addPending = function (promise) { return pending.push(promise); };\nvar removeFromPending = function (promise) { return (pending = pending.filter(function (a) { return a !== promise; })); };\nvar toKnownSignature = function (signature, marks) {\n    return (!settings.checkSignatures && marks.join('|')) || signature;\n};\nexport function toLoadable(firstImportFunction, autoImport) {\n    if (autoImport === void 0) { autoImport = true; }\n    var importFunction = firstImportFunction;\n    var loadImportedComponent = function () {\n        return Promise.all([importFunction()].concat(getPreloaders())).then(function (_a) {\n            var result = _a[0];\n            return result;\n        });\n    };\n    var functionSignature = getFunctionSignature(importFunction);\n    var mark = importMatch(functionSignature);\n    var resolveResolution;\n    var resolution = new Promise(function (r) {\n        resolveResolution = r;\n    });\n    var loadable = {\n        // importFunction,\n        mark: mark,\n        resolution: resolution,\n        done: false,\n        ok: false,\n        error: null,\n        payload: undefined,\n        promise: undefined,\n        isLoading: function () {\n            return !!this.promise && !this.done;\n        },\n        reset: function () {\n            this.done = false;\n            this.ok = true;\n            this.payload = undefined;\n            this.promise = undefined;\n        },\n        replaceImportFunction: function (newImportFunction) {\n            importFunction = newImportFunction;\n        },\n        get importer() {\n            return importFunction;\n        },\n        then: function (cb, err) {\n            if (this.promise) {\n                return this.promise.then(cb, err);\n            }\n            if (err) {\n                err();\n            }\n            return Promise.reject();\n        },\n        loadIfNeeded: function () {\n            if (this.error) {\n                this.reset();\n            }\n            if (!this.promise) {\n                this.load();\n            }\n            return this.promise;\n        },\n        tryResolveSync: function (then) {\n            if (this.done) {\n                var result_1 = then(this.payload);\n                return {\n                    then: function (cb) {\n                        // synchronous thenable - https://github.com/facebook/react/pull/14626\n                        cb(result_1);\n                        return Promise.resolve(result_1);\n                    },\n                };\n            }\n            return this.loadIfNeeded().then(then);\n        },\n        reload: function () {\n            if (this.promise) {\n                this.promise = undefined;\n                return this.load();\n            }\n            return Promise.resolve();\n        },\n        _probeChanges: function () {\n            var _this = this;\n            return Promise.resolve(importFunction())\n                .then(function (payload) { return payload !== _this.payload; })\n                .catch(function (err) {\n                throw err;\n            });\n        },\n        load: function () {\n            var _this = this;\n            if (!this.promise) {\n                var promise_1 = (this.promise = loadImportedComponent().then(function (payload) {\n                    _this.done = true;\n                    _this.ok = true;\n                    _this.payload = payload;\n                    _this.error = null;\n                    removeFromPending(promise_1);\n                    resolveResolution(payload);\n                    return payload;\n                }, function (err) {\n                    _this.done = true;\n                    _this.ok = false;\n                    _this.error = err;\n                    removeFromPending(promise_1);\n                    throw err;\n                }));\n                addPending(promise_1);\n            }\n            return this.promise;\n        },\n    };\n    if (mark && mark.length) {\n        LOADABLE_SIGNATURE.set(toKnownSignature(functionSignature, mark), loadable);\n        assingLoadableMark(mark, loadable);\n    }\n    else {\n        if (process.env.NODE_ENV !== 'development') {\n            // tslint:disable-next-line:no-console\n            console.warn('react-imported-component: no mark found at', importFunction, 'Please check babel plugin or macro setup, as well as imported-component\\'s limitations. See https://github.com/theKashey/react-imported-component/issues/147');\n        }\n    }\n    // trigger preload on the server side\n    if (isBackend && autoImport) {\n        loadable.load();\n    }\n    return loadable;\n}\nvar readyFlag = false;\nexport var isItReady = function () { return readyFlag; };\n/**\n * waits for all necessary imports to be fulfilled\n */\nexport var done = function () {\n    if (pending.length) {\n        readyFlag = false;\n        return Promise.all(pending)\n            .then(function (a) { return a[1]; })\n            .then(done);\n    }\n    readyFlag = true;\n    return Promise.resolve();\n};\n/**\n * try to perform a render and loads all chunks required for it\n * @deprecated\n */\nexport var dryRender = function (renderFunction) {\n    renderFunction();\n    return Promise.resolve().then(done);\n};\nexport var markMeta = [];\nvar assignMetaData = function (mark, loadable, chunkName, fileName) {\n    markMeta.push({ mark: mark, loadable: loadable, chunkName: chunkName, fileName: fileName });\n};\n/**\n * to be used __only via CLI tools__\n */\nexport var assignImportedComponents = function (set) {\n    var countBefore = LOADABLE_SIGNATURE.size;\n    set.forEach(function (imported) {\n        var allowAutoLoad = !(imported[3] || !settings.fileFilter(imported[2]));\n        var loadable = toLoadable(imported[0], allowAutoLoad);\n        assignMetaData(loadable.mark, loadable, imported[1], imported[2]);\n    });\n    if (countBefore === LOADABLE_SIGNATURE.size) {\n        // tslint:disable-next-line:no-console\n        console.error('react-imported-component: no import-marks found, please check babel plugin');\n    }\n    done();\n    return set;\n};\nexport function executeLoadable(importFunction) {\n    if ('resolution' in importFunction) {\n        return importFunction.reload();\n    }\n    else {\n        return importFunction();\n    }\n}\n/**\n * wraps an `import` function with a tracker\n * @internal\n * @param importFunction\n */\nexport function getLoadable(importFunction) {\n    if ('resolution' in importFunction) {\n        return importFunction;\n    }\n    if (LOADABLE_WEAK_SIGNATURE.has(importFunction)) {\n        return LOADABLE_WEAK_SIGNATURE.get(importFunction);\n    }\n    var rawSignature = getFunctionSignature(importFunction);\n    var ownMark = importMatch(String(rawSignature));\n    // read cache signature\n    var functionSignature = toKnownSignature(rawSignature, ownMark);\n    if (LOADABLE_SIGNATURE.has(functionSignature)) {\n        // tslint:disable-next-line:no-shadowed-variable\n        var loadable_1 = LOADABLE_SIGNATURE.get(functionSignature);\n        loadable_1.replaceImportFunction(importFunction);\n        return loadable_1;\n    }\n    if (ownMark) {\n        LOADABLE_SIGNATURE.forEach(function (_a) {\n            var mark = _a.mark, importer = _a.importer;\n            if (mark[0] === ownMark[1] && mark.join('|') === ownMark.join('|')) {\n                // tslint:disable-next-line:no-console\n                console.warn('Another loadable found for an existing mark. That\\'s possible, but signatures must match (https://github.com/theKashey/react-imported-component/issues/192):', {\n                    mark: mark,\n                    knownImporter: importer,\n                    currentImported: importFunction,\n                    currentSignature: String(importFunction),\n                    knownSignature: String(importer),\n                });\n            }\n        });\n    }\n    var loadable = toLoadable(importFunction);\n    LOADABLE_WEAK_SIGNATURE.set(importFunction, loadable);\n    return loadable;\n}\n/**\n * Reset `importers` weak cache\n * @internal\n */\nexport var clearImportedCache = function () { return LOADABLE_SIGNATURE.clear(); };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _find from \"lodash/find\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/student/InfoCard/InfoCard.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport dayjs from 'dayjs';\nimport { LearnAndEarnIcons, UnitTag } from 'components/shared';\nimport './info-card.scss';\nconst statuses = {\n  Inactivate: {\n    substituteStatus: 'Applied',\n    statusColor: 'rgb(148,0,211)',\n    textColor: 'text-white'\n  },\n  Activated: {\n    substituteStatus: 'Enrolled',\n    statusColor: 'rgb(0,0,255)',\n    textColor: 'text-white'\n  },\n  Enrolled: {\n    substituteStatus: 'Enrolled',\n    statusColor: 'rgb(0,0,255)',\n    textColor: 'text-white'\n  },\n  Completed: {\n    substituteStatus: 'Passed',\n    statusColor: 'rgb(0,255,0)',\n    textColor: 'text-gray'\n  },\n  Approved: {\n    substituteStatus: 'Enrolled',\n    statusColor: 'rgb(0,0,255)',\n    textColor: 'text-white'\n  },\n  Unenrolled: {\n    substituteStatus: 'Unenrolled',\n    statusColor: 'rgba(255,255,0,0.2)',\n    textColor: 'text-gray'\n  },\n  Failed: {\n    substituteStatus: 'Failed',\n    statusColor: 'rgb(255,99,132)',\n    textColor: 'text-gray'\n  }\n};\n\nfunction InfoCardFooter(props) {\n  const _props$enrollment = props.enrollment,\n        enrollment = _props$enrollment === void 0 ? null : _props$enrollment;\n  let text = /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray font-bold\",\n    style: {\n      minWidth: 68\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Unenrolled\");\n  let backgroundColor = 'rgba(255,255,0,0.2)';\n\n  if (enrollment && enrollment.status) {\n    text = /*#__PURE__*/React.createElement(\"p\", {\n      className: `${enrollment && enrollment.status ? statuses[enrollment.status] ? statuses[enrollment.status].textColor : null : 'text-gray'} font-bold info-card__statusText`,\n      style: {\n        minWidth: 68\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, enrollment.status === 'Completed' || enrollment.status === 'Failed' ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Credit\\xA0\\xA0\", enrollment.credit) : statuses[enrollment.status] ? statuses[enrollment.status].substituteStatus : null);\n    backgroundColor = statuses[enrollment.status] ? statuses[enrollment.status].statusColor : 'rgba(255,255,0,0.2)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-auto flex flex-col justify-center text-center\",\n    style: {\n      width: 31,\n      background: backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"h-auto relative w-auto\",\n    style: {\n      bottom: '1.5em',\n      transform: 'rotate(90deg)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, text));\n}\n\nconst _default = function _default({\n  data,\n  provider = {},\n  groupedDataFields,\n  style,\n  className,\n  actions = [],\n  enableStatus = false,\n  latestEnrollment,\n  outlook,\n  earnings,\n  outEarvValue,\n  bannerImage,\n  mainImage\n}) {\n  if (!data) {\n    return null;\n  } //  let parseMainImage = (mainImage)\n  //  let parseBannerImage = JSON.parse(bannerImage)\n  // console.log(\"ooooooooo\", mainImage)\n\n\n  let name = data.name,\n      learn_and_earn = data.learn_and_earn,\n      cost = data.cost,\n      pay = data.pay,\n      credit = data.credit,\n      length_unit = data.length_unit,\n      frequency_unit = data.frequency_unit,\n      length = data.length,\n      frequency = data.frequency,\n      provider_id = data.provider_id,\n      start_date = data.start_date,\n      Provider = data.Provider;\n\n  if (start_date) {\n    start_date = dayjs(start_date).format('MMM DD, YYYY');\n  }\n\n  const lengthUnit = _find(groupedDataFields.length_unit, ({\n    id\n  }) => {\n    return id === Number(length_unit);\n  });\n\n  const frequencyUnit = _find(groupedDataFields.frequency_unit, ({\n    id\n  }) => {\n    return id === Number(frequency_unit);\n  }); // console.log('\\n provider,,,',provider)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex flex-row shadow margin_bt_20 ${className}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: `info-card`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-1 flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-left font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(Link, {\n    className: `text-xs font-normal text-left ${provider_id ? '' : 'pointer-events-none'}`,\n    to: `/home/provider/${provider_id}`,\n    onClick: e => e.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, provider && provider.name ? provider.name : null)), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LearnAndEarnIcons, {\n    learnAndEarn: learn_and_earn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMapMarkerAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), ' ', Provider && Provider.location ? Provider.location : '-')), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, length && /*#__PURE__*/React.createElement(UnitTag, {\n    number: length,\n    unit: lengthUnit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 26\n    }\n  }), frequency && /*#__PURE__*/React.createElement(UnitTag, {\n    number: frequency,\n    unit: frequencyUnit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Cost :\", ' ', `$${Number(cost).toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  }) || '---'}`), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"Pay :\", ' ', `$${Number(pay).toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  }) || '---'}`), outEarvValue ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 31\n    }\n  }, \"Credit : \", `${Number(credit).toLocaleString() || '---'}`) : null, outEarvValue ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 31\n    }\n  }, \"Outlook : \", outlook && outlook ? outlook : '-') : null, outEarvValue ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 31\n    }\n  }, \"Earnings : \", earnings && earnings ? earnings : '-') : null)))), enableStatus && /*#__PURE__*/React.createElement(InfoCardFooter, {\n    enrollment: latestEnrollment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }) || null);\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(statuses, \"statuses\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/InfoCard/InfoCard.js\");\n  reactHotLoader.register(InfoCardFooter, \"InfoCardFooter\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/InfoCard/InfoCard.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/student/InfoCard/InfoCard.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/student/InfoCard/InfoCard.js"],"names":["React","Link","Card","Col","Row","FontAwesomeIcon","faMapMarkerAlt","dayjs","LearnAndEarnIcons","UnitTag","statuses","Inactivate","substituteStatus","statusColor","textColor","Activated","Enrolled","Completed","Approved","Unenrolled","Failed","InfoCardFooter","props","enrollment","text","minWidth","backgroundColor","status","credit","width","background","bottom","transform","data","provider","groupedDataFields","style","className","actions","enableStatus","latestEnrollment","outlook","earnings","outEarvValue","bannerImage","mainImage","name","learn_and_earn","cost","pay","length_unit","frequency_unit","length","frequency","provider_id","start_date","Provider","format","lengthUnit","id","Number","frequencyUnit","e","stopPropagation","location","toLocaleString","undefined","maximumFractionDigits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Col, Row } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { find } from 'lodash';\r\nimport dayjs from 'dayjs';\r\nimport { LearnAndEarnIcons, UnitTag } from 'components/shared';\r\nimport './info-card.scss';\r\n\r\nconst statuses = {\r\n  Inactivate: {\r\n    substituteStatus: 'Applied',\r\n    statusColor: 'rgb(148,0,211)',\r\n    textColor: 'text-white',\r\n  },\r\n  Activated: {\r\n    substituteStatus: 'Enrolled',\r\n    statusColor: 'rgb(0,0,255)',\r\n    textColor: 'text-white',\r\n  },\r\n  Enrolled: {\r\n    substituteStatus: 'Enrolled',\r\n    statusColor: 'rgb(0,0,255)',\r\n    textColor: 'text-white',\r\n  },\r\n  Completed: {\r\n    substituteStatus: 'Passed',\r\n    statusColor: 'rgb(0,255,0)',\r\n    textColor: 'text-gray',\r\n  },\r\n  Approved: {\r\n    substituteStatus: 'Enrolled',\r\n    statusColor: 'rgb(0,0,255)',\r\n    textColor: 'text-white',\r\n  },\r\n  Unenrolled: {\r\n    substituteStatus: 'Unenrolled',\r\n    statusColor: 'rgba(255,255,0,0.2)',\r\n    textColor: 'text-gray',\r\n  },\r\n  Failed: {\r\n    substituteStatus: 'Failed',\r\n    statusColor: 'rgb(255,99,132)',\r\n    textColor: 'text-gray',\r\n  },\r\n};\r\n\r\nfunction InfoCardFooter(props) {\r\n  const { enrollment = null } = props;\r\n  let text = (\r\n    <p className=\"text-gray font-bold\" style={{ minWidth: 68 }}>\r\n      Unenrolled\r\n    </p>\r\n  );\r\n  let backgroundColor = 'rgba(255,255,0,0.2)';\r\n\r\n  if (enrollment && enrollment.status) {\r\n    text = (\r\n      <p\r\n        className={`${\r\n          enrollment && enrollment.status\r\n            ? statuses[enrollment.status]\r\n              ? statuses[enrollment.status].textColor\r\n              : null\r\n            : 'text-gray'\r\n          } font-bold info-card__statusText`}\r\n        style={{ minWidth: 68 }}\r\n      >\r\n        {enrollment.status === 'Completed' || enrollment.status === 'Failed' ? (\r\n          <span>Credit&nbsp;&nbsp;{enrollment.credit}</span>\r\n        ) : statuses[enrollment.status] ? (\r\n          statuses[enrollment.status].substituteStatus\r\n        ) : null}\r\n      </p>\r\n    );\r\n    backgroundColor = statuses[enrollment.status]\r\n      ? statuses[enrollment.status].statusColor\r\n      : 'rgba(255,255,0,0.2)';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"h-auto flex flex-col justify-center text-center\"\r\n      style={{\r\n        width: 31,\r\n        background: backgroundColor,\r\n      }}\r\n    >\r\n      <aside\r\n        className=\"h-auto relative w-auto\"\r\n        style={{\r\n          bottom: '1.5em',\r\n          transform: 'rotate(90deg)',\r\n        }}\r\n      >\r\n        {text}\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ({\r\n  data,\r\n  provider = {},\r\n  groupedDataFields,\r\n  style,\r\n  className,\r\n  actions = [],\r\n  enableStatus = false,\r\n  latestEnrollment,\r\n  outlook,\r\n  earnings,\r\n  outEarvValue,\r\n  bannerImage,\r\n  mainImage,\r\n}) {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  //  let parseMainImage = (mainImage)\r\n  //  let parseBannerImage = JSON.parse(bannerImage)\r\n\r\n  // console.log(\"ooooooooo\", mainImage)\r\n\r\n  let {\r\n    name,\r\n    learn_and_earn,\r\n    cost,\r\n    pay,\r\n    credit,\r\n    length_unit,\r\n    frequency_unit,\r\n    length,\r\n    frequency,\r\n    provider_id,\r\n    start_date,\r\n    Provider\r\n  } = data;\r\n\r\n  if (start_date) {\r\n    start_date = dayjs(start_date).format('MMM DD, YYYY');\r\n  }\r\n  const lengthUnit = find(groupedDataFields.length_unit, ({ id }) => {\r\n    return id === Number(length_unit);\r\n  });\r\n  const frequencyUnit = find(groupedDataFields.frequency_unit, ({ id }) => {\r\n    return id === Number(frequency_unit);\r\n  });\r\n  // console.log('\\n provider,,,',provider)\r\n  return (\r\n    <div className={`flex flex-row shadow margin_bt_20 ${className}`}>\r\n      <Card className={`info-card`} style={style}>\r\n        <Row>\r\n          <Col span={12}>\r\n            <Row className=\"mb-1 flex-col\">\r\n              <span className=\"text-left font-bold\">{name}</span>\r\n              <Link\r\n                className={`text-xs font-normal text-left ${\r\n                  provider_id ? '' : 'pointer-events-none'\r\n                  }`}\r\n                to={`/home/provider/${provider_id}`}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {provider && provider.name ? provider.name : null}\r\n              </Link>\r\n            </Row>\r\n            <Row className=\"my-1\">\r\n              <LearnAndEarnIcons learnAndEarn={learn_and_earn} />\r\n            </Row>\r\n            <Row className=\"my-1\">\r\n              <div>\r\n                <FontAwesomeIcon icon={faMapMarkerAlt} />{' '}\r\n                {Provider && Provider.location ? Provider.location : '-'}\r\n              </div>\r\n            </Row>\r\n            <Row className=\"mt-1\">\r\n              {length && <UnitTag number={length} unit={lengthUnit} />}\r\n              {frequency && <UnitTag number={frequency} unit={frequencyUnit} />}\r\n            </Row>\r\n          </Col>\r\n          <Col span={12} className=\"text-right\">\r\n            <ol>\r\n              <li>\r\n                Cost :{' '}\r\n                {`$${\r\n                  Number(cost).toLocaleString(undefined, {\r\n                    maximumFractionDigits: 2,\r\n                  }) || '---'\r\n                  }`}\r\n              </li>\r\n              <li>\r\n                Pay :{' '}\r\n                {`$${\r\n                  Number(pay).toLocaleString(undefined, {\r\n                    maximumFractionDigits: 2,\r\n                  }) || '---'\r\n                  }`}\r\n              </li>\r\n              {outEarvValue ? <li>Credit : {`${Number(credit).toLocaleString() || '---'}`}</li> : null}\r\n              {outEarvValue ? <li>\r\n                Outlook : {outlook && outlook ? outlook : '-'}</li> : null}\r\n              {outEarvValue ? <li>\r\n                Earnings : {earnings && earnings ? earnings : '-'}\r\n              </li> : null}\r\n            </ol>\r\n          </Col>\r\n          {/* <Col>\r\n          <div className=\"outlook_img\">\r\n          {mainImage && mainImage.length && mainImage.map(item => {\r\n            let newItem = JSON.parse(item)\r\n            return (\r\n              <img src={newItem.original} alt={newItem.name} />\r\n            )\r\n          })}\r\n          </div>\r\n          </Col> */}\r\n        </Row>\r\n      </Card>\r\n      {(enableStatus && <InfoCardFooter enrollment={latestEnrollment} />) ||\r\n        null}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
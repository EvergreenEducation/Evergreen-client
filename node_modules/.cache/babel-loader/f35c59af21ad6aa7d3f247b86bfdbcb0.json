{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/DataFieldTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { Table, Button, Form, Input } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport axiosInstance from 'services/AxiosInstance';\nimport useAxios, { configure } from 'axios-hooks';\nconfigure({\n  axios: axiosInstance\n});\nexport default function DataFieldTable({\n  data = [],\n  store,\n  loading,\n  type = null,\n  columns,\n  rules = [{\n    required: true,\n    message: 'Please enter a name'\n  }]\n}) {\n  const _Form$useForm = Form.useForm(),\n        _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n        form = _Form$useForm2[0];\n\n  const _useAxios = useAxios({\n    url: '/datafields',\n    method: 'POST'\n  }, {\n    manual: true\n  }),\n        _useAxios2 = _slicedToArray(_useAxios, 2),\n        postData = _useAxios2[0].data,\n        executePost = _useAxios2[1];\n\n  function createDataField(data) {\n    if (!data.name) {\n      return;\n    }\n\n    executePost({\n      data\n    });\n  }\n\n  function submit() {\n    const data = form.getFieldsValue(['name', 'description', 'industry']);\n    createDataField(_objectSpread(_objectSpread({}, data), {}, {\n      type\n    }));\n  }\n\n  function deleteDataField(_x) {\n    return _deleteDataField.apply(this, arguments);\n  }\n\n  function _deleteDataField() {\n    _deleteDataField = _asyncToGenerator(function* (rowData) {\n      const id = rowData.id;\n      const response = yield axiosInstance.delete(`/datafields/${id}`);\n\n      if (response.status === 200) {\n        store.removeOneByIdKey(id);\n      }\n    });\n    return _deleteDataField.apply(this, arguments);\n  }\n\n  useEffect(() => {\n    if (postData) {\n      store.addOne(postData);\n      form.resetFields();\n    }\n  }, [postData]);\n  let newData = data.slice();\n  newData.unshift({\n    renderInputs: true,\n    id: /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"rounded\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    })),\n    name: /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"mb-0\",\n      name: \"name\",\n      rules: rules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"rounded\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    })),\n    description: /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"mb-0\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"rounded\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    })),\n    industry: /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"mb-0\",\n      name: \"industry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"rounded\",\n      name: \"industry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    })),\n    add: /*#__PURE__*/React.createElement(Button, {\n      className: \"flex justify-center items-center\",\n      type: \"primary\",\n      shape: \"circle\",\n      size: \"small\",\n      onClick: () => submit(),\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"text-xs\",\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }))\n  });\n\n  const includeDeleteButton = (row, index) => {\n    if (index === 0) {\n      return row;\n    }\n\n    return _objectSpread(_objectSpread({}, row), {}, {\n      add: /*#__PURE__*/React.createElement(Button, {\n        className: \"flex justify-center items-center\",\n        key: index.toString(),\n        type: \"primary\",\n        shape: \"circle\",\n        size: \"small\",\n        danger: true,\n        onClick: () => deleteDataField(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"text-xs\",\n        icon: faMinus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }))\n    });\n  };\n\n  newData = newData.map(includeDeleteButton);\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    loading: loading,\n    rowKey: \"id\",\n    showHeader: true,\n    columns: columns,\n    dataSource: newData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(DataFieldTable, \"useForm{[form]}\\nuseAxios{[{ data: postData }, executePost]}\\nuseEffect{}\", () => [useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DataFieldTable, \"DataFieldTable\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/DataFieldTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/shared/DataFieldTable.js"],"names":["React","useEffect","Table","Button","Form","Input","FontAwesomeIcon","faPlus","faMinus","axiosInstance","useAxios","configure","axios","DataFieldTable","data","store","loading","type","columns","rules","required","message","useForm","form","url","method","manual","postData","executePost","createDataField","name","submit","getFieldsValue","deleteDataField","rowData","id","response","delete","status","removeOneByIdKey","addOne","resetFields","newData","slice","unshift","renderInputs","description","industry","add","includeDeleteButton","row","index","toString","map"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mCAAhC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,aAApC;AAEAA,SAAS,CAAC;AACRC,EAAAA,KAAK,EAAEH;AADC,CAAD,CAAT;AAIA,eAAe,SAASI,cAAT,CAAwB;AACrCC,EAAAA,IAAI,GAAG,EAD8B;AAErCC,EAAAA,KAFqC;AAGrCC,EAAAA,OAHqC;AAIrCC,EAAAA,IAAI,GAAG,IAJ8B;AAKrCC,EAAAA,OALqC;AAMrCC,EAAAA,KAAK,GAAG,CAAC;AAAEC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAD;AAN6B,CAAxB,EAOZ;AAAA,wBACcjB,IAAI,CAACkB,OAAL,EADd;AAAA;AAAA,QACMC,IADN;;AAAA,oBAGyCb,QAAQ,CAChD;AACEc,IAAAA,GAAG,EAAE,aADP;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADgD,EAKhD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GALgD,CAHjD;AAAA;AAAA,QAGcC,QAHd,iBAGQb,IAHR;AAAA,QAG0Bc,WAH1B;;AAWD,WAASC,eAAT,CAAyBf,IAAzB,EAA+B;AAC7B,QAAI,CAACA,IAAI,CAACgB,IAAV,EAAgB;AACd;AACD;;AACDF,IAAAA,WAAW,CAAC;AAAEd,MAAAA;AAAF,KAAD,CAAX;AACD;;AAED,WAASiB,MAAT,GAAkB;AAChB,UAAMjB,IAAI,GAAGS,IAAI,CAACS,cAAL,CAAoB,CAAC,MAAD,EAAS,aAAT,EAAuB,UAAvB,CAApB,CAAb;AACAH,IAAAA,eAAe,iCACVf,IADU;AAEbG,MAAAA;AAFa,OAAf;AAID;;AAxBA,WA0BcgB,eA1Bd;AAAA;AAAA;;AAAA;AAAA,yCA0BD,WAA+BC,OAA/B,EAAwC;AAAA,YAC9BC,EAD8B,GACvBD,OADuB,CAC9BC,EAD8B;AAEtC,YAAMC,QAAQ,SAAS3B,aAAa,CAAC4B,MAAd,CAAsB,eAAcF,EAAG,EAAvC,CAAvB;;AACA,UAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BvB,QAAAA,KAAK,CAACwB,gBAAN,CAAuBJ,EAAvB;AACD;AACF,KAhCA;AAAA;AAAA;;AAkCDlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,QAAJ,EAAc;AACZZ,MAAAA,KAAK,CAACyB,MAAN,CAAab,QAAb;AACAJ,MAAAA,IAAI,CAACkB,WAAL;AACD;AACF,GALQ,EAKN,CAACd,QAAD,CALM,CAAT;AAOA,MAAIe,OAAO,GAAG5B,IAAI,CAAC6B,KAAL,EAAd;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB;AACdC,IAAAA,YAAY,EAAE,IADA;AAEdV,IAAAA,EAAE,eACA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,QAAQ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHY;AAOdL,IAAAA,IAAI,eACF,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,KAAK,EAAEX,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARY;AAYd2B,IAAAA,WAAW,eACT,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,IAAI,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,IAAI,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbY;AAiBdC,IAAAA,QAAQ,eACN,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBY;AAsBdC,IAAAA,GAAG,eACD,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,OAAO,EAAE,MAAMjB,MAAM,EALvB;AAME,MAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,SAA3B;AAAqC,MAAA,IAAI,EAAExB,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF;AAvBY,GAAhB;;AAoCA,QAAM0C,mBAAmB,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1C,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,aAAOD,GAAP;AACD;;AACD,2CACKA,GADL;AAEEF,MAAAA,GAAG,eACD,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,GAAG,EAAEG,KAAK,CAACC,QAAN,EAFP;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAC,QAJR;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,MAAM,MANR;AAOE,QAAA,OAAO,EAAE,MAAMnB,eAAe,CAACiB,GAAD,CAPhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAqC,QAAA,IAAI,EAAE1C,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF;AAHJ;AAgBD,GApBD;;AAsBAkC,EAAAA,OAAO,GAAGA,OAAO,CAACW,GAAR,CAAYJ,mBAAZ,CAAV;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE1B,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEP,OADX;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,UAAU,EAAEwB,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;cAxHuB7B,c,sFAUoBH,Q;;;;;;;;;;;0BAVpBG,c","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Table, Button, Form, Input } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport useAxios, { configure } from 'axios-hooks';\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nexport default function DataFieldTable({\r\n  data = [],\r\n  store,\r\n  loading,\r\n  type = null,\r\n  columns,\r\n  rules = [{ required: true, message: 'Please enter a name' }],\r\n}) {\r\n  const [form] = Form.useForm();\r\n\r\n  const [{ data: postData }, executePost] = useAxios(\r\n    {\r\n      url: '/datafields',\r\n      method: 'POST',\r\n    },\r\n    { manual: true }\r\n  );\r\n\r\n  function createDataField(data) {\r\n    if (!data.name) {\r\n      return;\r\n    }\r\n    executePost({ data });\r\n  }\r\n\r\n  function submit() {\r\n    const data = form.getFieldsValue(['name', 'description','industry']);\r\n    createDataField({\r\n      ...data,\r\n      type,\r\n    });\r\n  }\r\n\r\n  async function deleteDataField(rowData) {\r\n    const { id } = rowData;\r\n    const response = await axiosInstance.delete(`/datafields/${id}`);\r\n    if (response.status === 200) {\r\n      store.removeOneByIdKey(id);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (postData) {\r\n      store.addOne(postData);\r\n      form.resetFields();\r\n    }\r\n  }, [postData]);\r\n\r\n  let newData = data.slice();\r\n  newData.unshift({\r\n    renderInputs: true,\r\n    id: (\r\n      <Form.Item className=\"mb-0\">\r\n        <Input className=\"rounded\" disabled />\r\n      </Form.Item>\r\n    ),\r\n    name: (\r\n      <Form.Item className=\"mb-0\" name=\"name\" rules={rules}>\r\n        <Input className=\"rounded\" name=\"name\" />\r\n      </Form.Item>\r\n    ),\r\n    description: (\r\n      <Form.Item className=\"mb-0\" name=\"description\">\r\n        <Input className=\"rounded\" name=\"description\" />\r\n      </Form.Item>\r\n    ),\r\n    industry: (\r\n      <Form.Item className=\"mb-0\" name=\"industry\">\r\n        <Input className=\"rounded\" name=\"industry\" />\r\n      </Form.Item>\r\n    ),\r\n    add: (\r\n      <Button\r\n        className=\"flex justify-center items-center\"\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        size=\"small\"\r\n        onClick={() => submit()}\r\n        htmlType=\"submit\"\r\n      >\r\n        <FontAwesomeIcon className=\"text-xs\" icon={faPlus} />\r\n      </Button>\r\n    ),\r\n  });\r\n\r\n  const includeDeleteButton = (row, index) => {\r\n    if (index === 0) {\r\n      return row;\r\n    }\r\n    return {\r\n      ...row,\r\n      add: (\r\n        <Button\r\n          className=\"flex justify-center items-center\"\r\n          key={index.toString()}\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          size=\"small\"\r\n          danger\r\n          onClick={() => deleteDataField(row)}\r\n        >\r\n          <FontAwesomeIcon className=\"text-xs\" icon={faMinus} />\r\n        </Button>\r\n      ),\r\n    };\r\n  };\r\n\r\n  newData = newData.map(includeDeleteButton);\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Table\r\n        loading={loading}\r\n        rowKey=\"id\"\r\n        showHeader={true}\r\n        columns={columns}\r\n        dataSource={newData}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
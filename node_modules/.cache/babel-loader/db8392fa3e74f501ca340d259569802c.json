{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Drawer, Button, message, Layout, Col } from 'antd';\nimport useAxios, { configure } from 'axios-hooks';\nimport OfferTable from 'components/offer/OfferTable';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport { SearchHeader, ProviderLogOutTopbar, FaPlusCircleButton } from 'components/shared';\nimport matchSorter from 'match-sorter';\n\nconst axios = require('axios').default;\n\nconst Content = Layout.Content;\nconst FormModal = imported(() => importedWrapper(\"imported_1ac18j9_component\", import('components/shared/FormModal')));\nconst OfferCreationContainer = imported(() => importedWrapper(\"imported_1hb68c1_component\", import('components/offer/OfferCreationContainer')));\nconst OfferUpdateModal = imported(() => importedWrapper(\"imported_1dirmp5_component\", import('components/offer/OfferUpdateModal')));\nconst BatchEnrollmentModal = imported(() => importedWrapper(\"imported_pknfgk_component\", import('components/enrollment/BatchEnrollmentModal')));\nconfigure({\n  axios: axiosInstance\n});\nexport default function OfferContainer(props) {\n  debugger;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const basePath = props.basePath,\n        openProviderUpdateModal = props.openProviderUpdateModal,\n        role = props.role,\n        providerId = props.providerId;\n  const history = useHistory();\n\n  const _useState3 = useState({\n    drawer: false,\n    updateModal: false,\n    batchEnrollModal: false,\n    formModal: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openable = _useState4[0],\n        setOpenable = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedOffer = _useState6[0],\n        setSelectedOffer = _useState6[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        provider = _useGlobalStore.provider,\n        offerStore = _useGlobalStore.offer;\n\n  const _offerStore$entities = offerStore.entities,\n        entities = _offerStore$entities === void 0 ? [] : _offerStore$entities;\n\n  const _useAxios = useAxios('/providers?scope=with_datafields'),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        _useAxios2$$data = _useAxios2$.data,\n        getProviderData = _useAxios2$$data === void 0 ? [] : _useAxios2$$data,\n        providerError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/datafields'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        datafieldsData = _useAxios4$.data,\n        datafieldError = _useAxios4$.error;\n\n  let getOffersUrl = role === 'provider' ? `/offers?scope=with_details&provider_id=${providerId}` : '/offers?scope=with_details';\n\n  const _useAxios5 = useAxios(getOffersUrl),\n        _useAxios6 = _slicedToArray(_useAxios5, 1),\n        _useAxios6$ = _useAxios6[0],\n        offersData = _useAxios6$.data,\n        offerError = _useAxios6$.error;\n\n  const getPdfData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (offer) {\n      let user_id = offer.id;\n      let pdfData = yield axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_offer`, {\n        user_id\n      });\n      return pdfData;\n    });\n\n    return function getPdfData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const openAndPopulateUpdateModal = offer => {\n    setSelectedOffer(offer);\n    setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      updateModal: true\n    }));\n  };\n\n  let Deletedata = false;\n\n  const handleDeleteModal = offer => {\n    setSelectedOffer(offer);\n    Deletedata = true;\n\n    if (Deletedata) {\n      offerStore.removeOne(offer);\n      getPdfData(offer).then(resp => {\n        // console.log(\"resp\", resp)\n        getOfferListData();\n      }).catch(error => {\n        console.log(error, \"error\");\n      });\n    } // setOpenable({\n    //   ...openable,\n    //   updateModal: true,\n    // });\n\n  };\n\n  const handleRowSelection = (record, rowIndex) => {\n    if (record) {\n      setSelectedOffer(record);\n      setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n        drawer: true\n      }));\n      return;\n    }\n\n    message.error(\"Could not receive offer's information.\");\n  };\n\n  const openBatchEnrollmentModal = () => {\n    setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: true,\n      drawer: true\n    }));\n  };\n\n  const viewEnrollments = offer => {\n    if (offer) {\n      history.push(`${basePath}/enrollments?offer=${offer.id}`);\n      return;\n    }\n\n    message.error(\"Could not receive offer's information.\");\n  };\n\n  if (providerError || datafieldError || offerError) {\n    history.push('/error/500');\n  }\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, {\n      keys\n    });\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  let showData = handleDataAfterSearch(Object.values(entities));\n\n  if (role === 'provider') {\n    showData = showData.filter(offer => {\n      return offer.provider_id === providerId;\n    });\n  }\n\n  useEffect(() => {\n    if (getProviderData) {\n      provider.addMany(getProviderData);\n    }\n\n    if (datafieldsData) {\n      datafield.addMany(datafieldsData);\n    }\n\n    if (offersData) {\n      offerStore.addMany(offersData);\n    }\n  }, [getProviderData, datafieldsData, offersData]);\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        getOffersList = _useState8[0],\n        setOffersList = _useState8[1]; // Calling of offerlist api\n\n\n  function getOfferListData() {\n    getOfferList().then(res => {\n      if (role === \"provider\") {\n        if (providerId) {\n          showProviderOfferList(res.data);\n        }\n      } else {\n        setOffersList(res.data);\n      }\n    }).catch(err => {\n      console.log('errr', err);\n    });\n  } // show provider list incase role is admin\n\n\n  function showProviderOfferList(data) {\n    if (data.length) {\n      let arr = [];\n\n      for (let i = 0; i < data.length; i++) {\n        if (providerId === data[i].provider_id) {\n          arr.push(data[i]);\n        } else {}\n      }\n\n      setOffersList(arr);\n    } else {}\n  } // Api of get offer list\n\n\n  const getOfferList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      let Data = yield axios.get(`${process.env.REACT_APP_API_URL}/api/v1/offers?scope=with_details`);\n      return Data;\n    });\n\n    return function getOfferList() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const getProviderOfferList = () => {\n  //   getProviderOfferApi().then(res => {\n  //     if (providerId) {\n  //       showProviderOfferList(res.data);\n  //     }\n  //   }).catch(err => {\n  //     console.log('err', err)\n  //   })\n  // }\n\n\n  const getProviderOfferApi = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      let Data = yield axios.get(`${process.env.REACT_APP_API_URL}/api/v1/offers?scope=with_details&provider_id=${providerId}`);\n      return Data;\n    });\n\n    return function getProviderOfferApi() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getOfferListData();\n  }, []); // console.log('showData :: ', showData, '\\n\\t getOffersList::', getOffersList)\n\n  console.log('getOfferListData', getOfferListData);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProviderLogOutTopbar, {\n    role: role,\n    onClick: openProviderUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"NEW OFFERS / OPPORTUNITIES\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircleButton, {\n    onMouseEnter: () => {\n      FormModal.preload();\n      OfferCreationContainer.preload();\n    },\n    onClick: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      formModal: true\n    })),\n    text: \"OFFER\",\n    className: \"offer-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OfferTable, {\n    datafields: datafield.entities,\n    providers: provider.entities // data={showData}\n    ,\n    data: getOffersList,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    handleDeleteModal: handleDeleteModal,\n    handleRowSelection: handleRowSelection,\n    viewEnrollments: viewEnrollments,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    title: \"New Offer / Opportunity\",\n    visible: openable.formModal,\n    FormComponent: OfferCreationContainer,\n    getOfferListData: getOfferListData,\n    role: role,\n    providerId: providerId,\n    getOffersList: getOffersList,\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      formModal: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(OfferUpdateModal, {\n    offer: selectedOffer,\n    visible: openable.updateModal,\n    getOfferListData: getOfferListData,\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      updateModal: false\n    })),\n    offerStore: offerStore,\n    scopedToProvider: false,\n    role: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Drawer, {\n    placement: \"bottom\",\n    visible: openable.drawer,\n    onClose: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      drawer: false\n    })),\n    height: 85,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"rounded\",\n    type: \"primary\",\n    onClick: () => openBatchEnrollmentModal(),\n    onMouseEnter: () => BatchEnrollmentModal.preload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Batch Enroll\"), /*#__PURE__*/React.createElement(BatchEnrollmentModal, {\n    offer: selectedOffer,\n    visible: openable.batchEnrollModal,\n    onSubmit: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: false,\n      drawer: false\n    })),\n    onCancel: () => setOpenable(_objectSpread(_objectSpread({}, openable), {}, {\n      batchEnrollModal: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(OfferContainer, \"useState{[searchString, setSearchString]('')}\\nuseHistory{history}\\nuseState{[openable, setOpenable]({\\r\\n    drawer: false,\\r\\n    updateModal: false,\\r\\n    batchEnrollModal: false,\\r\\n    formModal: false,\\r\\n  })}\\nuseState{[selectedOffer, setSelectedOffer]({})}\\nuseGlobalStore{{ datafield, provider, offer: offerStore }}\\nuseAxios{[{ data: getProviderData = [], error: providerError }]}\\nuseAxios{[{ data: datafieldsData, error: datafieldError }]}\\nuseAxios{[{ data: offersData, error: offerError }]}\\nuseEffect{}\\nuseState{[getOffersList, setOffersList]}\\nuseEffect{}\", () => [useHistory, useGlobalStore, useAxios, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(FormModal, \"FormModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferCreationContainer, \"OfferCreationContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferUpdateModal, \"OfferUpdateModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(BatchEnrollmentModal, \"BatchEnrollmentModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n  reactHotLoader.register(OfferContainer, \"OfferContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/offer/OfferContainer.js"],"names":["React","useEffect","useState","useHistory","Card","Drawer","Button","message","Layout","Col","useAxios","configure","OfferTable","useGlobalStore","axiosInstance","SearchHeader","ProviderLogOutTopbar","FaPlusCircleButton","matchSorter","axios","require","default","Content","FormModal","imported","OfferCreationContainer","OfferUpdateModal","BatchEnrollmentModal","OfferContainer","props","searchString","setSearchString","basePath","openProviderUpdateModal","role","providerId","history","drawer","updateModal","batchEnrollModal","formModal","openable","setOpenable","selectedOffer","setSelectedOffer","datafield","provider","offerStore","offer","entities","data","getProviderData","providerError","error","datafieldsData","datafieldError","getOffersUrl","offersData","offerError","getPdfData","user_id","id","pdfData","post","process","env","REACT_APP_API_URL","openAndPopulateUpdateModal","Deletedata","handleDeleteModal","removeOne","then","resp","getOfferListData","catch","console","log","handleRowSelection","record","rowIndex","openBatchEnrollmentModal","viewEnrollments","push","handleDataAfterSearch","keys","handleDataSearch","searchVal","showData","Object","values","filter","provider_id","addMany","getOffersList","setOffersList","getOfferList","res","showProviderOfferList","err","length","arr","i","Data","get","getProviderOfferApi","preload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { imported } from 'react-imported-component/macro';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Drawer, Button, message, Layout, Col } from 'antd';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport OfferTable from 'components/offer/OfferTable';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport {\r\n  SearchHeader,\r\n  ProviderLogOutTopbar,\r\n  FaPlusCircleButton,\r\n} from 'components/shared';\r\nimport matchSorter from 'match-sorter';\r\nconst axios = require('axios').default;\r\n\r\nconst { Content } = Layout;\r\n\r\nconst FormModal = imported(() => import('components/shared/FormModal'));\r\n\r\nconst OfferCreationContainer = imported(() =>\r\n  import('components/offer/OfferCreationContainer')\r\n);\r\n\r\nconst OfferUpdateModal = imported(() =>\r\n  import('components/offer/OfferUpdateModal')\r\n);\r\n\r\nconst BatchEnrollmentModal = imported(() =>\r\n  import('components/enrollment/BatchEnrollmentModal')\r\n);\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nexport default function OfferContainer(props) {\r\n  debugger\r\n  const [searchString, setSearchString] = useState('');\r\n  const { basePath, openProviderUpdateModal, role, providerId } = props;\r\n  const history = useHistory();\r\n  const [openable, setOpenable] = useState({\r\n    drawer: false,\r\n    updateModal: false,\r\n    batchEnrollModal: false,\r\n    formModal: false,\r\n  });\r\n  const [selectedOffer, setSelectedOffer] = useState({});\r\n  const { datafield, provider, offer: offerStore } = useGlobalStore();\r\n  const { entities = [] } = offerStore;\r\n\r\n\r\n  const [{ data: getProviderData = [], error: providerError }] = useAxios(\r\n    '/providers?scope=with_datafields'\r\n  );\r\n\r\n  const [{ data: datafieldsData, error: datafieldError }] = useAxios(\r\n    '/datafields'\r\n  );\r\n\r\n  let getOffersUrl =\r\n    role === 'provider'\r\n      ? `/offers?scope=with_details&provider_id=${providerId}`\r\n      : '/offers?scope=with_details';\r\n\r\n  const [{ data: offersData, error: offerError }] = useAxios(getOffersUrl);\r\n\r\n\r\n  const getPdfData = async (offer) => {\r\n    let user_id = offer.id\r\n    let pdfData = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_offer`, {\r\n      user_id\r\n    })\r\n    return pdfData\r\n  }\r\n\r\n  const openAndPopulateUpdateModal = (offer) => {\r\n    setSelectedOffer(offer);\r\n    setOpenable({\r\n      ...openable,\r\n      updateModal: true,\r\n    });\r\n  };\r\n  let Deletedata = false\r\n  const handleDeleteModal = (offer) => {\r\n    setSelectedOffer(offer);\r\n    Deletedata = true\r\n    if (Deletedata) {\r\n      offerStore.removeOne(offer)\r\n      getPdfData(offer).then(resp => {\r\n        // console.log(\"resp\", resp)\r\n        getOfferListData();\r\n      }).catch(error => {\r\n        console.log(error, \"error\")\r\n      })\r\n    }\r\n    // setOpenable({\r\n    //   ...openable,\r\n    //   updateModal: true,\r\n    // });\r\n  };\r\n\r\n  const handleRowSelection = (record, rowIndex) => {\r\n    if (record) {\r\n      setSelectedOffer(record);\r\n      setOpenable({\r\n        ...openable,\r\n        drawer: true,\r\n      });\r\n      return;\r\n    }\r\n    message.error(\"Could not receive offer's information.\");\r\n  };\r\n\r\n  const openBatchEnrollmentModal = () => {\r\n    setOpenable({\r\n      ...openable,\r\n      batchEnrollModal: true,\r\n      drawer: true,\r\n    });\r\n  };\r\n\r\n  const viewEnrollments = (offer) => {\r\n    if (offer) {\r\n      history.push(`${basePath}/enrollments?offer=${offer.id}`);\r\n      return;\r\n    }\r\n    message.error(\"Could not receive offer's information.\");\r\n  };\r\n\r\n  if (providerError || datafieldError || offerError) {\r\n    history.push('/error/500');\r\n  }\r\n\r\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\r\n    return matchSorter(data, searchString, { keys });\r\n  };\r\n\r\n  const handleDataSearch = (searchVal) => {\r\n    return setSearchString(searchVal);\r\n  };\r\n\r\n  let showData = handleDataAfterSearch(Object.values(entities));\r\n\r\n  if (role === 'provider') {\r\n    showData = showData.filter((offer) => {\r\n      return offer.provider_id === providerId;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (getProviderData) {\r\n      provider.addMany(getProviderData);\r\n    }\r\n    if (datafieldsData) {\r\n      datafield.addMany(datafieldsData);\r\n    }\r\n    if (offersData) {\r\n      offerStore.addMany(offersData);\r\n    }\r\n  }, [getProviderData, datafieldsData, offersData]);\r\n\r\n  const [getOffersList, setOffersList] = useState();\r\n\r\n  // Calling of offerlist api\r\n  function getOfferListData() {\r\n    getOfferList().then(res => {\r\n      if (role === \"provider\") {\r\n        if (providerId) {\r\n          showProviderOfferList(res.data);\r\n        }\r\n      } else {\r\n        setOffersList(res.data)\r\n      }\r\n    }).catch(err => {\r\n      console.log('errr', err)\r\n    })\r\n  }\r\n\r\n  // show provider list incase role is admin\r\n  function showProviderOfferList(data) {\r\n    if (data.length) {\r\n      let arr = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (providerId === data[i].provider_id) {\r\n          arr.push(data[i])\r\n        } else {\r\n        }\r\n      }\r\n      setOffersList(arr)\r\n    } else {\r\n    }\r\n  }\r\n\r\n  // Api of get offer list\r\n  const getOfferList = async () => {\r\n    let Data = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/offers?scope=with_details`)\r\n    return Data\r\n  }\r\n\r\n  // const getProviderOfferList = () => {\r\n  //   getProviderOfferApi().then(res => {\r\n  //     if (providerId) {\r\n  //       showProviderOfferList(res.data);\r\n  //     }\r\n  //   }).catch(err => {\r\n  //     console.log('err', err)\r\n  //   })\r\n  // }\r\n\r\n  const getProviderOfferApi = async () => {\r\n    let Data = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/offers?scope=with_details&provider_id=${providerId}`)\r\n    return Data\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOfferListData()\r\n  }, [])\r\n  // console.log('showData :: ', showData, '\\n\\t getOffersList::', getOffersList)\r\n  console.log('getOfferListData',getOfferListData)\r\n  return (\r\n    <Layout className=\"bg-transparent\">\r\n      <ProviderLogOutTopbar role={role} onClick={openProviderUpdateModal}>\r\n        <Col span={14}>\r\n          <SearchHeader\r\n            title=\"NEW OFFERS / OPPORTUNITIES\"\r\n            onSearch={handleDataSearch}\r\n          >\r\n            <FaPlusCircleButton\r\n              onMouseEnter={() => {\r\n                FormModal.preload();\r\n                OfferCreationContainer.preload();\r\n              }}\r\n              onClick={() => setOpenable({ ...openable, formModal: true })}\r\n              text=\"OFFER\" className=\"offer-btn\" />\r\n          </SearchHeader>\r\n        </Col>\r\n      </ProviderLogOutTopbar>\r\n      <Content className=\"p-6\">\r\n        <Card className=\"shadow-md rounded-md\">\r\n          <OfferTable\r\n            datafields={datafield.entities}\r\n            providers={provider.entities}\r\n            // data={showData}\r\n            data={getOffersList}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            handleDeleteModal={handleDeleteModal}\r\n            handleRowSelection={handleRowSelection}\r\n            viewEnrollments={viewEnrollments}\r\n            role={role}\r\n          />\r\n          {/* <OfferPdfTable\r\n            datafields={datafield.entities}\r\n            providers={provider.entities}\r\n            data={showData}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            handleRowSelection={handleRowSelection}\r\n            viewEnrollments={viewEnrollments}\r\n            role={role} /> */}\r\n          <FormModal\r\n            title=\"New Offer / Opportunity\"\r\n            visible={openable.formModal}\r\n            FormComponent={OfferCreationContainer}\r\n            getOfferListData={getOfferListData}\r\n            role={role}\r\n            providerId={providerId}\r\n            getOffersList={getOffersList}\r\n            onCancel={() => setOpenable({ ...openable, formModal: false })}\r\n          />\r\n          <OfferUpdateModal\r\n            offer={selectedOffer}\r\n            visible={openable.updateModal}\r\n            getOfferListData={getOfferListData}\r\n            onCancel={() => setOpenable({ ...openable, updateModal: false })}\r\n            offerStore={offerStore}\r\n            scopedToProvider={false}\r\n            role={role}\r\n          />\r\n          <Drawer\r\n            placement=\"bottom\"\r\n            visible={openable.drawer}\r\n            onClose={() => setOpenable({ ...openable, drawer: false })}\r\n            height={85}\r\n          >\r\n            <Button\r\n              className=\"rounded\"\r\n              type=\"primary\"\r\n              onClick={() => openBatchEnrollmentModal()}\r\n              onMouseEnter={() => BatchEnrollmentModal.preload()}\r\n            >\r\n              Batch Enroll\r\n            </Button>\r\n            <BatchEnrollmentModal\r\n              offer={selectedOffer}\r\n              visible={openable.batchEnrollModal}\r\n              onSubmit={() =>\r\n                setOpenable({\r\n                  ...openable,\r\n                  batchEnrollModal: false,\r\n                  drawer: false,\r\n                })\r\n              }\r\n              onCancel={() =>\r\n                setOpenable({\r\n                  ...openable,\r\n                  batchEnrollModal: false,\r\n                })\r\n              }\r\n            />\r\n          </Drawer>\r\n        </Card>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { settings } from '../configuration/config';\nimport { useImported } from './useImported';\n/**\n * @deprecated use {@link useImported} instead\n */\n\nfunction ImportedComponent(props) {\n  var _a = useImported(props.loadable),\n      loading = _a.loading,\n      error = _a.error,\n      loadable = _a.loadable,\n      Component = _a.imported,\n      retry = _a.retry;\n\n  if (loading && props.async) {\n    throw loadable.resolution;\n  }\n\n  if ('render' in props && props.render) {\n    return props.render(Component, {\n      loading: loading,\n      error: error\n    }, props.forwardProps);\n  }\n\n  if (Component) {\n    // importedUUID for cache busting\n    return React.createElement(Component, tslib_1.__assign({}, props.forwardProps, {\n      ref: props.forwardRef\n    }));\n  }\n\n  if (loading) {\n    if (props.async) {\n      throw loadable.resolution;\n    }\n\n    return props.LoadingComponent ? React.createElement(props.LoadingComponent, tslib_1.__assign({}, props.forwardProps)) : null;\n  }\n\n  if (error) {\n    // always report errors\n    // tslint:disable-next-line:no-console\n    console.error('react-imported-component', error); // let's rethrow the error after react leaves this function\n    // this might be very crucial for the \"safe\" dev mode\n\n    if (settings.rethrowErrors) {\n      setTimeout(function () {\n        throw error;\n      });\n    }\n\n    if (props.ErrorComponent) {\n      return React.createElement(props.ErrorComponent, tslib_1.__assign({\n        retryImport: retry,\n        error: error\n      }, props.forwardProps));\n    }\n\n    throw error;\n  }\n\n  return null;\n}\n\nexport { ImportedComponent };","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/react-imported-component/dist/es2015/ui/Component.js"],"names":["tslib_1","React","settings","useImported","ImportedComponent","props","_a","loadable","loading","error","Component","imported","retry","async","resolution","render","forwardProps","createElement","__assign","ref","forwardRef","LoadingComponent","console","rethrowErrors","setTimeout","ErrorComponent","retryImport"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA;;;;AAGA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,MAAIC,EAAE,GAAGH,WAAW,CAACE,KAAK,CAACE,QAAP,CAApB;AAAA,MAAsCC,OAAO,GAAGF,EAAE,CAACE,OAAnD;AAAA,MAA4DC,KAAK,GAAGH,EAAE,CAACG,KAAvE;AAAA,MAA8EF,QAAQ,GAAGD,EAAE,CAACC,QAA5F;AAAA,MAAsGG,SAAS,GAAGJ,EAAE,CAACK,QAArH;AAAA,MAA+HC,KAAK,GAAGN,EAAE,CAACM,KAA1I;;AACA,MAAIJ,OAAO,IAAIH,KAAK,CAACQ,KAArB,EAA4B;AACxB,UAAMN,QAAQ,CAACO,UAAf;AACH;;AACD,MAAI,YAAYT,KAAZ,IAAqBA,KAAK,CAACU,MAA/B,EAAuC;AACnC,WAAOV,KAAK,CAACU,MAAN,CAAaL,SAAb,EAAwB;AAAEF,MAAAA,OAAO,EAAEA,OAAX;AAAoBC,MAAAA,KAAK,EAAEA;AAA3B,KAAxB,EAA4DJ,KAAK,CAACW,YAAlE,CAAP;AACH;;AACD,MAAIN,SAAJ,EAAe;AACX;AACA,WAAOT,KAAK,CAACgB,aAAN,CAAoBP,SAApB,EAA+BV,OAAO,CAACkB,QAAR,CAAiB,EAAjB,EAAqBb,KAAK,CAACW,YAA3B,EAAyC;AAAEG,MAAAA,GAAG,EAAEd,KAAK,CAACe;AAAb,KAAzC,CAA/B,CAAP;AACH;;AACD,MAAIZ,OAAJ,EAAa;AACT,QAAIH,KAAK,CAACQ,KAAV,EAAiB;AACb,YAAMN,QAAQ,CAACO,UAAf;AACH;;AACD,WAAOT,KAAK,CAACgB,gBAAN,GAAyBpB,KAAK,CAACgB,aAAN,CAAoBZ,KAAK,CAACgB,gBAA1B,EAA4CrB,OAAO,CAACkB,QAAR,CAAiB,EAAjB,EAAqBb,KAAK,CAACW,YAA3B,CAA5C,CAAzB,GAAiH,IAAxH;AACH;;AACD,MAAIP,KAAJ,EAAW;AACP;AACA;AACAa,IAAAA,OAAO,CAACb,KAAR,CAAc,0BAAd,EAA0CA,KAA1C,EAHO,CAIP;AACA;;AACA,QAAIP,QAAQ,CAACqB,aAAb,EAA4B;AACxBC,MAAAA,UAAU,CAAC,YAAY;AACnB,cAAMf,KAAN;AACH,OAFS,CAAV;AAGH;;AACD,QAAIJ,KAAK,CAACoB,cAAV,EAA0B;AACtB,aAAOxB,KAAK,CAACgB,aAAN,CAAoBZ,KAAK,CAACoB,cAA1B,EAA0CzB,OAAO,CAACkB,QAAR,CAAiB;AAAEQ,QAAAA,WAAW,EAAEd,KAAf;AAAsBH,QAAAA,KAAK,EAAEA;AAA7B,OAAjB,EAAuDJ,KAAK,CAACW,YAA7D,CAA1C,CAAP;AACH;;AACD,UAAMP,KAAN;AACH;;AACD,SAAO,IAAP;AACH;;AACD,SAASL,iBAAT","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { settings } from '../configuration/config';\nimport { useImported } from './useImported';\n/**\n * @deprecated use {@link useImported} instead\n */\nfunction ImportedComponent(props) {\n    var _a = useImported(props.loadable), loading = _a.loading, error = _a.error, loadable = _a.loadable, Component = _a.imported, retry = _a.retry;\n    if (loading && props.async) {\n        throw loadable.resolution;\n    }\n    if ('render' in props && props.render) {\n        return props.render(Component, { loading: loading, error: error }, props.forwardProps);\n    }\n    if (Component) {\n        // importedUUID for cache busting\n        return React.createElement(Component, tslib_1.__assign({}, props.forwardProps, { ref: props.forwardRef }));\n    }\n    if (loading) {\n        if (props.async) {\n            throw loadable.resolution;\n        }\n        return props.LoadingComponent ? React.createElement(props.LoadingComponent, tslib_1.__assign({}, props.forwardProps)) : null;\n    }\n    if (error) {\n        // always report errors\n        // tslint:disable-next-line:no-console\n        console.error('react-imported-component', error);\n        // let's rethrow the error after react leaves this function\n        // this might be very crucial for the \"safe\" dev mode\n        if (settings.rethrowErrors) {\n            setTimeout(function () {\n                throw error;\n            });\n        }\n        if (props.ErrorComponent) {\n            return React.createElement(props.ErrorComponent, tslib_1.__assign({ retryImport: retry, error: error }, props.forwardProps));\n        }\n        throw error;\n    }\n    return null;\n}\nexport { ImportedComponent };\n"]},"metadata":{},"sourceType":"module"}
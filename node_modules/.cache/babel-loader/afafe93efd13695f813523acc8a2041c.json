{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\n\nconst axios = require('axios').default;\n\nfunction getBase64(image, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  return reader.readAsDataURL(image);\n}\n\nfunction ImageUploadAndNameInputs(props) {\n  const children = props.children,\n        onChangeUpload = props.onChangeUpload,\n        onChangeBannerUpload = props.onChangeBannerUpload,\n        _props$file = props.file,\n        file = _props$file === void 0 ? null : _props$file,\n        _props$bannerFile = props.bannerFile,\n        bannerFile = _props$bannerFile === void 0 ? null : _props$bannerFile;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        imageUrl = _useState2[0],\n        setImageUrl = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bannerImageUrl = _useState4[0],\n        setBannerImageUrl = _useState4[1];\n\n  console.log(\"imageUrl\", imageUrl);\n\n  const displayImageFile = (file, imageUrlCall) => {\n    if (file) {\n      if (file.file_link) {\n        imageUrlCall(file.file_link);\n        return;\n      }\n\n      getBase64(new Blob([file.originFileObj], {\n        type: file.type\n      }), _imageUrl => {\n        imageUrlCall(_imageUrl);\n      });\n    } else {\n      imageUrlCall(null);\n    }\n  };\n\n  useEffect(() => {\n    displayImageFile(file, setImageUrl);\n    displayImageFile(bannerFile, setBannerImageUrl);\n  }, [file, bannerFile]);\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n\n    return isJpgOrPng;\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"h-auto mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-center\",\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Main Image\"), /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    customRequest: () => {},\n    className: \"custom-ant-upload\",\n    name: \"file\",\n    listType: \"picture-card\",\n    showUploadList: false,\n    onChange: onChangeUpload,\n    beforeUpload: beforeUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"text-black text-6xl\",\n    icon: faCloudUploadAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Banner Image\"), /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    customRequest: () => {},\n    className: \"custom-ant-upload-2\",\n    name: \"file\",\n    listType: \"picture-card\",\n    showUploadList: false,\n    onChange: onChangeBannerUpload,\n    beforeUpload: beforeUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, bannerImageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: bannerImageUrl,\n    alt: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"text-black text-6xl\",\n    icon: faCloudUploadAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    style: {\n      display: 'inherit'\n    },\n    labelAlign: 'left',\n    colon: false,\n    className: \"mb-0 w-full\",\n    rules: [{\n      required: true,\n      message: 'Please enter a provider name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"rounded\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), children)));\n}\n\n__signature__(ImageUploadAndNameInputs, \"useState{[imageUrl, setImageUrl](null)}\\nuseState{[bannerImageUrl, setBannerImageUrl](null)}\\nuseEffect{}\");\n\nconst _default = ImageUploadAndNameInputs;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js\");\n  reactHotLoader.register(getBase64, \"getBase64\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js\");\n  reactHotLoader.register(ImageUploadAndNameInputs, \"ImageUploadAndNameInputs\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadAndNameInputs.js"],"names":["React","useEffect","useState","Layout","Row","Col","Input","Form","Upload","message","Button","FontAwesomeIcon","faCloudUploadAlt","axios","require","default","getBase64","image","callback","reader","FileReader","addEventListener","result","readAsDataURL","ImageUploadAndNameInputs","props","children","onChangeUpload","onChangeBannerUpload","file","bannerFile","imageUrl","setImageUrl","bannerImageUrl","setBannerImageUrl","console","log","displayImageFile","imageUrlCall","file_link","Blob","originFileObj","type","_imageUrl","beforeUpload","isJpgOrPng","error","display","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport 'assets/scss/antd-overrides.scss';\r\nconst axios = require('axios').default;\r\n\r\nfunction getBase64(image, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  return reader.readAsDataURL(image);\r\n}\r\n\r\nfunction ImageUploadAndNameInputs(props) {\r\n  const {\r\n    children,\r\n    onChangeUpload,\r\n    onChangeBannerUpload,\r\n    file = null,\r\n    bannerFile = null,\r\n  } = props;\r\n\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [bannerImageUrl, setBannerImageUrl] = useState(null);\r\n  console.log(\"imageUrl\",imageUrl)\r\n  const displayImageFile = (file, imageUrlCall) => {\r\n    if (file) {\r\n      if (file.file_link) {\r\n        imageUrlCall(file.file_link);\r\n        return;\r\n      }\r\n      getBase64(\r\n        new Blob([file.originFileObj], { type: file.type }),\r\n        (_imageUrl) => {\r\n          imageUrlCall(_imageUrl);\r\n        }\r\n      );\r\n    } else {\r\n      imageUrlCall(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    displayImageFile(file, setImageUrl);\r\n    displayImageFile(bannerFile, setBannerImageUrl);\r\n  }, [file, bannerFile]);\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    return isJpgOrPng;\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"h-auto mb-6\">\r\n      <Row className=\"justify-center\" gutter={8}>\r\n        <Col>\r\n          <span className=\"text-gray-700\">Main Image</span>\r\n          <Form.Item className=\"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\">\r\n            <Upload\r\n              customRequest={() => {}}\r\n              className=\"custom-ant-upload\"\r\n              name=\"file\"\r\n              listType=\"picture-card\"\r\n              showUploadList={false}\r\n              onChange={onChangeUpload}\r\n              beforeUpload={beforeUpload}\r\n            >\r\n              {imageUrl ? (\r\n                <img src={imageUrl} alt=\"upload\" />\r\n              ) : (\r\n                <div>\r\n                  <FontAwesomeIcon\r\n                    className=\"text-black text-6xl\"\r\n                    icon={faCloudUploadAlt}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col>\r\n          <span className=\"text-gray-700\">Banner Image</span>\r\n          <Form.Item className=\"w-full h-full form-item-control-input-h-full-w-full justify-center flex mb-0\">\r\n            <Upload\r\n              customRequest={() => {}}\r\n              className=\"custom-ant-upload-2\"\r\n              name=\"file\"\r\n              listType=\"picture-card\"\r\n              showUploadList={false}\r\n              onChange={onChangeBannerUpload}\r\n              beforeUpload={beforeUpload}\r\n            >\r\n              {bannerImageUrl ? (\r\n                <img src={bannerImageUrl} alt=\"upload\" />\r\n              ) : (\r\n                <div>\r\n                  <FontAwesomeIcon\r\n                    className=\"text-black text-6xl\"\r\n                    icon={faCloudUploadAlt}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={8}>\r\n        <Col span={24}>\r\n          <Form.Item\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            style={{ display: 'inherit' }}\r\n            labelAlign={'left'}\r\n            colon={false}\r\n            className=\"mb-0 w-full\"\r\n            rules={[\r\n              { required: true, message: 'Please enter a provider name' },\r\n            ]}\r\n          >\r\n            <Input className=\"rounded\" name=\"name\" />\r\n          </Form.Item>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ImageUploadAndNameInputs;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
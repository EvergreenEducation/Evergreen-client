{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport DataFieldTable from 'components/shared/DataFieldTable';\nimport useAxios, { configure } from 'axios-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Card } from 'antd';\n\nconst axios = require('axios').default;\n\nconfigure({\n  axios: axiosInstance\n});\ntoast.configure();\nexport default function AccedrationContainer(props) {\n  const history = useHistory();\n\n  const _useState = useState({\n    name: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        accedrationValues = _useState2[0],\n        setAccedrationValues = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        adddata = _useState4[0],\n        setAddData = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        getdata = _useState6[0],\n        setGetData = _useState6[1];\n\n  const postData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (accedrationValues) {\n      let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n      let name = accedrationValues.name;\n      let user_id = token.id;\n      let user_role = token.role;\n      console.log(\"insssssss\", name, user_role, user_id);\n      let pdfData = yield axios.post(`http://localhost:8888/api/v1/files/add_accedration`, {\n        name,\n        user_id,\n        user_role\n      });\n      return pdfData;\n    });\n\n    return function postData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n      let user_id = token.id;\n      let user_role = token.role;\n      console.log(\"insssssss\", user_role, user_id);\n      let Data = yield axios.get(`http://localhost:8888/api/v1/files/get_accedration/${user_id}/${user_role}`);\n      return Data;\n    });\n\n    return function getData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const handleName = input => {\n    let inputValues = _objectSpread(_objectSpread({}, accedrationValues), {}, {\n      name: input.target.value\n    });\n\n    console.log(\"----------\", inputValues);\n    setAccedrationValues(inputValues);\n  };\n\n  const handleButton = () => {\n    postData(accedrationValues).then(resp => {\n      console.log(resp, \"response\");\n\n      if (resp.status == 200) {\n        setAddData(resp.data.data);\n        notify(\"success\");\n      }\n    }).catch(error => {\n      console.log(error, \"error\");\n    });\n  };\n\n  const notify = msg => {\n    if (msg == \"error\") {\n      toast.error(\"Please send the valid params\");\n    } else if (msg == \"success\") {\n      toast.success(\"Data Save Successfully\");\n    } else if (msg == \"netork\") {\n      toast.network(\"Network error Please check again\");\n    }\n  };\n\n  console.log(\"getdata\", getdata); // const tableData = Object.values(entities).filter(typeEqualsTopic);\n  // const [{ data, loading, error }] = useAxios('/datafields?type=topic');\n  // if (error) {\n  //   history.push('/error/500');\n  // }\n\n  useEffect(() => {\n    getData().then(resp => {\n      console.log(resp, \"reeeeeeeeeeeee\");\n\n      if (resp.status == 200) {\n        setGetData(resp.data.data);\n      }\n    }).catch(error => {\n      console.log(error, \"errrrrrrrrrrrr\");\n    }); // if (data) {\n    //   datafield.addMany(data);\n    // }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Accreditation\",\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleName(e, \"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, \"click here\"), /*#__PURE__*/React.createElement(DataFieldTable, {\n    store: getdata,\n    type: \"topic\" // loading={loading}\n    ,\n    rules: [{\n      required: true,\n      message: 'Please enter a topic name'\n    }, {\n      required: true,\n      message: '\"Others\" is already reserved. It cannot be used.',\n      pattern: new RegExp(/^(?!(Others)$).+$/gm)\n    }],\n    columns: [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      className: 'antd-col'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  })));\n}\n\n__signature__(AccedrationContainer, \"useHistory{history}\\nuseState{[accedrationValues, setAccedrationValues]({\\n    name :\\\"\\\"\\n  })}\\nuseState{[adddata,setAddData]}\\nuseState{[getdata,setGetData]}\\nuseEffect{}\", () => [useHistory]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\");\n  reactHotLoader.register(AccedrationContainer, \"AccedrationContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js"],"names":["React","useEffect","useState","useHistory","useGlobalStore","axiosInstance","DataFieldTable","useAxios","configure","ToastContainer","toast","Card","axios","require","default","AccedrationContainer","props","history","name","accedrationValues","setAccedrationValues","adddata","setAddData","getdata","setGetData","postData","token","JSON","parse","localStorage","getItem","user_id","id","user_role","role","console","log","pdfData","post","getData","Data","get","handleName","input","inputValues","target","value","handleButton","then","resp","status","data","notify","catch","error","msg","success","network","e","required","message","pattern","RegExp","title","dataIndex","key","className"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport DataFieldTable from 'components/shared/DataFieldTable';\nimport useAxios, { configure } from 'axios-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Card } from 'antd';\nconst axios = require('axios').default;\n\nconfigure({\n  axios: axiosInstance,\n});\ntoast.configure()\n\nexport default function AccedrationContainer(props) {\n  const history = useHistory();\n \n\n  const [accedrationValues, setAccedrationValues] = useState({\n    name :\"\"\n  })\n  const [adddata,setAddData]= useState()\n  const [getdata,setGetData] = useState()\n  const postData = async (accedrationValues) => {\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\n    let name  = accedrationValues.name\n    let user_id = token.id\n    let user_role = token.role\n    console.log(\"insssssss\",name,user_role,user_id)\n    let pdfData = await axios.post(`http://localhost:8888/api/v1/files/add_accedration`,{\n      name,\n      user_id,\n      user_role\n    })\n    return pdfData\n  }\n\n  const getData = async () => {\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\n    let user_id = token.id\n    let user_role = token.role\n    console.log(\"insssssss\",user_role,user_id)\n    let Data = await axios.get(`http://localhost:8888/api/v1/files/get_accedration/${user_id}/${user_role}`)\n    return Data\n  }\n\n  const handleName = (input) => {\n    let inputValues = {...accedrationValues, name : input.target.value}\n    console.log(\"----------\",inputValues)\n    setAccedrationValues(inputValues)\n  }\n\n  const handleButton =() => {\n    postData(accedrationValues).then(resp => {\n      console.log(resp,\"response\")\n      if(resp.status == 200){\n        setAddData(resp.data.data)\n        notify(\"success\")\n      }\n    }).catch(error => {\n      console.log(error,\"error\")\n    })\n  }\n\n  const notify = msg => {\n    if (msg == \"error\") {\n        toast.error(\"Please send the valid params\")\n    } else if (msg == \"success\") {\n        toast.success(\"Data Save Successfully\")\n    } else if(msg == \"netork\"){\n      toast.network(\"Network error Please check again\")\n    }\n}\n\n  console.log(\"getdata\",getdata)\n\n  \n\n  // const tableData = Object.values(entities).filter(typeEqualsTopic);\n\n  // const [{ data, loading, error }] = useAxios('/datafields?type=topic');\n\n  // if (error) {\n  //   history.push('/error/500');\n  // }\n\n  useEffect(() => {\n    getData().then(resp => {\n      console.log(resp,\"reeeeeeeeeeeee\")\n      if(resp.status == 200){\n        setGetData(resp.data.data)\n      }\n    }).catch(error => {\n      console.log(error,\"errrrrrrrrrrrr\")\n    })\n    // if (data) {\n    //   datafield.addMany(data);\n    // }\n  }, []);\n\n  return (\n    <>\n    <Card title=\"Accreditation\" className=\"shadow-md rounded-md\">\n    <input onChange={(e) => handleName(e, \"name\")}></input>\n    <button onClick={() => handleButton()}>click here</button>\n    <DataFieldTable\n        store={getdata}\n        type=\"topic\"\n        // loading={loading}\n        rules={[\n          {\n            required: true,\n            message: 'Please enter a topic name',\n          },\n          {\n            required: true,\n            message: '\"Others\" is already reserved. It cannot be used.',\n            pattern: new RegExp(/^(?!(Others)$).+$/gm),\n          },\n        ]}\n        columns={[\n          {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            className: 'antd-col',\n          }\n        ]}\n      />\n    </Card> \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/LogOutTopbar.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Button, Layout, Tooltip, Col } from 'antd';\nimport AuthService from 'services/AuthService';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport useAxios, { configure } from 'axios-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst axios = require('axios').default;\n\ntoast.configure();\nconst Header = Layout.Header;\nconfigure({\n  axios: axiosInstance\n});\nconsole.log(\"axiosInstance\", axios);\nexport default function LogOutTopbar({\n  children,\n  renderNextToLogOut\n}) {\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield;\n\n  const entities = datafield.entities,\n        typeEqualsProvider = datafield.typeEqualsProvider;\n  const pdfData = Object.values(entities).filter(typeEqualsProvider);\n\n  const _useState = useState({\n    files: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputFile = _useState2[0],\n        setInputFile = _useState2[1];\n\n  const pdfFileData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (inputFile) {\n      let fileData = inputFile.files;\n      var bodyFormData = new FormData();\n      yield bodyFormData.append('files', fileData);\n      let pdfData = yield axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return pdfData;\n    });\n\n    return function pdfFileData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const addPdfData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (pdfItem) {\n      let pdf_link = pdfItem;\n      let token = JSON.parse(localStorage.getItem(\"currentSession\"));\n      let user_id = token.id;\n      let user_role = token.role;\n      let pdfData = yield axios.post('http://localhost:8888/api/v1/files/addPdfData', {\n        pdf_link,\n        user_id,\n        user_role\n      });\n      return pdfData;\n    });\n\n    return function addPdfData(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const onChangeHandler = e => {\n    let emailvalue = _objectSpread(_objectSpread({}, inputFile), {}, {\n      files: e.target.files[0]\n    });\n\n    setInputFile(emailvalue);\n  };\n\n  const handleButton = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield pdfFileData(inputFile).then( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (resp) {\n          if (resp.status === 200) {\n            let pdfItem = resp.data.original;\n\n            if (pdfItem !== null) {\n              addPdfData(pdfItem).then(response => {\n                console.log(\"ressssssssss\", response);\n\n                if (response.status === 200) {\n                  setInputFile({\n                    files: []\n                  });\n                }\n              }).catch(error => {\n                console.log(\"errrr\", error);\n              });\n            }\n          } else {\n            console.log(\"error\");\n          }\n        });\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }()).catch(error => {\n        console.log(\"errorr\", error);\n      });\n    });\n\n    return function handleButton() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var inputs = document.querySelectorAll('.file-input');\n\n  for (var i = 0, len = inputs.length; i < len; i++) {\n    customInput(inputs[i]);\n  }\n\n  function customInput(el) {\n    const fileInput = el.querySelector('[type=\"file\"]');\n    const label = el.querySelector('[data-js-label]');\n\n    fileInput.onchange = fileInput.onmouseout = function () {\n      if (!fileInput.value) return;\n      var value = fileInput.value.replace(/^.*[\\\\\\/]/, '');\n      el.className += ' -chosen';\n      label.innerText = value;\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Header, {\n    className: \"px-6 bg-white h-12 flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, children), /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, renderNextToLogOut, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: e => onChangeHandler(e, \"files\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Choose\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"label\",\n    \"data-js-label\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 45\n    }\n  }, \"No file selected\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"pdf_btn\",\n    onClick: () => handleButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Upload PDF\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    onClick: () => AuthService.logout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Sign out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"text-black\",\n    icon: faSignOutAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(LogOutTopbar, \"useGlobalStore{{ datafield }}\\nuseState{[inputFile, setInputFile]({\\r\\n    files: []\\r\\n  })}\", () => [useGlobalStore]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/LogOutTopbar.js\");\n  reactHotLoader.register(Header, \"Header\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/LogOutTopbar.js\");\n  reactHotLoader.register(LogOutTopbar, \"LogOutTopbar\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/LogOutTopbar.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/shared/LogOutTopbar.js"],"names":["React","useState","FontAwesomeIcon","faSignOutAlt","Button","Layout","Tooltip","Col","AuthService","useGlobalStore","axiosInstance","useAxios","configure","ToastContainer","toast","axios","require","default","Header","console","log","LogOutTopbar","children","renderNextToLogOut","datafield","entities","typeEqualsProvider","pdfData","Object","values","filter","files","inputFile","setInputFile","pdfFileData","fileData","bodyFormData","FormData","append","post","headers","addPdfData","pdfItem","pdf_link","token","JSON","parse","localStorage","getItem","user_id","id","user_role","role","onChangeHandler","e","emailvalue","target","handleButton","then","resp","status","data","original","response","catch","error","inputs","document","querySelectorAll","i","len","length","customInput","el","fileInput","querySelector","label","onchange","onmouseout","value","replace","className","innerText","logout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Layout, Tooltip, Col } from 'antd';\r\nimport AuthService from 'services/AuthService';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst axios = require('axios').default;\r\ntoast.configure()\r\nconst { Header } = Layout;\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\nconsole.log(\"axiosInstance\", axios)\r\nexport default function LogOutTopbar({ children, renderNextToLogOut }) {\r\n  const { datafield } = useGlobalStore();\r\n  const { entities, typeEqualsProvider } = datafield;\r\n  const pdfData = Object.values(entities).filter(typeEqualsProvider);\r\n  const [inputFile, setInputFile] = useState({\r\n    files: []\r\n  })\r\n  const pdfFileData = async (inputFile) => {\r\n    let fileData = inputFile.files\r\n    var bodyFormData = new FormData();\r\n    await bodyFormData.append('files', fileData);\r\n    let pdfData = await axios.post('http://localhost:8888/api/v1/files/upload_pdf_file', bodyFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    return pdfData\r\n  }\r\n\r\n  const addPdfData = async (pdfItem) => {\r\n    let pdf_link = pdfItem\r\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\r\n    let user_id = token.id\r\n    let user_role = token.role\r\n    let pdfData = await axios.post('http://localhost:8888/api/v1/files/addPdfData', {\r\n      pdf_link,\r\n      user_id,\r\n      user_role\r\n    })\r\n    return pdfData\r\n  }\r\n\r\n  const onChangeHandler = (e) => {\r\n    let emailvalue = { ...inputFile, files: e.target.files[0] }\r\n    setInputFile(emailvalue)\r\n  }\r\n\r\n  const handleButton = async () => {\r\n    await pdfFileData(inputFile).then(async resp => {\r\n      if (resp.status === 200) {\r\n        let pdfItem = resp.data.original\r\n        if(pdfItem !== null){\r\n          addPdfData(pdfItem).then(response => {\r\n            console.log(\"ressssssssss\",response)\r\n            if(response.status === 200){\r\n              setInputFile({\r\n                files: []\r\n              })\r\n            }\r\n          }).catch(error => {\r\n            console.log(\"errrr\",error)\r\n          })\r\n        }\r\n      } else {\r\n        console.log(\"error\")\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"errorr\", error)\r\n    })\r\n  }\r\n\r\nvar inputs = document.querySelectorAll('.file-input')\r\n\r\nfor (var i = 0, len = inputs.length; i < len; i++) {\r\n  customInput(inputs[i])\r\n}\r\n\r\nfunction customInput (el) {\r\n  const fileInput = el.querySelector('[type=\"file\"]')\r\n  const label = el.querySelector('[data-js-label]')\r\n  \r\n  fileInput.onchange =\r\n  fileInput.onmouseout = function () {\r\n    if (!fileInput.value) return\r\n    \r\n    var value = fileInput.value.replace(/^.*[\\\\\\/]/, '')\r\n    el.className += ' -chosen'\r\n    label.innerText = value\r\n  }\r\n}\r\n\r\n  return (\r\n    <Header className=\"px-6 bg-white h-12 flex items-center\">\r\n      <Col span={17}>{children}</Col>\r\n      <Col span={7} className=\"flex justify-end items-center\">\r\n        {renderNextToLogOut}\r\n        <div class='file-input'>\r\n          <input type='file'  name=\"file\"  onChange={(e) => onChangeHandler(e, \"files\")}/>\r\n          <span class='button'>Choose</span>\r\n          <span class='label' data-js-label><label>No file selected</label></span>\r\n        </div>\r\n       \r\n        <button className=\"pdf_btn\" onClick={() => handleButton()}>Upload PDF</button>\r\n        <Button type=\"link\" onClick={() => AuthService.logout()}>\r\n          <Tooltip title=\"Sign out\">\r\n            <FontAwesomeIcon className=\"text-black\" icon={faSignOutAlt} />\r\n          </Tooltip>\r\n        </Button>\r\n      </Col>\r\n    </Header>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Layout, Col } from 'antd';\nimport useAxios, { configure } from 'axios-hooks';\nimport PathwaysTable from 'components/pathway/PathwaysTable';\nimport PathwaysPdfTable from 'components/pathway/PathwayPdfTable';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport matchSorter from 'match-sorter';\nimport { SearchHeader, ProviderLogOutTopbar, FaPlusCircleButton } from 'components/shared';\nconst FormModal = imported(() => importedWrapper(\"imported_1ac18j9_component\", import('components/shared/FormModal')));\nconst PathwayCreationContainer = imported(() => importedWrapper(\"imported_-1rv77bh_component\", import('components/pathway/PathwayCreationContainer')));\nconst PathwayUpdateModal = imported(() => importedWrapper(\"imported_4bicrf_component\", import('components/pathway/PathwayUpdateModal')));\nconfigure({\n  axios: axiosInstance\n});\nconst Content = Layout.Content;\nexport default function PathwayContainer({\n  role,\n  providerId,\n  openProviderUpdateModal\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const history = useHistory();\n\n  const _useState3 = useState({\n    pathwayCreation: false,\n    pathwayUpdate: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modalStates = _useState4[0],\n        setModalStates = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedPathway = _useState6[0],\n        setSelectedPathway = _useState6[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        providerStore = _useGlobalStore.provider,\n        pathwayStore = _useGlobalStore.pathway,\n        offerStore = _useGlobalStore.offer;\n\n  let getPathwaysUrl = role === 'provider' ? `/pathways?scope=with_details&provider_id=${providerId}` : '/pathways?scope=with_details';\n\n  const _useAxios = useAxios(getPathwaysUrl),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        getPathways = _useAxios2$.data,\n        getPathwaysError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/datafields'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        getDataFields = _useAxios4$.data,\n        getDataFieldsError = _useAxios4$.error;\n\n  const _useAxios5 = useAxios('/offers'),\n        _useAxios6 = _slicedToArray(_useAxios5, 1),\n        _useAxios6$ = _useAxios6[0],\n        getOffers = _useAxios6$.data,\n        getOffersError = _useAxios6$.error;\n\n  let getProviderUrl = role === 'provider' ? `/providers/${providerId}` : '/providers';\n\n  const _useAxios7 = useAxios(getProviderUrl),\n        _useAxios8 = _slicedToArray(_useAxios7, 1),\n        getProviders = _useAxios8[0].data;\n\n  const openAndPopulateUpdateModal = pathway => {\n    setSelectedPathway(pathway);\n    setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayUpdate: true\n    }));\n  };\n\n  if (getPathwaysError || getOffersError || getDataFieldsError) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (getPathways) {\n      pathwayStore.addMany(getPathways);\n    }\n\n    if (getOffers) {\n      offerStore.addMany(getOffers);\n    }\n\n    if (getProviders) {\n      if (role === 'provider') {\n        providerStore.addOne(getProviders);\n      } else {\n        providerStore.addMany(getProviders);\n      }\n    }\n\n    if (getDataFields) {\n      datafield.addMany(getDataFields);\n    }\n  }, [getPathways, getOffers, getProviders, getDataFields]);\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, {\n      keys\n    });\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  let showData = handleDataAfterSearch(Object.values(pathwayStore.entities));\n\n  if (role === 'provider') {\n    showData = showData.filter(p => {\n      return p.provider_id === providerId;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProviderLogOutTopbar, {\n    role: role,\n    onClick: openProviderUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"PATHWAYS\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircleButton, {\n    onMouseEnter: () => {\n      FormModal.preload();\n      PathwayCreationContainer.preload();\n    },\n    onClick: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayCreation: true\n    })),\n    text: \"PATHWAY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PathwaysTable, {\n    datafields: datafield.entities,\n    providers: providerStore.entities,\n    data: showData,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    offers: offerStore.entities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PathwaysPdfTable, {\n    datafields: datafield.entities,\n    providers: providerStore.entities,\n    data: showData,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    offers: offerStore.entities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    title: \"New Pathway\",\n    visible: modalStates.pathwayCreation,\n    FormComponent: PathwayCreationContainer,\n    role: role,\n    providerId: providerId,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayCreation: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PathwayUpdateModal, {\n    pathway: selectedPathway,\n    visible: modalStates.pathwayUpdate,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayUpdate: false\n    })),\n    pathwayStore: pathwayStore,\n    role: role,\n    providers: Object.values(providerStore.entities),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }))));\n}\n\n__signature__(PathwayContainer, \"useState{[searchString, setSearchString]('')}\\nuseHistory{history}\\nuseState{[modalStates, setModalStates]({\\r\\n    pathwayCreation: false,\\r\\n    pathwayUpdate: false,\\r\\n  })}\\nuseState{[selectedPathway, setSelectedPathway]({})}\\nuseGlobalStore{{\\r\\n    datafield,\\r\\n    provider: providerStore,\\r\\n    pathway: pathwayStore,\\r\\n    offer: offerStore,\\r\\n  }}\\nuseAxios{[{ data: getPathways, error: getPathwaysError }]}\\nuseAxios{[{ data: getDataFields, error: getDataFieldsError }]}\\nuseAxios{[{ data: getOffers, error: getOffersError }]}\\nuseAxios{[{ data: getProviders }]}\\nuseEffect{}\", () => [useHistory, useGlobalStore, useAxios, useAxios, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FormModal, \"FormModal\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayCreationContainer, \"PathwayCreationContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayUpdateModal, \"PathwayUpdateModal\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayContainer, \"PathwayContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/pathway/PathwayContainer.js"],"names":["React","useEffect","useState","useHistory","Card","Layout","Col","useAxios","configure","PathwaysTable","PathwaysPdfTable","useGlobalStore","axiosInstance","matchSorter","SearchHeader","ProviderLogOutTopbar","FaPlusCircleButton","FormModal","imported","PathwayCreationContainer","PathwayUpdateModal","axios","Content","PathwayContainer","role","providerId","openProviderUpdateModal","searchString","setSearchString","history","pathwayCreation","pathwayUpdate","modalStates","setModalStates","selectedPathway","setSelectedPathway","datafield","providerStore","provider","pathwayStore","pathway","offerStore","offer","getPathwaysUrl","getPathways","data","getPathwaysError","error","getDataFields","getDataFieldsError","getOffers","getOffersError","getProviderUrl","getProviders","openAndPopulateUpdateModal","push","addMany","addOne","handleDataAfterSearch","keys","handleDataSearch","searchVal","showData","Object","values","entities","filter","p","provider_id","preload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { imported } from 'react-imported-component/macro';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Layout, Col } from 'antd';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport PathwaysTable from 'components/pathway/PathwaysTable';\r\nimport PathwaysPdfTable from 'components/pathway/PathwayPdfTable'\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport matchSorter from 'match-sorter';\r\nimport {\r\n  SearchHeader,\r\n  ProviderLogOutTopbar,\r\n  FaPlusCircleButton,\r\n} from 'components/shared';\r\n\r\nconst FormModal = imported(() => import('components/shared/FormModal'));\r\n\r\nconst PathwayCreationContainer = imported(() =>\r\n  import('components/pathway/PathwayCreationContainer')\r\n);\r\n\r\nconst PathwayUpdateModal = imported(() =>\r\n  import('components/pathway/PathwayUpdateModal')\r\n);\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function PathwayContainer({\r\n  role,\r\n  providerId,\r\n  openProviderUpdateModal,\r\n}) {\r\n  const [searchString, setSearchString] = useState('');\r\n  const history = useHistory();\r\n  const [modalStates, setModalStates] = useState({\r\n    pathwayCreation: false,\r\n    pathwayUpdate: false,\r\n  });\r\n  const [selectedPathway, setSelectedPathway] = useState({});\r\n  const {\r\n    datafield,\r\n    provider: providerStore,\r\n    pathway: pathwayStore,\r\n    offer: offerStore,\r\n  } = useGlobalStore();\r\n\r\n  let getPathwaysUrl =\r\n    role === 'provider'\r\n      ? `/pathways?scope=with_details&provider_id=${providerId}`\r\n      : '/pathways?scope=with_details';\r\n\r\n  const [{ data: getPathways, error: getPathwaysError }] = useAxios(\r\n    getPathwaysUrl\r\n  );\r\n\r\n  const [{ data: getDataFields, error: getDataFieldsError }] = useAxios(\r\n    '/datafields'\r\n  );\r\n\r\n  const [{ data: getOffers, error: getOffersError }] = useAxios('/offers');\r\n\r\n  let getProviderUrl =\r\n    role === 'provider' ? `/providers/${providerId}` : '/providers';\r\n\r\n  const [{ data: getProviders }] = useAxios(getProviderUrl);\r\n\r\n  const openAndPopulateUpdateModal = (pathway) => {\r\n    setSelectedPathway(pathway);\r\n    setModalStates({ ...modalStates, pathwayUpdate: true });\r\n  };\r\n\r\n  if (getPathwaysError || getOffersError || getDataFieldsError) {\r\n    history.push('/error/500');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (getPathways) {\r\n      pathwayStore.addMany(getPathways);\r\n    }\r\n    if (getOffers) {\r\n      offerStore.addMany(getOffers);\r\n    }\r\n    if (getProviders) {\r\n      if (role === 'provider') {\r\n        providerStore.addOne(getProviders);\r\n      } else {\r\n        providerStore.addMany(getProviders);\r\n      }\r\n    }\r\n    if (getDataFields) {\r\n      datafield.addMany(getDataFields);\r\n    }\r\n  }, [getPathways, getOffers, getProviders, getDataFields]);\r\n\r\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\r\n    return matchSorter(data, searchString, { keys });\r\n  };\r\n\r\n  const handleDataSearch = (searchVal) => {\r\n    return setSearchString(searchVal);\r\n  };\r\n\r\n  let showData = handleDataAfterSearch(Object.values(pathwayStore.entities));\r\n\r\n  if (role === 'provider') {\r\n    showData = showData.filter((p) => {\r\n      return p.provider_id === providerId;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"bg-transparent\">\r\n      <ProviderLogOutTopbar role={role} onClick={openProviderUpdateModal}>\r\n        <Col span={14}>\r\n          <SearchHeader title=\"PATHWAYS\" onSearch={handleDataSearch}>\r\n            <FaPlusCircleButton\r\n              onMouseEnter={() => {\r\n                FormModal.preload();\r\n                PathwayCreationContainer.preload();\r\n              }}\r\n              onClick={() =>\r\n                setModalStates({ ...modalStates, pathwayCreation: true })\r\n              }\r\n              text=\"PATHWAY\"\r\n            />\r\n          </SearchHeader>\r\n        </Col>\r\n      </ProviderLogOutTopbar>\r\n      <Content className=\"p-6\">\r\n        <Card className=\"shadow-md rounded-md\">\r\n          <PathwaysTable\r\n            datafields={datafield.entities}\r\n            providers={providerStore.entities}\r\n            data={showData}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            offers={offerStore.entities}\r\n          />\r\n          <PathwaysPdfTable\r\n           datafields={datafield.entities}\r\n           providers={providerStore.entities}\r\n           data={showData}\r\n           handleUpdateModal={openAndPopulateUpdateModal}\r\n           offers={offerStore.entities} />\r\n          <FormModal\r\n            title=\"New Pathway\"\r\n            visible={modalStates.pathwayCreation}\r\n            FormComponent={PathwayCreationContainer}\r\n            role={role}\r\n            providerId={providerId}\r\n            onCancel={() =>\r\n              setModalStates({ ...modalStates, pathwayCreation: false })\r\n            }\r\n          />\r\n          <PathwayUpdateModal\r\n            pathway={selectedPathway}\r\n            visible={modalStates.pathwayUpdate}\r\n            onCancel={() =>\r\n              setModalStates({ ...modalStates, pathwayUpdate: false })\r\n            }\r\n            pathwayStore={pathwayStore}\r\n            role={role}\r\n            providers={Object.values(providerStore.entities)}\r\n          />\r\n        </Card>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
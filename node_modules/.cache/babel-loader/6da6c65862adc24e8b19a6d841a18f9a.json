{"ast":null,"code":"// Adapted from https://github.com/Flet/prettier-bytes/\n// Changing 1000 bytes to 1024, so we can keep uppercase KB vs kB\n// ISC License (c) Dan Flettre https://github.com/Flet/prettier-bytes/blob/master/LICENSE\nmodule.exports = function prettierBytes(num) {\n  if (typeof num !== 'number' || isNaN(num)) {\n    throw new TypeError('Expected a number, got ' + typeof num);\n  }\n\n  var neg = num < 0;\n  var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  if (neg) {\n    num = -num;\n  }\n\n  if (num < 1) {\n    return (neg ? '-' : '') + num + ' B';\n  }\n\n  var exponent = Math.min(Math.floor(Math.log(num) / Math.log(1024)), units.length - 1);\n  num = Number(num / Math.pow(1024, exponent));\n  var unit = units[exponent];\n\n  if (num >= 10 || num % 1 === 0) {\n    // Do not show decimals when the number is two-digit, or if the number has no\n    // decimal component.\n    return (neg ? '-' : '') + num.toFixed(0) + ' ' + unit;\n  } else {\n    return (neg ? '-' : '') + num.toFixed(1) + ' ' + unit;\n  }\n};","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/@transloadit/prettier-bytes/prettierBytes.js"],"names":["module","exports","prettierBytes","num","isNaN","TypeError","neg","units","exponent","Math","min","floor","log","length","Number","pow","unit","toFixed"],"mappings":"AAAA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAwBC,GAAxB,EAA6B;AAC5C,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BC,KAAK,CAACD,GAAD,CAApC,EAA2C;AACzC,UAAM,IAAIE,SAAJ,CAAc,4BAA4B,OAAOF,GAAjD,CAAN;AACD;;AAED,MAAIG,GAAG,GAAGH,GAAG,GAAG,CAAhB;AACA,MAAII,KAAK,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,CAAZ;;AAEA,MAAID,GAAJ,EAAS;AACPH,IAAAA,GAAG,GAAG,CAACA,GAAP;AACD;;AAED,MAAIA,GAAG,GAAG,CAAV,EAAa;AACX,WAAO,CAACG,GAAG,GAAG,GAAH,GAAS,EAAb,IAAmBH,GAAnB,GAAyB,IAAhC;AACD;;AAED,MAAIK,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,GAAL,CAAST,GAAT,IAAgBM,IAAI,CAACG,GAAL,CAAS,IAAT,CAA3B,CAAT,EAAqDL,KAAK,CAACM,MAAN,GAAe,CAApE,CAAf;AACAV,EAAAA,GAAG,GAAGW,MAAM,CAACX,GAAG,GAAGM,IAAI,CAACM,GAAL,CAAS,IAAT,EAAeP,QAAf,CAAP,CAAZ;AACA,MAAIQ,IAAI,GAAGT,KAAK,CAACC,QAAD,CAAhB;;AAEA,MAAIL,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,CAAN,KAAY,CAA7B,EAAgC;AAC9B;AACA;AACA,WAAO,CAACG,GAAG,GAAG,GAAH,GAAS,EAAb,IAAmBH,GAAG,CAACc,OAAJ,CAAY,CAAZ,CAAnB,GAAoC,GAApC,GAA0CD,IAAjD;AACD,GAJD,MAIO;AACL,WAAO,CAACV,GAAG,GAAG,GAAH,GAAS,EAAb,IAAmBH,GAAG,CAACc,OAAJ,CAAY,CAAZ,CAAnB,GAAoC,GAApC,GAA0CD,IAAjD;AACD;AACF,CA3BD","sourcesContent":["// Adapted from https://github.com/Flet/prettier-bytes/\n// Changing 1000 bytes to 1024, so we can keep uppercase KB vs kB\n// ISC License (c) Dan Flettre https://github.com/Flet/prettier-bytes/blob/master/LICENSE\nmodule.exports = function prettierBytes (num) {\n  if (typeof num !== 'number' || isNaN(num)) {\n    throw new TypeError('Expected a number, got ' + typeof num)\n  }\n\n  var neg = num < 0\n  var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  if (neg) {\n    num = -num\n  }\n\n  if (num < 1) {\n    return (neg ? '-' : '') + num + ' B'\n  }\n\n  var exponent = Math.min(Math.floor(Math.log(num) / Math.log(1024)), units.length - 1)\n  num = Number(num / Math.pow(1024, exponent))\n  var unit = units[exponent]\n\n  if (num >= 10 || num % 1 === 0) {\n    // Do not show decimals when the number is two-digit, or if the number has no\n    // decimal component.\n    return (neg ? '-' : '') + num.toFixed(0) + ' ' + unit\n  } else {\n    return (neg ? '-' : '') + num.toFixed(1) + ' ' + unit\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
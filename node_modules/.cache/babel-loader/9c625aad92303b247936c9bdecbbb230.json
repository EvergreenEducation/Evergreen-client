{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useState, useEffect } from 'react';\nexport default function useImageAndBannerImage() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bannerFile = _useState4[0],\n        setBannerFile = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        onFileChange = _useState6[0],\n        setOnFileChange = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        onBannerFileChange = _useState8[0],\n        setOnBannerFileChange = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newFile = _useState10[0],\n        setNewFile = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newBannerFile = _useState12[0],\n        setNewBannerFile = _useState12[1];\n\n  const onChangeSetStates = (event, fileStateSetter, onChangeSetter, fileStateSetter2) => {\n    if (!event.file) {\n      return;\n    }\n\n    const _file = event.file;\n\n    if (_file) {\n      onChangeSetter(true);\n      fileStateSetter(_file);\n      fileStateSetter2(_file);\n    }\n  };\n\n  const onChangeFileUpload = e => {\n    onChangeSetStates(e, setFile, setOnFileChange, setNewFile);\n  };\n\n  const onChangeBannerUpload = e => {\n    onChangeSetStates(e, setBannerFile, setOnBannerFileChange, setNewBannerFile);\n  };\n\n  const reset = () => {\n    setFile(null);\n    setOnFileChange(null);\n    setNewFile(null);\n    setBannerFile(null);\n    setOnBannerFileChange(null);\n    setNewBannerFile(null);\n  };\n\n  useEffect(() => {}, [file, onFileChange, newFile, bannerFile, onBannerFileChange, newBannerFile]);\n  return [{\n    file,\n    newFile,\n    onFileChange,\n    setFile,\n    setNewFile,\n    setOnFileChange,\n    onChangeFileUpload\n  }, {\n    bannerFile,\n    onBannerFileChange,\n    newBannerFile,\n    setBannerFile,\n    setOnBannerFileChange,\n    setNewBannerFile,\n    onChangeBannerUpload\n  }, reset];\n}\n\n__signature__(useImageAndBannerImage, \"useState{[file, setFile](null)}\\nuseState{[bannerFile, setBannerFile](null)}\\nuseState{[onFileChange, setOnFileChange](false)}\\nuseState{[onBannerFileChange, setOnBannerFileChange](false)}\\nuseState{[newFile, setNewFile](null)}\\nuseState{[newBannerFile, setNewBannerFile](null)}\\nuseEffect{}\");\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useImageAndBannerImage, \"useImageAndBannerImage\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/hooks/UseImageAndBannerImage.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/hooks/UseImageAndBannerImage.js"],"names":["useState","useEffect","useImageAndBannerImage","file","setFile","bannerFile","setBannerFile","onFileChange","setOnFileChange","onBannerFileChange","setOnBannerFileChange","newFile","setNewFile","newBannerFile","setNewBannerFile","onChangeSetStates","event","fileStateSetter","onChangeSetter","fileStateSetter2","_file","onChangeFileUpload","e","onChangeBannerUpload","reset"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAAA,oBACvBF,QAAQ,CAAC,IAAD,CADe;AAAA;AAAA,QACxCG,IADwC;AAAA,QAClCC,OADkC;;AAAA,qBAEXJ,QAAQ,CAAC,IAAD,CAFG;AAAA;AAAA,QAExCK,UAFwC;AAAA,QAE5BC,aAF4B;;AAAA,qBAIPN,QAAQ,CAAC,KAAD,CAJD;AAAA;AAAA,QAIxCO,YAJwC;AAAA,QAI1BC,eAJ0B;;AAAA,qBAKKR,QAAQ,CAAC,KAAD,CALb;AAAA;AAAA,QAKxCS,kBALwC;AAAA,QAKpBC,qBALoB;;AAAA,qBAOjBV,QAAQ,CAAC,IAAD,CAPS;AAAA;AAAA,QAOxCW,OAPwC;AAAA,QAO/BC,UAP+B;;AAAA,sBAQLZ,QAAQ,CAAC,IAAD,CARH;AAAA;AAAA,QAQxCa,aARwC;AAAA,QAQzBC,gBARyB;;AAU/C,QAAMC,iBAAiB,GAAG,CACxBC,KADwB,EAExBC,eAFwB,EAGxBC,cAHwB,EAIxBC,gBAJwB,KAKrB;AACH,QAAI,CAACH,KAAK,CAACb,IAAX,EAAiB;AACf;AACD;;AACD,UAAMiB,KAAK,GAAGJ,KAAK,CAACb,IAApB;;AACA,QAAIiB,KAAJ,EAAW;AACTF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAD,MAAAA,eAAe,CAACG,KAAD,CAAf;AACAD,MAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACD;AACF,GAfD;;AAiBA,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAChCP,IAAAA,iBAAiB,CAACO,CAAD,EAAIlB,OAAJ,EAAaI,eAAb,EAA8BI,UAA9B,CAAjB;AACD,GAFD;;AAIA,QAAMW,oBAAoB,GAAID,CAAD,IAAO;AAClCP,IAAAA,iBAAiB,CACfO,CADe,EAEfhB,aAFe,EAGfI,qBAHe,EAIfI,gBAJe,CAAjB;AAMD,GAPD;;AASA,QAAMU,KAAK,GAAG,MAAM;AAClBpB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAI,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAClBE,IADkB,EAElBI,YAFkB,EAGlBI,OAHkB,EAIlBN,UAJkB,EAKlBI,kBALkB,EAMlBI,aANkB,CAAX,CAAT;AASA,SAAO,CACL;AACEV,IAAAA,IADF;AAEEQ,IAAAA,OAFF;AAGEJ,IAAAA,YAHF;AAIEH,IAAAA,OAJF;AAKEQ,IAAAA,UALF;AAMEJ,IAAAA,eANF;AAOEa,IAAAA;AAPF,GADK,EAUL;AACEhB,IAAAA,UADF;AAEEI,IAAAA,kBAFF;AAGEI,IAAAA,aAHF;AAIEP,IAAAA,aAJF;AAKEI,IAAAA,qBALF;AAMEI,IAAAA,gBANF;AAOES,IAAAA;AAPF,GAVK,EAmBLC,KAnBK,CAAP;AAqBD;;cA/EuBtB,sB;;;;;;;;;;;0BAAAA,sB","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useImageAndBannerImage() {\r\n  const [file, setFile] = useState(null);\r\n  const [bannerFile, setBannerFile] = useState(null);\r\n\r\n  const [onFileChange, setOnFileChange] = useState(false);\r\n  const [onBannerFileChange, setOnBannerFileChange] = useState(false);\r\n\r\n  const [newFile, setNewFile] = useState(null);\r\n  const [newBannerFile, setNewBannerFile] = useState(null);\r\n\r\n  const onChangeSetStates = (\r\n    event,\r\n    fileStateSetter,\r\n    onChangeSetter,\r\n    fileStateSetter2\r\n  ) => {\r\n    if (!event.file) {\r\n      return;\r\n    }\r\n    const _file = event.file;\r\n    if (_file) {\r\n      onChangeSetter(true);\r\n      fileStateSetter(_file);\r\n      fileStateSetter2(_file);\r\n    }\r\n  };\r\n\r\n  const onChangeFileUpload = (e) => {\r\n    onChangeSetStates(e, setFile, setOnFileChange, setNewFile);\r\n  };\r\n\r\n  const onChangeBannerUpload = (e) => {\r\n    onChangeSetStates(\r\n      e,\r\n      setBannerFile,\r\n      setOnBannerFileChange,\r\n      setNewBannerFile\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    setFile(null);\r\n    setOnFileChange(null);\r\n    setNewFile(null);\r\n    setBannerFile(null);\r\n    setOnBannerFileChange(null);\r\n    setNewBannerFile(null);\r\n  };\r\n\r\n  useEffect(() => {}, [\r\n    file,\r\n    onFileChange,\r\n    newFile,\r\n    bannerFile,\r\n    onBannerFileChange,\r\n    newBannerFile,\r\n  ]);\r\n\r\n  return [\r\n    {\r\n      file,\r\n      newFile,\r\n      onFileChange,\r\n      setFile,\r\n      setNewFile,\r\n      setOnFileChange,\r\n      onChangeFileUpload,\r\n    },\r\n    {\r\n      bannerFile,\r\n      onBannerFileChange,\r\n      newBannerFile,\r\n      setBannerFile,\r\n      setOnBannerFileChange,\r\n      setNewBannerFile,\r\n      onChangeBannerUpload,\r\n    },\r\n    reset,\r\n  ];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
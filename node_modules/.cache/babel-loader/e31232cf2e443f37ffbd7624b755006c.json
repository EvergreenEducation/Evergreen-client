{"ast":null,"code":"var wildcard = require('wildcard');\n\nvar reMimePartSplit = /[\\/\\+\\.]/;\n/**\n  # mime-match\n\n  A simple function to checker whether a target mime type matches a mime-type\n  pattern (e.g. image/jpeg matches image/jpeg OR image/*).\n\n  ## Example Usage\n\n  <<< example.js\n\n**/\n\nmodule.exports = function (target, pattern) {\n  function test(pattern) {\n    var result = wildcard(pattern, target, reMimePartSplit); // ensure that we have a valid mime type (should have two parts)\n\n    return result && result.length >= 2;\n  }\n\n  return pattern ? test(pattern.split(';')[0]) : test;\n};","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/mime-match/index.js"],"names":["wildcard","require","reMimePartSplit","module","exports","target","pattern","test","result","length","split"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,eAAe,GAAG,UAAtB;AAEA;;;;;;;;;;;;AAWAC,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACzC,WAASC,IAAT,CAAcD,OAAd,EAAuB;AACrB,QAAIE,MAAM,GAAGR,QAAQ,CAACM,OAAD,EAAUD,MAAV,EAAkBH,eAAlB,CAArB,CADqB,CAGrB;;AACA,WAAOM,MAAM,IAAIA,MAAM,CAACC,MAAP,IAAiB,CAAlC;AACD;;AAED,SAAOH,OAAO,GAAGC,IAAI,CAACD,OAAO,CAACI,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAP,GAAiCH,IAA/C;AACD,CATD","sourcesContent":["var wildcard = require('wildcard');\nvar reMimePartSplit = /[\\/\\+\\.]/;\n\n/**\n  # mime-match\n\n  A simple function to checker whether a target mime type matches a mime-type\n  pattern (e.g. image/jpeg matches image/jpeg OR image/*).\n\n  ## Example Usage\n\n  <<< example.js\n\n**/\nmodule.exports = function(target, pattern) {\n  function test(pattern) {\n    var result = wildcard(pattern, target, reMimePartSplit);\n\n    // ensure that we have a valid mime type (should have two parts)\n    return result && result.length >= 2;\n  }\n\n  return pattern ? test(pattern.split(';')[0]) : test;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\n\nconst axios = require('axios').default;\n\ntoast.configure();\n\nfunction ImageUploadFunction({\n  handleImageUrl\n}) {\n  const _useState = useState({\n    files: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputFile = _useState2[0],\n        setInputFile = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loader = _useState4[0],\n        setLoader = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        imageValue = _useState6[0],\n        setImageValue = _useState6[1];\n\n  const onChangeUpload = e => {\n    let emailvalue = _objectSpread(_objectSpread({}, inputFile), {}, {\n      files: e.target.files\n    });\n\n    setInputFile(emailvalue);\n\n    if (e.target.files.length) {\n      handleButton(e.target.files);\n    }\n  };\n\n  const handleButton = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (files) {\n      console.log(files);\n      yield pdfFileData(files).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (resp) {\n          if (resp.status === 200) {\n            console.log(resp.data.data, \"responssssssssssss\");\n            let pdfItem = resp.data.data;\n            handleImageUrl(pdfItem);\n            setImageValue(pdfItem);\n            setLoader(false); // notify(\"success\")\n          }\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).catch(error => {\n        console.log(error, \"erorrr\");\n      });\n    });\n\n    return function handleButton(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const pdfFileData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (inputFile) {\n      let fileData = inputFile;\n      console.log(\"filesdataaaa\", fileData);\n      const data = new FormData();\n\n      var _iterator = _createForOfIteratorHelper(fileData),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          const File = _step.value;\n          data.append('files', File);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      let pdfData = yield axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/upload_multiple_file`, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return pdfData;\n    });\n\n    return function pdfFileData(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const notify = msg => {\n    if (msg == \"error\") {\n      toast.error(\"Please select the valid format\");\n    } else if (msg == \"success\") {\n      toast.success(\"File upload successfully\");\n    }\n  };\n\n  console.log(\"pdfData\", imageValue);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"h-auto mb-6 opportunity_choose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    className: \"flex justify-end items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    timeout: 3000 //3 secs\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    multiple: true,\n    type: \"file\",\n    name: \"file\",\n    onChange: e => onChangeUpload(e, \"files\"),\n    accept: \"image/*,video/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Choose\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"label\",\n    \"data-js-label\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, inputFile !== null ? inputFile.files.name : \"Choose File\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image_block_opportunity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, imageValue && imageValue.length > 0 ? imageValue.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: item.original,\n      alt: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    });\n  }) : null)));\n}\n\n__signature__(ImageUploadFunction, \"useState{[inputFile, setInputFile]({\\n    files: []\\n  })}\\nuseState{[loader, setLoader](true)}\\nuseState{[imageValue, setImageValue]([])}\");\n\nconst _default = ImageUploadFunction;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n  reactHotLoader.register(ImageUploadFunction, \"ImageUploadFunction\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/shared/ImageUploadFunction.js"],"names":["React","useEffect","useState","Layout","Row","Col","Input","Form","Upload","message","Button","FontAwesomeIcon","faCloudUploadAlt","ToastContainer","toast","Loader","axios","require","default","configure","ImageUploadFunction","handleImageUrl","files","inputFile","setInputFile","loader","setLoader","imageValue","setImageValue","onChangeUpload","e","emailvalue","target","length","handleButton","console","log","pdfFileData","then","resp","status","data","pdfItem","catch","error","fileData","FormData","File","append","pdfData","post","process","env","REACT_APP_API_URL","headers","notify","msg","success","name","map","item","i","original"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col, Input, Form, Upload, message, Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport 'assets/scss/antd-overrides.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner'\nconst axios = require('axios').default;\ntoast.configure()\n\nfunction ImageUploadFunction({ handleImageUrl }) {\n  const [inputFile, setInputFile] = useState({\n    files: []\n  })\n  const [loader, setLoader] = useState(true)\n  const [imageValue, setImageValue] = useState([])\n  const onChangeUpload = (e) => {\n    let emailvalue = { ...inputFile, files: e.target.files }\n    setInputFile(emailvalue)\n    if (e.target.files.length) {\n      handleButton(e.target.files)\n    }\n  }\n  const handleButton = async (files) => {\n    console.log(files)\n    await pdfFileData(files).then(async resp => {\n      if (resp.status === 200) {\n        console.log(resp.data.data, \"responssssssssssss\")\n        let pdfItem = resp.data.data\n        handleImageUrl(pdfItem)\n        setImageValue(pdfItem)\n        setLoader(false)\n        // notify(\"success\")\n      }\n    }).catch(error => {\n      console.log(error, \"erorrr\")\n    })\n  }\n  const pdfFileData = async (inputFile) => {\n    let fileData = inputFile\n    console.log(\"filesdataaaa\", fileData)\n    const data = new FormData();\n    for (const File of fileData) {\n      data.append('files', File);\n    }\n    let pdfData = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/upload_multiple_file`, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    return pdfData\n  }\n  const notify = msg => {\n    if (msg == \"error\") {\n      toast.error(\"Please select the valid format\")\n    } else if (msg == \"success\") {\n      toast.success(\"File upload successfully\")\n    }\n  }\n  console.log(\"pdfData\", imageValue)\n  return (\n    <Layout className=\"h-auto mb-6 opportunity_choose\">\n      <Col span={7} className=\"flex justify-end items-center\">\n        {loader ?<Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        /> : null}\n        <div class='file-input'>\n          <input multiple type='file' name=\"file\" onChange={(e) => onChangeUpload(e, \"files\")} accept=\"image/*,video/*\" />\n          <span class='button'>Choose</span>\n          <span class='label' data-js-label><label>{inputFile !== null ? inputFile.files.name : \"Choose File\"}</label></span>\n        </div>\n        <div className=\"image_block_opportunity\">\n          {imageValue && imageValue.length > 0 ? imageValue.map((item, i) => {\n            return (\n              <img src={item.original} alt={item.name} />)\n          }) : null}\n        </div>\n      </Col>\n    </Layout>\n  );\n}\n\nexport default ImageUploadFunction;\n"]},"metadata":{},"sourceType":"module"}
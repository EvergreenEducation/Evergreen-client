{"ast":null,"code":"import _asyncToGenerator from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport DataFieldTable from 'components/shared/DataFieldTable';\nimport useAxios, { configure } from 'axios-hooks';\nimport { Card } from 'antd';\n\nconst axios = require('axios').default;\n\nconfigure({\n  axios: axiosInstance\n});\nexport default function AccedrationContainer(props) {\n  const history = useHistory();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        accedrationValues = _useState2[0],\n        setAccedrationValues = _useState2[1];\n\n  const postData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* () {\n      let token = JSON.parse(localStorage.getItem(\"currentSession\")); // let user_id = token.id\n      // let user_role = token.role\n\n      let pdfData = yield axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`);\n      return pdfData;\n    });\n\n    return function postData() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const tableData = Object.values(entities).filter(typeEqualsTopic);\n  // const [{ data, loading, error }] = useAxios('/datafields?type=topic');\n  // if (error) {\n  //   history.push('/error/500');\n  // }\n\n\n  useEffect(() => {// if (data) {\n    //   datafield.addMany(data);\n    // }\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    title: \"Accreditation\",\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataFieldTable // data={error ? [] : tableData}\n  // store={datafield}\n  , {\n    type: \"topic\" // loading={loading}\n    ,\n    rules: [{\n      required: true,\n      message: 'Please enter a topic name'\n    }, {\n      required: true,\n      message: '\"Others\" is already reserved. It cannot be used.',\n      pattern: new RegExp(/^(?!(Others)$).+$/gm)\n    }],\n    columns: [{\n      title: 'Accreditation Name',\n      dataIndex: 'name',\n      key: 'name',\n      className: 'antd-col'\n    }, {\n      title: 'add',\n      dataIndex: 'add',\n      key: 'add'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(AccedrationContainer, \"useHistory{history}\\nuseState{[accedrationValues, setAccedrationValues]([])}\\nuseEffect{}\", () => [useHistory]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\");\n  reactHotLoader.register(AccedrationContainer, \"AccedrationContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/AccedrationContainer.js"],"names":["React","useEffect","useHistory","useGlobalStore","axiosInstance","DataFieldTable","useAxios","configure","Card","axios","require","default","AccedrationContainer","props","history","useState","accedrationValues","setAccedrationValues","postData","token","JSON","parse","localStorage","getItem","pdfData","get","user_id","user_role","required","message","pattern","RegExp","title","dataIndex","key","className"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,IAAT,QAAqB,MAArB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEAJ,SAAS,CAAC;AACRE,EAAAA,KAAK,EAAEL;AADC,CAAD,CAAT;AAIA,eAAe,SAASQ,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AADkD,oBAIAa,QAAQ,CAAC,EAAD,CAJR;AAAA;AAAA,QAI3CC,iBAJ2C;AAAA,QAIxBC,oBAJwB;;AAMlD,QAAMC,QAAQ;AAAA,iCAAG,aAAY;AAC3B,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAZ,CAD2B,CAE3B;AACA;;AACA,UAAIC,OAAO,SAASf,KAAK,CAACgB,GAAN,CAAW,mDAAkDC,OAAQ,IAAGC,SAAU,EAAlF,CAApB;AACA,aAAOH,OAAP;AACD,KANa;;AAAA,oBAARN,QAAQ;AAAA;AAAA;AAAA,KAAd,CANkD,CAalD;AAEA;AAEA;AACA;AACA;;;AAEAjB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,eAAZ;AAA4B,IAAA,SAAS,EAAC,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD,CACE;AACA;AAFF;AAGE,IAAA,IAAI,EAAC,OAHP,CAIE;AAJF;AAKE,IAAA,KAAK,EAAE,CACL;AACE2B,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE,kDAFX;AAGEC,MAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,qBAAX;AAHX,KALK,CALT;AAgBE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,oBADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,GAAG,EAAE,MAHP;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADO,EAOP;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,KAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAPO,CAhBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAkCD;;cA7DuBtB,oB,sGACNV,U;;;;;;;;;;;0BAPZO,K;0BAMkBG,oB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport DataFieldTable from 'components/shared/DataFieldTable';\nimport useAxios, { configure } from 'axios-hooks';\nimport { Card } from 'antd';\nconst axios = require('axios').default;\n\nconfigure({\n  axios: axiosInstance,\n});\n\nexport default function AccedrationContainer(props) {\n  const history = useHistory();\n \n\n  const [accedrationValues, setAccedrationValues] = useState([])\n\n  const postData = async () => {\n    let token = JSON.parse(localStorage.getItem(\"currentSession\"))\n    // let user_id = token.id\n    // let user_role = token.role\n    let pdfData = await axios.get(`http://localhost:8888/api/v1/files/get_pdf_data/${user_id}/${user_role}`)\n    return pdfData\n  }\n  // const tableData = Object.values(entities).filter(typeEqualsTopic);\n\n  // const [{ data, loading, error }] = useAxios('/datafields?type=topic');\n\n  // if (error) {\n  //   history.push('/error/500');\n  // }\n\n  useEffect(() => {\n    // if (data) {\n    //   datafield.addMany(data);\n    // }\n  }, []);\n\n  return (\n    <Card title=\"Accreditation\" className=\"shadow-md rounded-md\">\n      <DataFieldTable\n        // data={error ? [] : tableData}\n        // store={datafield}\n        type=\"topic\"\n        // loading={loading}\n        rules={[\n          {\n            required: true,\n            message: 'Please enter a topic name',\n          },\n          {\n            required: true,\n            message: '\"Others\" is already reserved. It cannot be used.',\n            pattern: new RegExp(/^(?!(Others)$).+$/gm),\n          },\n        ]}\n        columns={[\n          {\n            title: 'Accreditation Name',\n            dataIndex: 'name',\n            key: 'name',\n            className: 'antd-col',\n          },\n          {\n            title: 'add',\n            dataIndex: 'add',\n            key: 'add',\n          },\n        ]}\n      />\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
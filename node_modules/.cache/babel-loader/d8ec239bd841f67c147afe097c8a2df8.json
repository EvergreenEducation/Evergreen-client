{"ast":null,"code":"import _objectSpread from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/devnineteen/Music/evergreen-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar importedWrapper = require('react-imported-component/wrapper');\n\nimport { imported } from \"react-imported-component\";\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Layout, Col } from 'antd';\nimport useAxios, { configure } from 'axios-hooks';\nimport PathwaysTable from 'components/pathway/PathwaysTable';\nimport PathwaysPdfTable from 'components/pathway/PathwayPdfTable';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport matchSorter from 'match-sorter';\nimport { SearchHeader, ProviderLogOutTopbar, FaPlusCircleButton } from 'components/shared';\nimport Provider from 'store/Provider';\n\nconst axios = require('axios').default;\n\nconst FormModal = imported(() => importedWrapper(\"imported_1ac18j9_component\", import('components/shared/FormModal')));\nconst PathwayCreationContainer = imported(() => importedWrapper(\"imported_-1rv77bh_component\", import('components/pathway/PathwayCreationContainer')));\nconst PathwayUpdateModal = imported(() => importedWrapper(\"imported_4bicrf_component\", import('components/pathway/PathwayUpdateModal')));\nconfigure({\n  axios: axiosInstance\n});\nconst Content = Layout.Content;\nexport default function PathwayContainer({\n  role,\n  providerId,\n  openProviderUpdateModal\n}) {\n  console.log(\"shubham\", providerId);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchString = _useState2[0],\n        setSearchString = _useState2[1];\n\n  const history = useHistory();\n\n  const _useState3 = useState({\n    pathwayCreation: false,\n    pathwayUpdate: false // pathwayDelete: false\n\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modalStates = _useState4[0],\n        setModalStates = _useState4[1]; // const [pathwayDelete, setPathwayDelete] = useState(false)\n\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedPathway = _useState6[0],\n        setSelectedPathway = _useState6[1];\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield,\n        providerStore = _useGlobalStore.provider,\n        pathwayStore = _useGlobalStore.pathway,\n        offerStore = _useGlobalStore.offer;\n\n  let getPathwaysUrl = role === 'provider' ? `/pathways?scope=with_details&provider_id=${providerId}` : '/pathways?scope=with_details';\n\n  const _useAxios = useAxios(getPathwaysUrl),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        getPathways = _useAxios2$.data,\n        getPathwaysError = _useAxios2$.error;\n\n  const _useAxios3 = useAxios('/datafields'),\n        _useAxios4 = _slicedToArray(_useAxios3, 1),\n        _useAxios4$ = _useAxios4[0],\n        getDataFields = _useAxios4$.data,\n        getDataFieldsError = _useAxios4$.error;\n\n  const _useAxios5 = useAxios('/offers'),\n        _useAxios6 = _slicedToArray(_useAxios5, 1),\n        _useAxios6$ = _useAxios6[0],\n        getOffers = _useAxios6$.data,\n        getOffersError = _useAxios6$.error;\n\n  let getProviderUrl = role === 'provider' ? `/providers/${providerId}` : '/providers';\n\n  const _useAxios7 = useAxios(getProviderUrl),\n        _useAxios8 = _slicedToArray(_useAxios7, 1),\n        getProviders = _useAxios8[0].data;\n\n  const getPdfData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (pathway) {\n      let user_id = pathway.id;\n      let pdfData = yield axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_pathway`, {\n        user_id\n      });\n      return pdfData;\n    });\n\n    return function getPdfData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const openAndPopulateUpdateModal = pathway => {\n    setSelectedPathway(pathway);\n    setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayUpdate: true\n    }));\n  };\n\n  let pathwayDelete = false;\n\n  const openAndDeleteModal = pathway => {\n    // setPathwayDelete(true);\n    pathwayDelete = true;\n\n    if (pathwayDelete) {\n      pathwayStore.removeOne(pathway);\n      getPdfData(pathway).then(resp => {\n        console.log(resp, \"resposssssssssss\");\n        debugger;\n        getPathwayListData();\n      }).catch(error => {\n        console.log(error, \"errorr\");\n      });\n    }\n  };\n\n  if (getPathwaysError || getOffersError || getDataFieldsError) {\n    history.push('/error/500');\n  } // console.log(\"modalStates\",modalStates.pathwayDelete)\n\n\n  useEffect(() => {\n    if (getPathways) {\n      pathwayStore.addMany(getPathways);\n    }\n\n    if (getOffers) {\n      offerStore.addMany(getOffers);\n    }\n\n    if (getProviders) {\n      if (role === 'provider') {\n        providerStore.addOne(getProviders);\n      } else {\n        providerStore.addMany(getProviders);\n      }\n    }\n\n    if (getDataFields) {\n      datafield.addMany(getDataFields);\n    }\n  }, [getPathways, getOffers, getProviders, getDataFields]);\n\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\n    return matchSorter(data, searchString, {\n      keys\n    });\n  };\n\n  const handleDataSearch = searchVal => {\n    return setSearchString(searchVal);\n  };\n\n  let showData = handleDataAfterSearch(Object.values(pathwayStore.entities));\n\n  if (role === 'provider') {\n    showData = showData.filter(p => {\n      return p.provider_id === providerId;\n    });\n  }\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        getPathwayList = _useState8[0],\n        setPathwayList = _useState8[1]; // Calling of pathway list api\n\n\n  function getPathwayListData() {\n    pathwayListData().then(res => {\n      setPathwayList(res.data);\n    }).catch(err => {\n      console.log('errr', err);\n    });\n  } // Api of get offer list\n\n\n  const pathwayListData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      let Data = yield axios.get(`${process.env.REACT_APP_API_URL}/api/v1/pathways?scope=with_details`);\n      return Data;\n    });\n\n    return function pathwayListData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    getPathwayListData();\n  }, []);\n  console.log('getPathwayList', getPathwayList);\n  return /*#__PURE__*/React.createElement(Layout, {\n    className: \"bg-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProviderLogOutTopbar, {\n    role: role,\n    onClick: openProviderUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchHeader, {\n    title: \"PATHWAYS\",\n    onSearch: handleDataSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircleButton, {\n    onMouseEnter: () => {\n      FormModal.preload();\n      PathwayCreationContainer.preload();\n    },\n    onClick: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayCreation: true\n    })),\n    text: \"PATHWAY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    className: \"p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PathwaysTable, {\n    datafields: datafield.entities,\n    providers: providerStore.entities // data={showData}\n    ,\n    data: getPathwayList,\n    handleUpdateModal: openAndPopulateUpdateModal,\n    handleDeleteModal: openAndDeleteModal,\n    offers: offerStore.entities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    title: \"New Pathway\",\n    visible: modalStates.pathwayCreation,\n    FormComponent: PathwayCreationContainer,\n    role: role,\n    providerId: providerId,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayCreation: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PathwayUpdateModal, {\n    pathway: selectedPathway,\n    visible: modalStates.pathwayUpdate,\n    onCancel: () => setModalStates(_objectSpread(_objectSpread({}, modalStates), {}, {\n      pathwayUpdate: false\n    })),\n    pathwayStore: pathwayStore,\n    role: role,\n    providers: Object.values(providerStore.entities),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }))));\n}\n\n__signature__(PathwayContainer, \"useState{[searchString, setSearchString]('')}\\nuseHistory{history}\\nuseState{[modalStates, setModalStates]({\\r\\n    pathwayCreation: false,\\r\\n    pathwayUpdate: false,\\r\\n    // pathwayDelete: false\\r\\n  })}\\nuseState{[selectedPathway, setSelectedPathway]({})}\\nuseGlobalStore{{\\r\\n    datafield,\\r\\n    provider: providerStore,\\r\\n    pathway: pathwayStore,\\r\\n    offer: offerStore,\\r\\n  }}\\nuseAxios{[{ data: getPathways, error: getPathwaysError }]}\\nuseAxios{[{ data: getDataFields, error: getDataFieldsError }]}\\nuseAxios{[{ data: getOffers, error: getOffersError }]}\\nuseAxios{[{ data: getProviders }]}\\nuseEffect{}\\nuseState{[getPathwayList,setPathwayList]}\\nuseEffect{}\", () => [useHistory, useGlobalStore, useAxios, useAxios, useAxios, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(axios, \"axios\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(FormModal, \"FormModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayCreationContainer, \"PathwayCreationContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayUpdateModal, \"PathwayUpdateModal\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(Content, \"Content\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n  reactHotLoader.register(PathwayContainer, \"PathwayContainer\", \"/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/src/components/pathway/PathwayContainer.js"],"names":["React","useEffect","useState","useHistory","Card","Layout","Col","useAxios","configure","PathwaysTable","PathwaysPdfTable","useGlobalStore","axiosInstance","matchSorter","SearchHeader","ProviderLogOutTopbar","FaPlusCircleButton","Provider","axios","require","default","FormModal","imported","PathwayCreationContainer","PathwayUpdateModal","Content","PathwayContainer","role","providerId","openProviderUpdateModal","console","log","searchString","setSearchString","history","pathwayCreation","pathwayUpdate","modalStates","setModalStates","selectedPathway","setSelectedPathway","datafield","providerStore","provider","pathwayStore","pathway","offerStore","offer","getPathwaysUrl","getPathways","data","getPathwaysError","error","getDataFields","getDataFieldsError","getOffers","getOffersError","getProviderUrl","getProviders","getPdfData","user_id","id","pdfData","post","process","env","REACT_APP_API_URL","openAndPopulateUpdateModal","pathwayDelete","openAndDeleteModal","removeOne","then","resp","getPathwayListData","catch","push","addMany","addOne","handleDataAfterSearch","keys","handleDataSearch","searchVal","showData","Object","values","entities","filter","p","provider_id","getPathwayList","setPathwayList","pathwayListData","res","err","Data","get","preload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { imported } from 'react-imported-component/macro';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, Layout, Col } from 'antd';\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport PathwaysTable from 'components/pathway/PathwaysTable';\r\nimport PathwaysPdfTable from 'components/pathway/PathwayPdfTable'\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport matchSorter from 'match-sorter';\r\nimport {\r\n  SearchHeader,\r\n  ProviderLogOutTopbar,\r\n  FaPlusCircleButton,\r\n} from 'components/shared';\r\nimport Provider from 'store/Provider';\r\nconst axios = require('axios').default;\r\n\r\nconst FormModal = imported(() => import('components/shared/FormModal'));\r\n\r\nconst PathwayCreationContainer = imported(() =>\r\n  import('components/pathway/PathwayCreationContainer')\r\n);\r\n\r\nconst PathwayUpdateModal = imported(() =>\r\n  import('components/pathway/PathwayUpdateModal')\r\n);\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default function PathwayContainer({\r\n  role,\r\n  providerId,\r\n  openProviderUpdateModal,\r\n}) {\r\n  console.log(\"shubham\",providerId)\r\n  const [searchString, setSearchString] = useState('');\r\n  const history = useHistory();\r\n  const [modalStates, setModalStates] = useState({\r\n    pathwayCreation: false,\r\n    pathwayUpdate: false,\r\n    // pathwayDelete: false\r\n  });\r\n\r\n  // const [pathwayDelete, setPathwayDelete] = useState(false)\r\n\r\n  const [selectedPathway, setSelectedPathway] = useState({});\r\n  const {\r\n    datafield,\r\n    provider: providerStore,\r\n    pathway: pathwayStore,\r\n    offer: offerStore,\r\n  } = useGlobalStore();\r\n\r\n  let getPathwaysUrl =\r\n    role === 'provider'\r\n      ? `/pathways?scope=with_details&provider_id=${providerId}`\r\n      : '/pathways?scope=with_details';\r\n\r\n  const [{ data: getPathways, error: getPathwaysError }] = useAxios(\r\n    getPathwaysUrl\r\n  );\r\n\r\n  const [{ data: getDataFields, error: getDataFieldsError }] = useAxios(\r\n    '/datafields'\r\n  );\r\n\r\n  const [{ data: getOffers, error: getOffersError }] = useAxios('/offers');\r\n\r\n  let getProviderUrl =\r\n    role === 'provider' ? `/providers/${providerId}` : '/providers';\r\n\r\n  const [{ data: getProviders }] = useAxios(getProviderUrl);\r\n\r\n  const getPdfData = async (pathway) => {\r\n    let user_id = pathway.id\r\n    let pdfData = await axios.post(`${process.env.REACT_APP_API_URL}/api/v1/files/delete_pathway`, {\r\n      user_id\r\n    })\r\n    return pdfData\r\n  }\r\n\r\n  const openAndPopulateUpdateModal = (pathway) => {\r\n    setSelectedPathway(pathway);\r\n    setModalStates({ ...modalStates, pathwayUpdate: true });\r\n  };\r\n\r\n  let pathwayDelete =  false\r\n  const openAndDeleteModal = (pathway) => {\r\n      // setPathwayDelete(true);\r\n      pathwayDelete =true\r\n    if (pathwayDelete) {\r\n      pathwayStore.removeOne(pathway)\r\n      getPdfData(pathway).then(resp => {\r\n        console.log(resp, \"resposssssssssss\")\r\n        debugger\r\n        getPathwayListData();\r\n      }).catch(error => {\r\n        console.log(error, \"errorr\")\r\n      })\r\n    }\r\n  };\r\n\r\n  if (getPathwaysError || getOffersError || getDataFieldsError) {\r\n    history.push('/error/500');\r\n  }\r\n  // console.log(\"modalStates\",modalStates.pathwayDelete)\r\n  useEffect(() => {\r\n    if (getPathways) {\r\n      pathwayStore.addMany(getPathways);\r\n    }\r\n    if (getOffers) {\r\n      offerStore.addMany(getOffers);\r\n    }\r\n    if (getProviders) {\r\n      if (role === 'provider') {\r\n        providerStore.addOne(getProviders);\r\n      } else {\r\n        providerStore.addMany(getProviders);\r\n      }\r\n    }\r\n    if (getDataFields) {\r\n      datafield.addMany(getDataFields);\r\n    }\r\n  }, [getPathways, getOffers, getProviders, getDataFields]);\r\n\r\n  const handleDataAfterSearch = (data, keys = ['name', 'keywords']) => {\r\n    return matchSorter(data, searchString, { keys });\r\n  };\r\n\r\n  const handleDataSearch = (searchVal) => {\r\n    return setSearchString(searchVal);\r\n  };\r\n\r\n  let showData = handleDataAfterSearch(Object.values(pathwayStore.entities));\r\n\r\n  if (role === 'provider') {\r\n    showData = showData.filter((p) => {\r\n      return p.provider_id === providerId;\r\n    });\r\n  }\r\n\r\n  const [getPathwayList,setPathwayList]=useState();\r\n  \r\n  // Calling of pathway list api\r\n  function getPathwayListData(){\r\n    pathwayListData().then(res=>{\r\n      setPathwayList(res.data)\r\n    }).catch(err=>{\r\n      console.log('errr',err)\r\n    })\r\n  }\r\n\r\n// Api of get offer list\r\n  const pathwayListData = async () => {\r\n    let Data = await axios.get(`${process.env.REACT_APP_API_URL}/api/v1/pathways?scope=with_details`)\r\n    return Data\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getPathwayListData()\r\n  },[])\r\n\r\n\r\n  console.log('getPathwayList',getPathwayList)\r\n\r\n  return (\r\n    <Layout className=\"bg-transparent\">\r\n      <ProviderLogOutTopbar role={role} onClick={openProviderUpdateModal}>\r\n        <Col span={14}>\r\n          <SearchHeader title=\"PATHWAYS\" onSearch={handleDataSearch}>\r\n            <FaPlusCircleButton\r\n              onMouseEnter={() => {\r\n                FormModal.preload();\r\n                PathwayCreationContainer.preload();\r\n              }}\r\n              onClick={() =>\r\n                setModalStates({ ...modalStates, pathwayCreation: true })\r\n              }\r\n              text=\"PATHWAY\"\r\n            />\r\n          </SearchHeader>\r\n        </Col>\r\n      </ProviderLogOutTopbar>\r\n      <Content className=\"p-6\">\r\n        <Card className=\"shadow-md rounded-md\">\r\n          <PathwaysTable\r\n            datafields={datafield.entities}\r\n            providers={providerStore.entities}\r\n            // data={showData}\r\n            data={getPathwayList}\r\n            handleUpdateModal={openAndPopulateUpdateModal}\r\n            handleDeleteModal={openAndDeleteModal}\r\n            offers={offerStore.entities}\r\n          />\r\n          {/* <PathwaysPdfTable\r\n           datafields={datafield.entities}\r\n           providers={providerStore.entities}\r\n           data={showData}\r\n           handleUpdateModal={openAndPopulateUpdateModal}\r\n           offers={offerStore.entities} /> */}\r\n          <FormModal\r\n            title=\"New Pathway\"\r\n            visible={modalStates.pathwayCreation}\r\n            FormComponent={PathwayCreationContainer}\r\n            role={role}\r\n            providerId={providerId}\r\n            onCancel={() =>\r\n              setModalStates({ ...modalStates, pathwayCreation: false })\r\n            }\r\n          />\r\n          <PathwayUpdateModal\r\n            pathway={selectedPathway}\r\n            visible={modalStates.pathwayUpdate}\r\n            onCancel={() =>\r\n              setModalStates({ ...modalStates, pathwayUpdate: false })\r\n            }\r\n            pathwayStore={pathwayStore}\r\n            role={role}\r\n            providers={Object.values(providerStore.entities)}\r\n          />\r\n        </Card>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar Translator = require('@uppy/utils/lib/Translator');\n\nvar ee = require('namespace-emitter');\n\nvar cuid = require('cuid');\n\nvar throttle = require('lodash.throttle');\n\nvar prettierBytes = require('@transloadit/prettier-bytes');\n\nvar match = require('mime-match');\n\nvar DefaultStore = require('@uppy/store-default');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar supportsUploadProgress = require('./supportsUploadProgress');\n\nvar _require = require('./loggers'),\n    justErrorsLogger = _require.justErrorsLogger,\n    debugLogger = _require.debugLogger;\n\nvar Plugin = require('./Plugin'); // Exported from here.\n\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n\n  function RestrictionError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\n\nvar Uppy = /*#__PURE__*/function () {\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts — Uppy options\n   */\n  function Uppy(opts) {\n    var _this2 = this;\n\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: 'This file exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile, files) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects — we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file, and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this._calculateProgress = throttle(this._calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      }\n    });\n    this._storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this2.emit('state-update', prevState, nextState, patch);\n\n      _this2.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n\n    this._addListeners(); // Re-enable if we’ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n\n  var _proto = Uppy.prototype;\n\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  ;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  ;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  ;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   */\n  ;\n  /**\n   * Shorthand to set state for a specific file.\n   */\n\n\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n\n    this.i18nInit();\n\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    }\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n\n    var files = _extends({}, this.getState().files);\n\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n\n    var updatedFiles = _extends({}, this.getState().files);\n\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  ;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */\n  ;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n        files = _this$getState.files;\n\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto._checkMinNumberOfFiles = function _checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} files Object of IDs → files already added\n   * @param {object} file object to check\n   * @private\n   */\n  ;\n\n  _proto._checkRestrictions = function _checkRestrictions(files, file) {\n    var _this$opts$restrictio = this.opts.restrictions,\n        maxFileSize = _this$opts$restrictio.maxFileSize,\n        minFileSize = _this$opts$restrictio.minFileSize,\n        maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n        allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n\n    if (maxNumberOfFiles) {\n      if (Object.keys(files).length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // is this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n\n        if (type[0] === '.') {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n\n        return false;\n      });\n\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n\n    if (maxFileSize && file.data.size != null) {\n      if (file.data.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize)\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n\n    if (minFileSize && file.data.size != null) {\n      if (file.data.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if it’s a restriction error\n   *\n   * @param {object | string} err — Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] — Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] — File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] — Errors shouldn’t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  ;\n\n  _proto._showOrLogErrorAndThrow = function _showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$showInformer = _ref.showInformer,\n        showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n        _ref$file = _ref.file,\n        file = _ref$file === void 0 ? null : _ref$file,\n        _ref$throwErr = _ref.throwErr,\n        throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n\n    if (details) {\n      logMessageWithDetails += ' ' + details;\n    }\n\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', 5000);\n    }\n\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n\n  _proto._assertNewUploadAllowed = function _assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n        allowNewUpload = _this$getState2.allowNewUpload;\n\n    if (allowNewUpload === false) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  ;\n\n  _proto._checkAndCreateFileStateObject = function _checkAndCreateFileStateObject(files, file) {\n    var fileType = getFileType(file);\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n\n    if (onBeforeFileAddedResult === false) {\n      // Don’t show UI info for this error, as it should be done by the developer\n      this._showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n\n    var fileName;\n\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + '.' + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n\n    if (files[fileID]) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n\n    try {\n      this._checkRestrictions(files, newFile);\n    } catch (err) {\n      this._showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto._startIfAutoProceed = function _startIfAutoProceed() {\n    var _this3 = this;\n\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this3.scheduledAutoProceed = null;\n\n        _this3.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this3.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n\n    this._assertNewUploadAllowed(file);\n\n    var _this$getState3 = this.getState(),\n        files = _this$getState3.files;\n\n    var newFile = this._checkAndCreateFileStateObject(files, file);\n\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n\n    this._startIfAutoProceed();\n\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * This cuts some corners for performance, so should typically only be used in cases where there may be a lot of files.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified. This is good for UI plugins, but not for programmatic use. Programmatic users should usually still use `addFile()` on individual files.\n   */\n  ;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this4 = this;\n\n    this._assertNewUploadAllowed(); // create a copy of the files object only once\n\n\n    var files = _extends({}, this.getState().files);\n\n    var newFiles = [];\n    var errors = [];\n\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this._checkAndCreateFileStateObject(files, fileDescriptors[i]);\n\n        newFiles.push(newFile);\n        files[newFile.id] = newFile;\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this4.emit('file-added', newFile);\n    });\n\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this4.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n\n    if (newFiles.length > 0) {\n      this._startIfAutoProceed();\n    }\n\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', 5000);\n      var err = new Error(message);\n      err.errors = errors;\n      throw err;\n    }\n  };\n\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this5 = this;\n\n    var _this$getState4 = this.getState(),\n        files = _this$getState4.files,\n        currentUploads = _this$getState4.currentUploads;\n\n    var updatedFiles = _extends({}, files);\n\n    var updatedUploads = _extends({}, currentUploads);\n\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n\n    var uploadsToRemove = [];\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        uploadsToRemove.push(uploadID);\n        return;\n      }\n\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    uploadsToRemove.forEach(function (uploadID) {\n      delete updatedUploads[uploadID];\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads!\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n    }\n\n    this.setState(stateUpdate);\n\n    this._calculateTotalProgress();\n\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this5.emit('file-removed', removedFiles[fileID], reason);\n    });\n\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n\n    this.removeFiles([fileID], reason);\n  };\n\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return;\n    }\n\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n\n    var uploadID = this._createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n\n    return this._runUpload(uploadID);\n  };\n\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n\n    var _this$getState5 = this.getState(),\n        files = _this$getState5.files;\n\n    var fileIDs = Object.keys(files);\n\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null\n    });\n  };\n\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n\n    var uploadID = this._createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n\n    return this._runUpload(uploadID);\n  };\n\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n\n  _proto._calculateProgress = function _calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n\n    var canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n\n    this._calculateTotalProgress();\n  };\n\n  _proto._calculateTotalProgress = function _calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  ;\n\n  _proto._addListeners = function _addListeners() {\n    var _this6 = this;\n\n    this.on('error', function (error) {\n      var errorMsg = 'Unknown error';\n\n      if (error.message) {\n        errorMsg = error.message;\n      }\n\n      if (error.details) {\n        errorMsg += ' ' + error.details;\n      }\n\n      _this6.setState({\n        error: errorMsg\n      });\n    });\n    this.on('upload-error', function (file, error, response) {\n      var errorMsg = 'Unknown error';\n\n      if (error.message) {\n        errorMsg = error.message;\n      }\n\n      if (error.details) {\n        errorMsg += ' ' + error.details;\n      }\n\n      _this6.setFileState(file.id, {\n        error: errorMsg,\n        response: response\n      });\n\n      _this6.setState({\n        error: error.message\n      });\n\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n\n        if (error.details) {\n          newError.details += ' ' + error.details;\n        }\n\n        newError.message = _this6.i18n('failedToUpload', {\n          file: file.name\n        });\n\n        _this6._showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this6._showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this6.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file, upload) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this._calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var currentProgress = _this6.getFile(file.id).progress;\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      });\n\n      _this6._calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, _this6.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this6.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n\n      _this6.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, _this6.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this6.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is upload…fully complete…rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this6.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this6._calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this6.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this6.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this6.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n\n    var existsPluginAlready = this.getPlugin(pluginId);\n\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n\n      throw new Error(_msg);\n    }\n\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  ;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  ;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this7 = this;\n\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this7.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  ;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n\n    var list = this.plugins[instance.type].slice();\n    var index = list.indexOf(instance);\n\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n\n    var updatedState = this.getState();\n    delete updatedState.plugins[instance.id];\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  ;\n\n  _proto.close = function close() {\n    var _this8 = this;\n\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n\n    this._storeUnsubscribe();\n\n    this.iteratePlugins(function (plugin) {\n      _this8.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n  ;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (duration === void 0) {\n      duration = 3000;\n    }\n\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  ;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n\n      case 'warning':\n        logger.warn(message);\n        break;\n\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  ;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */\n  ;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this._removeUpload(uploadID);\n\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n\n    return this._runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  ;\n\n  _proto._createUpload = function _createUpload(fileIDs, opts) {\n    var _extends4;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _opts = opts,\n        _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n        forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n\n    var _this$getState6 = this.getState(),\n        allowNewUpload = _this$getState6.allowNewUpload,\n        currentUploads = _this$getState6.currentUploads;\n\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends4 = {}, _extends4[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends4))\n    });\n    return uploadID;\n  };\n\n  _proto._getUpload = function _getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n        currentUploads = _this$getState7.currentUploads;\n\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  ;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends5;\n\n    if (!this._getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n\n    var currentUploads = this.getState().currentUploads;\n\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = currentUpload, _extends5))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  ;\n\n  _proto._removeUpload = function _removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  ;\n\n  _proto._runUpload = function _runUpload(uploadID) {\n    var _this9 = this;\n\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n\n      lastStep = lastStep.then(function () {\n        var _extends6;\n\n        var _this9$getState = _this9.getState(),\n            currentUploads = _this9$getState.currentUploads;\n\n        var currentUpload = currentUploads[uploadID];\n\n        if (!currentUpload) {\n          return;\n        }\n\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n\n        _this9.setState({\n          currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = updatedUpload, _extends6))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function (result) {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this9.emit('error', err, uploadID);\n\n      _this9._removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this9$getState2 = _this9.getState(),\n          currentUploads = _this9$getState2.currentUploads;\n\n      var currentUpload = currentUploads[uploadID];\n\n      if (!currentUpload) {\n        return;\n      }\n\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this9.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n\n      _this9.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this9$getState3 = _this9.getState(),\n          currentUploads = _this9$getState3.currentUploads;\n\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n\n      _this9.emit('complete', result);\n\n      _this9._removeUpload(uploadID);\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this9.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.upload = function upload() {\n    var _this10 = this;\n\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n\n    var files = this.getState().files;\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n\n    return Promise.resolve().then(function () {\n      return _this10._checkMinNumberOfFiles(files);\n    }).catch(function (err) {\n      _this10._showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this10$getState = _this10.getState(),\n          currentUploads = _this10$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this10.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n\n      var uploadID = _this10._createUpload(waitingFileIDs);\n\n      return _this10._runUpload(uploadID);\n    }).catch(function (err) {\n      _this10._showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      return this.getState();\n    }\n  }]);\n\n  return Uppy;\n}();\n\nUppy.VERSION = \"1.13.1\";\n\nmodule.exports = function (opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;","map":{"version":3,"sources":["/home/devnineteen/Music/evergreen-frontend/node_modules/@uppy/core/lib/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_wrapNativeSuper","Class","_cache","Map","undefined","_isNativeFunction","TypeError","has","get","set","Wrapper","_construct","_getPrototypeOf","value","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","push","Function","bind","instance","sham","Proxy","Date","toString","e","fn","indexOf","o","p","setPrototypeOf","getPrototypeOf","Translator","require","ee","cuid","throttle","prettierBytes","match","DefaultStore","getFileType","getFileNameAndExtension","generateFileID","supportsUploadProgress","_require","justErrorsLogger","debugLogger","Plugin","RestrictionError","_Error","_this","_len","Array","_key","concat","isRestriction","Error","Uppy","opts","_this2","defaultLocale","strings","addBulkFilesFailed","youCanOnlyUploadX","youHaveToAtLeastSelectX","exceedsSize2","exceedsSize","inferiorSize","youCanOnlyUploadFileTypes","noNewAlreadyUploading","noDuplicates","companionError","companionUnauthorizeHint","failedToUpload","noInternetConnection","connectedToInternet","noFilesFound","selectX","selectAllFilesFromFolderNamed","unselectAllFilesFromFolderNamed","selectFileNamed","unselectFileNamed","openFolderNamed","cancel","logOut","filter","resetFilter","loading","authenticateWithTitle","authenticateWith","emptyFolderAdded","folderAdded","defaultOptions","id","autoProceed","allowMultipleUploads","debug","restrictions","maxFileSize","minFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","meta","onBeforeFileAdded","currentFile","files","onBeforeUpload","store","logger","log","VERSION","isArray","i18nInit","plugins","getState","getPlugin","setFileMeta","setFileState","info","hideInfo","addFile","removeFile","pauseResume","_calculateProgress","leading","trailing","updateOnlineStatus","resetProgress","pauseAll","resumeAll","retryAll","cancelAll","retryUpload","upload","emitter","on","off","once","emit","preProcessors","uploaders","postProcessors","setState","currentUploads","allowNewUpload","capabilities","uploadProgress","individualCancellation","resumableUploads","totalProgress","isHidden","type","message","_storeUnsubscribe","subscribe","prevState","nextState","patch","updateAll","window","_addListeners","_proto","event","callback","state","iteratePlugins","plugin","update","fileID","_extends2","translator","locale","i18n","translate","i18nArray","translateArray","setOptions","newOpts","setMeta","defaultProgress","percentage","bytesUploaded","uploadComplete","uploadStarted","updatedFiles","keys","forEach","updatedFile","progress","addPreProcessor","removePreProcessor","splice","addPostProcessor","removePostProcessor","addUploader","removeUploader","data","updatedMeta","newMeta","getFile","getFiles","_this$getState","map","_checkMinNumberOfFiles","smart_count","_checkRestrictions","file","_this$opts$restrictio","isCorrectFileType","some","replace","extension","toLowerCase","substr","allowedFileTypesString","join","types","size","backwardsCompat","_showOrLogErrorAndThrow","err","_temp","_ref","_ref$showInformer","showInformer","_ref$file","_ref$throwErr","throwErr","details","logMessageWithDetails","_assertNewUploadAllowed","_this$getState2","_checkAndCreateFileStateObject","fileType","onBeforeFileAddedResult","fileName","name","split","fileExtension","isRemote","isFinite","newFile","bytesTotal","remote","preview","_startIfAutoProceed","_this3","scheduledAutoProceed","setTimeout","catch","stack","_extends3","_this$getState3","addFiles","fileDescriptors","_this4","newFiles","errors","subError","removeFiles","fileIDs","reason","_this5","_this$getState4","updatedUploads","removedFiles","fileIsNotRemoved","uploadFileID","uploadsToRemove","uploadID","newFileIDs","stateUpdate","error","_calculateTotalProgress","removedFileIDs","wasPaused","isPaused","inProgressUpdatedFiles","filesToRetry","Promise","resolve","successful","failed","_createUpload","forceAllowNewUpload","_runUpload","_this$getState5","reset","canHavePercentage","Math","round","inProgress","preprocess","postprocess","sizedFiles","unsizedFiles","progressMax","currentProgress","reduce","acc","_totalProgress","totalSize","averageSize","uploadedSize","_this6","errorMsg","response","newError","now","uploadResp","uploadURL","addEventListener","online","navigator","onLine","wasOffline","getID","use","msg","pluginId","existsPluginAlready","_msg","install","foundPlugin","method","_this7","pluginType","removePlugin","uninstall","list","slice","index","updatedState","close","_this8","duration","isComplexMessage","clearTimeout","infoTimeoutID","newInfo","warn","run","restore","_removeUpload","reject","_extends4","_opts","_opts$forceAllowNewUp","_this$getState6","step","result","_getUpload","_this$getState7","addResultData","_extends5","currentUpload","_this9","uploadData","restoreStep","steps","lastStep","then","_extends6","_this9$getState","updatedUpload","_this9$getState2","_this9$getState3","_this10","uploader","onBeforeUploadResult","_this10$getState","currentlyUploadingFiles","prev","curr","waitingFileIDs","module","exports"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Translator = require('@uppy/utils/lib/Translator');\n\nvar ee = require('namespace-emitter');\n\nvar cuid = require('cuid');\n\nvar throttle = require('lodash.throttle');\n\nvar prettierBytes = require('@transloadit/prettier-bytes');\n\nvar match = require('mime-match');\n\nvar DefaultStore = require('@uppy/store-default');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar supportsUploadProgress = require('./supportsUploadProgress');\n\nvar _require = require('./loggers'),\n    justErrorsLogger = _require.justErrorsLogger,\n    debugLogger = _require.debugLogger;\n\nvar Plugin = require('./Plugin'); // Exported from here.\n\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n\n  function RestrictionError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\n\nvar Uppy = /*#__PURE__*/function () {\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts — Uppy options\n   */\n  function Uppy(opts) {\n    var _this2 = this;\n\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: 'This file exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile, files) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects — we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file, and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this._calculateProgress = throttle(this._calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      }\n    });\n    this._storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this2.emit('state-update', prevState, nextState, patch);\n\n      _this2.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n\n    this._addListeners(); // Re-enable if we’ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n\n  var _proto = Uppy.prototype;\n\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  ;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  ;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  ;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   */\n  ;\n\n  /**\n   * Shorthand to set state for a specific file.\n   */\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n\n    this.i18nInit();\n\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    }\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n\n    var files = _extends({}, this.getState().files);\n\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n\n    var updatedFiles = _extends({}, this.getState().files);\n\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  ;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */\n  ;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n        files = _this$getState.files;\n\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto._checkMinNumberOfFiles = function _checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} files Object of IDs → files already added\n   * @param {object} file object to check\n   * @private\n   */\n  ;\n\n  _proto._checkRestrictions = function _checkRestrictions(files, file) {\n    var _this$opts$restrictio = this.opts.restrictions,\n        maxFileSize = _this$opts$restrictio.maxFileSize,\n        minFileSize = _this$opts$restrictio.minFileSize,\n        maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n        allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n\n    if (maxNumberOfFiles) {\n      if (Object.keys(files).length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // is this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n\n        if (type[0] === '.') {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n\n        return false;\n      });\n\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n\n    if (maxFileSize && file.data.size != null) {\n      if (file.data.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize)\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n\n    if (minFileSize && file.data.size != null) {\n      if (file.data.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if it’s a restriction error\n   *\n   * @param {object | string} err — Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] — Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] — File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] — Errors shouldn’t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  ;\n\n  _proto._showOrLogErrorAndThrow = function _showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$showInformer = _ref.showInformer,\n        showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n        _ref$file = _ref.file,\n        file = _ref$file === void 0 ? null : _ref$file,\n        _ref$throwErr = _ref.throwErr,\n        throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n\n    if (details) {\n      logMessageWithDetails += ' ' + details;\n    }\n\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', 5000);\n    }\n\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n\n  _proto._assertNewUploadAllowed = function _assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n        allowNewUpload = _this$getState2.allowNewUpload;\n\n    if (allowNewUpload === false) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  ;\n\n  _proto._checkAndCreateFileStateObject = function _checkAndCreateFileStateObject(files, file) {\n    var fileType = getFileType(file);\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n\n    if (onBeforeFileAddedResult === false) {\n      // Don’t show UI info for this error, as it should be done by the developer\n      this._showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n\n    var fileName;\n\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + '.' + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n\n    if (files[fileID]) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n\n    try {\n      this._checkRestrictions(files, newFile);\n    } catch (err) {\n      this._showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto._startIfAutoProceed = function _startIfAutoProceed() {\n    var _this3 = this;\n\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this3.scheduledAutoProceed = null;\n\n        _this3.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this3.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n\n    this._assertNewUploadAllowed(file);\n\n    var _this$getState3 = this.getState(),\n        files = _this$getState3.files;\n\n    var newFile = this._checkAndCreateFileStateObject(files, file);\n\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n\n    this._startIfAutoProceed();\n\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * This cuts some corners for performance, so should typically only be used in cases where there may be a lot of files.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified. This is good for UI plugins, but not for programmatic use. Programmatic users should usually still use `addFile()` on individual files.\n   */\n  ;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this4 = this;\n\n    this._assertNewUploadAllowed(); // create a copy of the files object only once\n\n\n    var files = _extends({}, this.getState().files);\n\n    var newFiles = [];\n    var errors = [];\n\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this._checkAndCreateFileStateObject(files, fileDescriptors[i]);\n\n        newFiles.push(newFile);\n        files[newFile.id] = newFile;\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this4.emit('file-added', newFile);\n    });\n\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this4.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n\n    if (newFiles.length > 0) {\n      this._startIfAutoProceed();\n    }\n\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', 5000);\n      var err = new Error(message);\n      err.errors = errors;\n      throw err;\n    }\n  };\n\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this5 = this;\n\n    var _this$getState4 = this.getState(),\n        files = _this$getState4.files,\n        currentUploads = _this$getState4.currentUploads;\n\n    var updatedFiles = _extends({}, files);\n\n    var updatedUploads = _extends({}, currentUploads);\n\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n\n    var uploadsToRemove = [];\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        uploadsToRemove.push(uploadID);\n        return;\n      }\n\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    uploadsToRemove.forEach(function (uploadID) {\n      delete updatedUploads[uploadID];\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads!\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n    }\n\n    this.setState(stateUpdate);\n\n    this._calculateTotalProgress();\n\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this5.emit('file-removed', removedFiles[fileID], reason);\n    });\n\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n\n    this.removeFiles([fileID], reason);\n  };\n\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return;\n    }\n\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n\n    var uploadID = this._createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n\n    return this._runUpload(uploadID);\n  };\n\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n\n    var _this$getState5 = this.getState(),\n        files = _this$getState5.files;\n\n    var fileIDs = Object.keys(files);\n\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null\n    });\n  };\n\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n\n    var uploadID = this._createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n\n    return this._runUpload(uploadID);\n  };\n\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n\n  _proto._calculateProgress = function _calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n\n    var canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n\n    this._calculateTotalProgress();\n  };\n\n  _proto._calculateTotalProgress = function _calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  ;\n\n  _proto._addListeners = function _addListeners() {\n    var _this6 = this;\n\n    this.on('error', function (error) {\n      var errorMsg = 'Unknown error';\n\n      if (error.message) {\n        errorMsg = error.message;\n      }\n\n      if (error.details) {\n        errorMsg += ' ' + error.details;\n      }\n\n      _this6.setState({\n        error: errorMsg\n      });\n    });\n    this.on('upload-error', function (file, error, response) {\n      var errorMsg = 'Unknown error';\n\n      if (error.message) {\n        errorMsg = error.message;\n      }\n\n      if (error.details) {\n        errorMsg += ' ' + error.details;\n      }\n\n      _this6.setFileState(file.id, {\n        error: errorMsg,\n        response: response\n      });\n\n      _this6.setState({\n        error: error.message\n      });\n\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n\n        if (error.details) {\n          newError.details += ' ' + error.details;\n        }\n\n        newError.message = _this6.i18n('failedToUpload', {\n          file: file.name\n        });\n\n        _this6._showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this6._showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this6.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file, upload) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this._calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var currentProgress = _this6.getFile(file.id).progress;\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      });\n\n      _this6._calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, _this6.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this6.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n\n      _this6.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this6.setFileState(file.id, {\n        progress: _extends({}, _this6.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this6.getFile(file.id)) {\n        _this6.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this6.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is upload…fully complete…rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this6.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this6._calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this6.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this6.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this6.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n\n    var existsPluginAlready = this.getPlugin(pluginId);\n\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n\n      throw new Error(_msg);\n    }\n\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  ;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  ;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this7 = this;\n\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this7.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  ;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n\n    var list = this.plugins[instance.type].slice();\n    var index = list.indexOf(instance);\n\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n\n    var updatedState = this.getState();\n    delete updatedState.plugins[instance.id];\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  ;\n\n  _proto.close = function close() {\n    var _this8 = this;\n\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n\n    this._storeUnsubscribe();\n\n    this.iteratePlugins(function (plugin) {\n      _this8.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n  ;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (duration === void 0) {\n      duration = 3000;\n    }\n\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  ;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n\n      case 'warning':\n        logger.warn(message);\n        break;\n\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  ;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */\n  ;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this._removeUpload(uploadID);\n\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n\n    return this._runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  ;\n\n  _proto._createUpload = function _createUpload(fileIDs, opts) {\n    var _extends4;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _opts = opts,\n        _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n        forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n\n    var _this$getState6 = this.getState(),\n        allowNewUpload = _this$getState6.allowNewUpload,\n        currentUploads = _this$getState6.currentUploads;\n\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends4 = {}, _extends4[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends4))\n    });\n    return uploadID;\n  };\n\n  _proto._getUpload = function _getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n        currentUploads = _this$getState7.currentUploads;\n\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  ;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends5;\n\n    if (!this._getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n\n    var currentUploads = this.getState().currentUploads;\n\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = currentUpload, _extends5))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  ;\n\n  _proto._removeUpload = function _removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  ;\n\n  _proto._runUpload = function _runUpload(uploadID) {\n    var _this9 = this;\n\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n\n      lastStep = lastStep.then(function () {\n        var _extends6;\n\n        var _this9$getState = _this9.getState(),\n            currentUploads = _this9$getState.currentUploads;\n\n        var currentUpload = currentUploads[uploadID];\n\n        if (!currentUpload) {\n          return;\n        }\n\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n\n        _this9.setState({\n          currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = updatedUpload, _extends6))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function (result) {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this9.emit('error', err, uploadID);\n\n      _this9._removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this9$getState2 = _this9.getState(),\n          currentUploads = _this9$getState2.currentUploads;\n\n      var currentUpload = currentUploads[uploadID];\n\n      if (!currentUpload) {\n        return;\n      }\n\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this9.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n\n      _this9.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this9$getState3 = _this9.getState(),\n          currentUploads = _this9$getState3.currentUploads;\n\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n\n      _this9.emit('complete', result);\n\n      _this9._removeUpload(uploadID);\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this9.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.upload = function upload() {\n    var _this10 = this;\n\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n\n    var files = this.getState().files;\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n\n    return Promise.resolve().then(function () {\n      return _this10._checkMinNumberOfFiles(files);\n    }).catch(function (err) {\n      _this10._showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this10$getState = _this10.getState(),\n          currentUploads = _this10$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this10.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n\n      var uploadID = _this10._createUpload(waitingFileIDs);\n\n      return _this10._runUpload(uploadID);\n    }).catch(function (err) {\n      _this10._showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      return this.getState();\n    }\n  }]);\n\n  return Uppy;\n}();\n\nUppy.VERSION = \"1.13.1\";\n\nmodule.exports = function (opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _slicedToArray from \"/home/devnineteen/Desktop/Projects/Evergreen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/TopicContainer.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useGlobalStore from 'store/GlobalStore';\nimport axiosInstance from 'services/AxiosInstance';\nimport DataFieldTable from 'components/shared/DataFieldTable';\nimport useAxios, { configure } from 'axios-hooks';\nimport { Card } from 'antd';\nconfigure({\n  axios: axiosInstance\n});\nexport default function TopicContainer(props) {\n  const history = useHistory();\n\n  const _useGlobalStore = useGlobalStore(),\n        datafield = _useGlobalStore.datafield;\n\n  const entities = datafield.entities,\n        typeEqualsTopic = datafield.typeEqualsTopic;\n  const tableData = Object.values(entities).filter(typeEqualsTopic);\n\n  const _useAxios = useAxios('/datafields?type=topic'),\n        _useAxios2 = _slicedToArray(_useAxios, 1),\n        _useAxios2$ = _useAxios2[0],\n        data = _useAxios2$.data,\n        loading = _useAxios2$.loading,\n        error = _useAxios2$.error;\n\n  if (error) {\n    history.push('/error/500');\n  }\n\n  useEffect(() => {\n    if (data) {\n      datafield.addMany(data);\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Card, {\n    title: \"Topics\",\n    className: \"shadow-md rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataFieldTable, {\n    data: error ? [] : tableData,\n    store: datafield,\n    type: \"topic\",\n    loading: loading,\n    rules: [{\n      required: true,\n      message: 'Please enter a topic name'\n    }, {\n      required: true,\n      message: '\"Others\" is already reserved. It cannot be used.',\n      pattern: new RegExp(/^(?!(Others)$).+$/gm)\n    }],\n    columns: [{\n      title: 'Cod',\n      dataIndex: 'id',\n      key: 'id',\n      className: 'antd-col'\n    }, {\n      title: 'Topic Name',\n      dataIndex: 'name',\n      key: 'name',\n      className: 'antd-col'\n    }, {\n      title: 'Topic Description',\n      dataIndex: 'description',\n      key: 'description',\n      className: 'antd-col'\n    }, {\n      title: 'add',\n      dataIndex: 'add',\n      key: 'add'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(TopicContainer, \"useHistory{history}\\nuseGlobalStore{{ datafield }}\\nuseAxios{[{ data, loading, error }]}\\nuseEffect{}\", () => [useHistory, useGlobalStore, useAxios]);\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TopicContainer, \"TopicContainer\", \"/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/TopicContainer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/devnineteen/Desktop/Projects/Evergreen-client/src/components/datafield/TopicContainer.js"],"names":["React","useEffect","useHistory","useGlobalStore","axiosInstance","DataFieldTable","useAxios","configure","Card","axios","TopicContainer","props","history","datafield","entities","typeEqualsTopic","tableData","Object","values","filter","data","loading","error","push","addMany","required","message","pattern","RegExp","title","dataIndex","key","className"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,QAAP,IAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,IAAT,QAAqB,MAArB;AAEAD,SAAS,CAAC;AACRE,EAAAA,KAAK,EAAEL;AADC,CAAD,CAAT;AAIA,eAAe,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAMC,OAAO,GAAGV,UAAU,EAA1B;;AAD4C,0BAEtBC,cAAc,EAFQ;AAAA,QAEpCU,SAFoC,mBAEpCA,SAFoC;;AAAA,QAGpCC,QAHoC,GAGND,SAHM,CAGpCC,QAHoC;AAAA,QAG1BC,eAH0B,GAGNF,SAHM,CAG1BE,eAH0B;AAK5C,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwBK,MAAxB,CAA+BJ,eAA/B,CAAlB;;AAL4C,oBAOTT,QAAQ,CAAC,wBAAD,CAPC;AAAA;AAAA;AAAA,QAOnCc,IAPmC,eAOnCA,IAPmC;AAAA,QAO7BC,OAP6B,eAO7BA,OAP6B;AAAA,QAOpBC,KAPoB,eAOpBA,KAPoB;;AAS5C,MAAIA,KAAJ,EAAW;AACTV,IAAAA,OAAO,CAACW,IAAR,CAAa,YAAb;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,IAAJ,EAAU;AACRP,MAAAA,SAAS,CAACW,OAAV,CAAkBJ,IAAlB;AACD;AACF,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAEE,KAAK,GAAG,EAAH,GAAQN,SADrB;AAEE,IAAA,KAAK,EAAEH,SAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAEQ,OAJX;AAKE,IAAA,KAAK,EAAE,CACL;AACEI,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AACED,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAE,kDAFX;AAGEC,MAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,qBAAX;AAHX,KALK,CALT;AAgBE,IAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAGEC,MAAAA,GAAG,EAAE,IAHP;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADO,EAOP;AACEH,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,GAAG,EAAE,MAHP;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPO,EAaP;AACEH,MAAAA,KAAK,EAAE,mBADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGEC,MAAAA,GAAG,EAAE,aAHP;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAbO,EAmBP;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,KAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAnBO,CAhBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA8CD;;cAjEuBrB,c,kHACNR,U,EACMC,c,EAKaG,Q;;;;;;;;;;;0BAPbI,c","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useGlobalStore from 'store/GlobalStore';\r\nimport axiosInstance from 'services/AxiosInstance';\r\nimport DataFieldTable from 'components/shared/DataFieldTable';\r\n\r\nimport useAxios, { configure } from 'axios-hooks';\r\nimport { Card } from 'antd';\r\n\r\nconfigure({\r\n  axios: axiosInstance,\r\n});\r\n\r\nexport default function TopicContainer(props) {\r\n  const history = useHistory();\r\n  const { datafield } = useGlobalStore();\r\n  const { entities, typeEqualsTopic } = datafield;\r\n\r\n  const tableData = Object.values(entities).filter(typeEqualsTopic);\r\n\r\n  const [{ data, loading, error }] = useAxios('/datafields?type=topic');\r\n\r\n  if (error) {\r\n    history.push('/error/500');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      datafield.addMany(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Card title=\"Topics\" className=\"shadow-md rounded-md\">\r\n      <DataFieldTable\r\n        data={error ? [] : tableData}\r\n        store={datafield}\r\n        type=\"topic\"\r\n        loading={loading}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please enter a topic name',\r\n          },\r\n          {\r\n            required: true,\r\n            message: '\"Others\" is already reserved. It cannot be used.',\r\n            pattern: new RegExp(/^(?!(Others)$).+$/gm),\r\n          },\r\n        ]}\r\n        columns={[\r\n          {\r\n            title: 'Cod',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            className: 'antd-col',\r\n          },\r\n          {\r\n            title: 'Topic Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            className: 'antd-col',\r\n          },\r\n          {\r\n            title: 'Topic Description',\r\n            dataIndex: 'description',\r\n            key: 'description',\r\n            className: 'antd-col',\r\n          },\r\n          {\r\n            title: 'add',\r\n            dataIndex: 'add',\r\n            key: 'add',\r\n          },\r\n        ]}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}